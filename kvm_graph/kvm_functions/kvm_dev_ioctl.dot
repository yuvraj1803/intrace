// subgraph node: kvm_dev_ioctl
// subgraph edge: kvm_dev_ioctl->kvm_dev_ioctl_create_vm
// subgraph node: kvm_dev_ioctl_create_vm
// subgraph edge: kvm_dev_ioctl_create_vm->IS_ERR
// subgraph node: IS_ERR
// subgraph edge: kvm_dev_ioctl_create_vm->PTR_ERR
// subgraph node: PTR_ERR
// subgraph edge: kvm_dev_ioctl_create_vm->kvm_put_kvm
// subgraph node: kvm_put_kvm
// subgraph edge: kvm_put_kvm->refcount_dec_and_test
// subgraph node: refcount_dec_and_test
// subgraph edge: kvm_put_kvm->kvm_destroy_vm
// subgraph node: kvm_destroy_vm
// subgraph edge: kvm_destroy_vm->WARN_ON
// subgraph node: WARN_ON
// subgraph edge: kvm_destroy_vm->list_del
// subgraph node: list_del
// subgraph edge: kvm_destroy_vm->mutex_lock
// subgraph node: mutex_lock
// subgraph edge: kvm_destroy_vm->mutex_unlock
// subgraph node: mutex_unlock
// subgraph edge: kvm_destroy_vm->kvm_destroy_pm_notifier
// subgraph node: kvm_destroy_pm_notifier
// subgraph edge: kvm_destroy_pm_notifier->unregister_pm_notifier
// subgraph node: unregister_pm_notifier
// subgraph edge: kvm_destroy_vm->kvm_uevent_notify_change
// subgraph node: kvm_uevent_notify_change
// subgraph edge: kvm_uevent_notify_change->IS_ERR
// subgraph edge: kvm_uevent_notify_change->kfree
// subgraph node: kfree
// subgraph edge: kvm_uevent_notify_change->mutex_lock
// subgraph edge: kvm_uevent_notify_change->mutex_unlock
// subgraph edge: kvm_uevent_notify_change->kzalloc
// subgraph node: kzalloc
// subgraph edge: kvm_uevent_notify_change->add_uevent_var
// subgraph node: add_uevent_var
// subgraph edge: kvm_uevent_notify_change->task_pid_nr
// subgraph node: task_pid_nr
// subgraph edge: kvm_uevent_notify_change->kmalloc
// subgraph node: kmalloc
// subgraph edge: kvm_uevent_notify_change->dentry_path_raw
// subgraph node: dentry_path_raw
// subgraph edge: kvm_uevent_notify_change->kobject_uevent_env
// subgraph node: kobject_uevent_env
// subgraph edge: kvm_destroy_vm->kvm_destroy_vm_debugfs
// subgraph node: kvm_destroy_vm_debugfs
// subgraph edge: kvm_destroy_vm_debugfs->IS_ERR
// subgraph edge: kvm_destroy_vm_debugfs->kfree
// subgraph edge: kvm_destroy_vm_debugfs->debugfs_remove_recursive
// subgraph node: debugfs_remove_recursive
// subgraph edge: kvm_destroy_vm->kvm_arch_sync_events
// subgraph node: kvm_arch_sync_events
// subgraph edge: kvm_destroy_vm->kvm_arch_pre_destroy_vm
// subgraph node: kvm_arch_pre_destroy_vm
// subgraph edge: kvm_destroy_vm->kvm_free_irq_routing
// subgraph node: kvm_free_irq_routing
// subgraph edge: kvm_free_irq_routing->rcu_access_pointer
// subgraph node: rcu_access_pointer
// subgraph edge: kvm_free_irq_routing->free_irq_routing_table
// subgraph node: free_irq_routing_table
// subgraph edge: free_irq_routing_table->kfree
// subgraph edge: free_irq_routing_table->hlist_for_each_entry_safe
// subgraph node: hlist_for_each_entry_safe
// subgraph edge: free_irq_routing_table->hlist_del
// subgraph node: hlist_del
// subgraph edge: kvm_destroy_vm->kvm_get_bus
// subgraph node: kvm_get_bus
// subgraph edge: kvm_destroy_vm->kvm_io_bus_destroy
// subgraph node: kvm_io_bus_destroy
// subgraph edge: kvm_io_bus_destroy->kfree
// subgraph edge: kvm_io_bus_destroy->kvm_iodevice_destructor
// subgraph node: kvm_iodevice_destructor
// subgraph edge: kvm_destroy_vm->kvm_coalesced_mmio_free
// subgraph node: kvm_coalesced_mmio_free
// subgraph edge: kvm_coalesced_mmio_free->free_page
// subgraph node: free_page
// subgraph edge: kvm_destroy_vm->mmu_notifier_unregister
// subgraph node: mmu_notifier_unregister
// subgraph edge: kvm_destroy_vm->rcuwait_active
// subgraph node: rcuwait_active
// subgraph edge: kvm_destroy_vm->kvm_flush_shadow_all
// subgraph node: kvm_flush_shadow_all
// subgraph edge: kvm_flush_shadow_all->kvm_arch_flush_shadow_all
// subgraph node: kvm_arch_flush_shadow_all
// subgraph edge: kvm_arch_flush_shadow_all->kvm_uninit_stage2_mmu
// subgraph node: kvm_uninit_stage2_mmu
// subgraph edge: kvm_uninit_stage2_mmu->kvm_free_stage2_pgd
// subgraph node: kvm_free_stage2_pgd
// subgraph edge: kvm_free_stage2_pgd->write_lock
// subgraph node: write_lock
// subgraph edge: kvm_free_stage2_pgd->write_unlock
// subgraph node: write_unlock
// subgraph edge: kvm_free_stage2_pgd->kfree
// subgraph edge: kvm_free_stage2_pgd->kvm_s2_mmu_to_kvm
// subgraph node: kvm_s2_mmu_to_kvm
// subgraph edge: kvm_free_stage2_pgd->free_percpu
// subgraph node: free_percpu
// subgraph edge: kvm_free_stage2_pgd->kvm_pgtable_stage2_destroy
// subgraph node: kvm_pgtable_stage2_destroy
// subgraph edge: kvm_uninit_stage2_mmu->kvm_mmu_free_memory_cache
// subgraph node: kvm_mmu_free_memory_cache
// subgraph edge: kvm_mmu_free_memory_cache->free_page
// subgraph edge: kvm_mmu_free_memory_cache->kmem_cache_free
// subgraph node: kmem_cache_free
// subgraph edge: kvm_mmu_free_memory_cache->kvfree
// subgraph node: kvfree
// subgraph edge: kvm_flush_shadow_all->kvm_arch_guest_memory_reclaimed
// subgraph node: kvm_arch_guest_memory_reclaimed
// subgraph edge: kvm_destroy_vm->kvm_arch_destroy_vm
// subgraph node: kvm_arch_destroy_vm
// subgraph edge: kvm_arch_destroy_vm->kfree
// subgraph edge: kvm_arch_destroy_vm->is_protected_kvm_enabled
// subgraph node: is_protected_kvm_enabled
// subgraph edge: kvm_arch_destroy_vm->free_cpumask_var
// subgraph node: free_cpumask_var
// subgraph edge: kvm_arch_destroy_vm->bitmap_free
// subgraph node: bitmap_free
// subgraph edge: kvm_arch_destroy_vm->kvm_vgic_destroy
// subgraph node: kvm_vgic_destroy
// subgraph edge: kvm_arch_destroy_vm->pkvm_destroy_hyp_vm
// subgraph node: pkvm_destroy_hyp_vm
// subgraph edge: pkvm_destroy_hyp_vm->mutex_lock
// subgraph edge: pkvm_destroy_hyp_vm->mutex_unlock
// subgraph edge: kvm_arch_destroy_vm->kvm_destroy_vcpus
// subgraph node: kvm_destroy_vcpus
// subgraph edge: kvm_destroy_vcpus->kvm_for_each_vcpu
// subgraph node: kvm_for_each_vcpu
// subgraph edge: kvm_destroy_vcpus->kvm_vcpu_destroy
// subgraph node: kvm_vcpu_destroy
// subgraph edge: kvm_vcpu_destroy->free_page
// subgraph edge: kvm_vcpu_destroy->kmem_cache_free
// subgraph edge: kvm_vcpu_destroy->kvm_arch_vcpu_destroy
// subgraph node: kvm_arch_vcpu_destroy
// subgraph edge: kvm_arch_vcpu_destroy->unlikely
// subgraph node: unlikely
// subgraph edge: kvm_arch_vcpu_destroy->irqchip_in_kernel
// subgraph node: irqchip_in_kernel
// subgraph edge: kvm_arch_vcpu_destroy->kvm_mmu_free_memory_cache
// subgraph edge: kvm_arch_vcpu_destroy->vcpu_has_run_once
// subgraph node: vcpu_has_run_once
// subgraph edge: kvm_arch_vcpu_destroy->static_branch_dec
// subgraph node: static_branch_dec
// subgraph edge: kvm_arch_vcpu_destroy->kvm_timer_vcpu_terminate
// subgraph node: kvm_timer_vcpu_terminate
// subgraph edge: kvm_timer_vcpu_terminate->soft_timer_cancel
// subgraph node: soft_timer_cancel
// subgraph edge: soft_timer_cancel->hrtimer_cancel
// subgraph node: hrtimer_cancel
// subgraph edge: kvm_timer_vcpu_terminate->vcpu_timer
// subgraph node: vcpu_timer
// subgraph edge: kvm_arch_vcpu_destroy->kvm_pmu_vcpu_destroy
// subgraph node: kvm_pmu_vcpu_destroy
// subgraph edge: kvm_pmu_vcpu_destroy->kvm_vcpu_idx_to_pmc
// subgraph node: kvm_vcpu_idx_to_pmc
// subgraph edge: kvm_pmu_vcpu_destroy->kvm_pmu_release_perf_event
// subgraph node: kvm_pmu_release_perf_event
// subgraph edge: kvm_pmu_release_perf_event->perf_event_disable
// subgraph node: perf_event_disable
// subgraph edge: kvm_pmu_release_perf_event->perf_event_release_kernel
// subgraph node: perf_event_release_kernel
// subgraph edge: kvm_pmu_vcpu_destroy->irq_work_sync
// subgraph node: irq_work_sync
// subgraph edge: kvm_arch_vcpu_destroy->kvm_vgic_vcpu_destroy
// subgraph node: kvm_vgic_vcpu_destroy
// subgraph edge: kvm_arch_vcpu_destroy->kvm_arm_vcpu_destroy
// subgraph node: kvm_arm_vcpu_destroy
// subgraph edge: kvm_arm_vcpu_destroy->kfree
// subgraph edge: kvm_arm_vcpu_destroy->kvm_unshare_hyp
// subgraph node: kvm_unshare_hyp
// subgraph edge: kvm_unshare_hyp->WARN_ON
// subgraph edge: kvm_unshare_hyp->is_kernel_in_hyp_mode
// subgraph node: is_kernel_in_hyp_mode
// subgraph edge: kvm_unshare_hyp->ALIGN_DOWN
// subgraph node: ALIGN_DOWN
// subgraph edge: kvm_unshare_hyp->kvm_host_owns_hyp_mappings
// subgraph node: kvm_host_owns_hyp_mappings
// subgraph edge: kvm_host_owns_hyp_mappings->WARN_ON
// subgraph edge: kvm_host_owns_hyp_mappings->is_protected_kvm_enabled
// subgraph edge: kvm_host_owns_hyp_mappings->is_kernel_in_hyp_mode
// subgraph edge: kvm_host_owns_hyp_mappings->static_branch_likely
// subgraph node: static_branch_likely
// subgraph edge: kvm_unshare_hyp->PAGE_ALIGN
// subgraph node: PAGE_ALIGN
// subgraph edge: kvm_unshare_hyp->unshare_pfn_hyp
// subgraph node: unshare_pfn_hyp
// subgraph edge: unshare_pfn_hyp->WARN_ON
// subgraph edge: unshare_pfn_hyp->kfree
// subgraph edge: unshare_pfn_hyp->mutex_lock
// subgraph edge: unshare_pfn_hyp->mutex_unlock
// subgraph edge: unshare_pfn_hyp->kvm_call_hyp_nvhe
// subgraph node: kvm_call_hyp_nvhe
// subgraph edge: unshare_pfn_hyp->find_shared_pfn
// subgraph node: find_shared_pfn
// subgraph edge: find_shared_pfn->container_of
// subgraph node: container_of
// subgraph edge: unshare_pfn_hyp->rb_erase
// subgraph node: rb_erase
// subgraph edge: kvm_arm_vcpu_destroy->kvm_vcpu_unshare_task_fp
// subgraph node: kvm_vcpu_unshare_task_fp
// subgraph edge: kvm_vcpu_unshare_task_fp->is_protected_kvm_enabled
// subgraph edge: kvm_vcpu_unshare_task_fp->kvm_unshare_hyp
// subgraph edge: kvm_vcpu_unshare_task_fp->put_task_struct
// subgraph node: put_task_struct
// subgraph edge: kvm_arm_vcpu_destroy->vcpu_sve_state_size
// subgraph node: vcpu_sve_state_size
// subgraph edge: kvm_vcpu_destroy->kvm_dirty_ring_free
// subgraph node: kvm_dirty_ring_free
// subgraph edge: kvm_dirty_ring_free->vfree
// subgraph node: vfree
// subgraph edge: kvm_vcpu_destroy->put_pid
// subgraph node: put_pid
// subgraph edge: kvm_vcpu_destroy->rcu_dereference_protected
// subgraph node: rcu_dereference_protected
// subgraph edge: kvm_destroy_vcpus->xa_erase
// subgraph node: xa_erase
// subgraph edge: kvm_destroy_vcpus->atomic_set
// subgraph node: atomic_set
// subgraph edge: kvm_arch_destroy_vm->kvm_unshare_hyp
// subgraph edge: kvm_arch_destroy_vm->kvm_arm_teardown_hypercalls
// subgraph node: kvm_arm_teardown_hypercalls
// subgraph edge: kvm_arm_teardown_hypercalls->mtree_destroy
// subgraph node: mtree_destroy
// subgraph edge: kvm_destroy_vm->kvm_destroy_devices
// subgraph node: kvm_destroy_devices
// subgraph edge: kvm_destroy_devices->list_del
// subgraph edge: kvm_destroy_devices->list_for_each_entry_safe
// subgraph node: list_for_each_entry_safe
// subgraph edge: kvm_destroy_vm->kvm_free_memslots
// subgraph node: kvm_free_memslots
// subgraph edge: kvm_free_memslots->hash_for_each_safe
// subgraph node: hash_for_each_safe
// subgraph edge: kvm_free_memslots->kvm_free_memslot
// subgraph node: kvm_free_memslot
// subgraph edge: kvm_free_memslot->kfree
// subgraph edge: kvm_free_memslot->kvm_destroy_dirty_bitmap
// subgraph node: kvm_destroy_dirty_bitmap
// subgraph edge: kvm_destroy_dirty_bitmap->kvfree
// subgraph edge: kvm_free_memslot->kvm_arch_free_memslot
// subgraph node: kvm_arch_free_memslot
// subgraph edge: kvm_destroy_vm->cleanup_srcu_struct
// subgraph node: cleanup_srcu_struct
// subgraph edge: kvm_destroy_vm->kvm_arch_free_vm
// subgraph node: kvm_arch_free_vm
// subgraph edge: kvm_destroy_vm->preempt_notifier_dec
// subgraph node: preempt_notifier_dec
// subgraph edge: kvm_destroy_vm->hardware_disable_all
// subgraph node: hardware_disable_all
// subgraph edge: hardware_disable_all->mutex_lock
// subgraph edge: hardware_disable_all->mutex_unlock
// subgraph edge: hardware_disable_all->cpus_read_lock
// subgraph node: cpus_read_lock
// subgraph edge: hardware_disable_all->hardware_disable_all_nolock
// subgraph node: hardware_disable_all_nolock
// subgraph edge: hardware_disable_all_nolock->BUG_ON
// subgraph node: BUG_ON
// subgraph edge: hardware_disable_all_nolock->on_each_cpu
// subgraph node: on_each_cpu
// subgraph edge: hardware_disable_all_nolock->hardware_disable_nolock
// subgraph node: hardware_disable_nolock
// subgraph edge: hardware_disable_nolock->kvm_arch_hardware_disable
// subgraph node: kvm_arch_hardware_disable
// subgraph edge: kvm_arch_hardware_disable->is_protected_kvm_enabled
// subgraph edge: kvm_arch_hardware_disable->cpu_hyp_uninit
// subgraph node: cpu_hyp_uninit
// subgraph edge: cpu_hyp_uninit->cpu_hyp_reset
// subgraph node: cpu_hyp_reset
// subgraph edge: cpu_hyp_reset->is_kernel_in_hyp_mode
// subgraph edge: kvm_arch_hardware_disable->kvm_timer_cpu_down
// subgraph node: kvm_timer_cpu_down
// subgraph edge: kvm_timer_cpu_down->disable_percpu_irq
// subgraph node: disable_percpu_irq
// subgraph edge: kvm_arch_hardware_disable->kvm_vgic_cpu_down
// subgraph node: kvm_vgic_cpu_down
// subgraph edge: hardware_disable_all->cpus_read_unlock
// subgraph node: cpus_read_unlock
// subgraph edge: kvm_destroy_vm->mmdrop
// subgraph node: mmdrop
// subgraph edge: kvm_dev_ioctl_create_vm->kvm_uevent_notify_change
// subgraph edge: kvm_dev_ioctl_create_vm->get_unused_fd_flags
// subgraph node: get_unused_fd_flags
// subgraph edge: kvm_dev_ioctl_create_vm->snprintf
// subgraph node: snprintf
// subgraph edge: kvm_dev_ioctl_create_vm->kvm_create_vm
// subgraph node: kvm_create_vm
// subgraph edge: kvm_create_vm->kfree
// subgraph edge: kvm_create_vm->mutex_lock
// subgraph edge: kvm_create_vm->mutex_unlock
// subgraph edge: kvm_create_vm->WARN_ON_ONCE
// subgraph node: WARN_ON_ONCE
// subgraph edge: kvm_create_vm->BUILD_BUG_ON
// subgraph node: BUILD_BUG_ON
// subgraph edge: kvm_create_vm->kzalloc
// subgraph edge: kvm_create_vm->INIT_LIST_HEAD
// subgraph node: INIT_LIST_HEAD
// subgraph edge: kvm_create_vm->refcount_dec_and_test
// subgraph edge: kvm_create_vm->kvm_destroy_vm_debugfs
// subgraph edge: kvm_create_vm->kvm_get_bus
// subgraph edge: kvm_create_vm->kvm_coalesced_mmio_free
// subgraph edge: kvm_create_vm->mmu_notifier_unregister
// subgraph edge: kvm_create_vm->kvm_arch_destroy_vm
// subgraph edge: kvm_create_vm->cleanup_srcu_struct
// subgraph edge: kvm_create_vm->kvm_arch_free_vm
// subgraph edge: kvm_create_vm->hardware_disable_all
// subgraph edge: kvm_create_vm->mmdrop
// subgraph edge: kvm_create_vm->task_pid_nr
// subgraph edge: kvm_create_vm->snprintf
// subgraph edge: kvm_create_vm->kvm_arch_alloc_vm
// subgraph node: kvm_arch_alloc_vm
// subgraph edge: kvm_arch_alloc_vm->has_vhe
// subgraph node: has_vhe
// subgraph edge: kvm_arch_alloc_vm->kzalloc
// subgraph edge: kvm_create_vm->ERR_PTR
// subgraph node: ERR_PTR
// subgraph edge: kvm_create_vm->KVM_MMU_LOCK_INIT
// subgraph node: KVM_MMU_LOCK_INIT
// subgraph edge: kvm_create_vm->mmgrab
// subgraph node: mmgrab
// subgraph edge: kvm_create_vm->kvm_eventfd_init
// subgraph node: kvm_eventfd_init
// subgraph edge: kvm_eventfd_init->INIT_LIST_HEAD
// subgraph edge: kvm_eventfd_init->mutex_init
// subgraph node: mutex_init
// subgraph edge: kvm_eventfd_init->spin_lock_init
// subgraph node: spin_lock_init
// subgraph edge: kvm_create_vm->mutex_init
// subgraph edge: kvm_create_vm->spin_lock_init
// subgraph edge: kvm_create_vm->rcuwait_init
// subgraph node: rcuwait_init
// subgraph edge: kvm_create_vm->xa_init
// subgraph node: xa_init
// subgraph edge: kvm_create_vm->init_srcu_struct
// subgraph node: init_srcu_struct
// subgraph edge: kvm_create_vm->refcount_set
// subgraph node: refcount_set
// subgraph edge: kvm_create_vm->atomic_long_set
// subgraph node: atomic_long_set
// subgraph edge: kvm_create_vm->hash_init
// subgraph node: hash_init
// subgraph edge: kvm_create_vm->rcu_assign_pointer
// subgraph node: rcu_assign_pointer
// subgraph edge: kvm_create_vm->kvm_arch_init_vm
// subgraph node: kvm_arch_init_vm
// subgraph edge: kvm_arch_init_vm->mutex_lock
// subgraph edge: kvm_arch_init_vm->mutex_unlock
// subgraph edge: kvm_arch_init_vm->free_cpumask_var
// subgraph edge: kvm_arch_init_vm->kvm_unshare_hyp
// subgraph edge: kvm_arch_init_vm->mutex_init
// subgraph edge: kvm_arch_init_vm->kvm_share_hyp
// subgraph node: kvm_share_hyp
// subgraph edge: kvm_share_hyp->is_kernel_in_hyp_mode
// subgraph edge: kvm_share_hyp->create_hyp_mappings
// subgraph node: create_hyp_mappings
// subgraph edge: create_hyp_mappings->is_kernel_in_hyp_mode
// subgraph edge: create_hyp_mappings->kern_hyp_va
// subgraph node: kern_hyp_va
// subgraph edge: create_hyp_mappings->kvm_host_owns_hyp_mappings
// subgraph edge: create_hyp_mappings->PAGE_ALIGN
// subgraph edge: create_hyp_mappings->kvm_kaddr_to_phys
// subgraph node: kvm_kaddr_to_phys
// subgraph edge: kvm_kaddr_to_phys->BUG_ON
// subgraph edge: kvm_kaddr_to_phys->is_vmalloc_addr
// subgraph node: is_vmalloc_addr
// subgraph edge: kvm_kaddr_to_phys->virt_addr_valid
// subgraph node: virt_addr_valid
// subgraph edge: kvm_kaddr_to_phys->page_to_phys
// subgraph node: page_to_phys
// subgraph edge: kvm_kaddr_to_phys->vmalloc_to_page
// subgraph node: vmalloc_to_page
// subgraph edge: kvm_kaddr_to_phys->offset_in_page
// subgraph node: offset_in_page
// subgraph edge: kvm_share_hyp->ALIGN_DOWN
// subgraph edge: kvm_share_hyp->kvm_host_owns_hyp_mappings
// subgraph edge: kvm_share_hyp->PAGE_ALIGN
// subgraph edge: kvm_share_hyp->is_vmalloc_or_module_addr
// subgraph node: is_vmalloc_or_module_addr
// subgraph edge: kvm_share_hyp->share_pfn_hyp
// subgraph node: share_pfn_hyp
// subgraph edge: share_pfn_hyp->mutex_lock
// subgraph edge: share_pfn_hyp->mutex_unlock
// subgraph edge: share_pfn_hyp->kvm_call_hyp_nvhe
// subgraph edge: share_pfn_hyp->kzalloc
// subgraph edge: share_pfn_hyp->find_shared_pfn
// subgraph edge: share_pfn_hyp->rb_link_node
// subgraph node: rb_link_node
// subgraph edge: share_pfn_hyp->rb_insert_color
// subgraph node: rb_insert_color
// subgraph edge: kvm_arch_init_vm->pkvm_init_host_vm
// subgraph node: pkvm_init_host_vm
// subgraph edge: pkvm_init_host_vm->mutex_init
// subgraph edge: kvm_arch_init_vm->zalloc_cpumask_var
// subgraph node: zalloc_cpumask_var
// subgraph edge: kvm_arch_init_vm->cpumask_copy
// subgraph node: cpumask_copy
// subgraph edge: kvm_arch_init_vm->kvm_init_stage2_mmu
// subgraph node: kvm_init_stage2_mmu
// subgraph edge: kvm_init_stage2_mmu->read_sanitised_ftr_reg
// subgraph node: read_sanitised_ftr_reg
// subgraph edge: kvm_init_stage2_mmu->kfree
// subgraph edge: kvm_init_stage2_mmu->is_protected_kvm_enabled
// subgraph edge: kvm_init_stage2_mmu->pr_warn_once
// subgraph node: pr_warn_once
// subgraph edge: kvm_init_stage2_mmu->kvm_err
// subgraph node: kvm_err
// subgraph edge: kvm_init_stage2_mmu->typeof
// subgraph node: typeof
// subgraph edge: kvm_init_stage2_mmu->for_each_possible_cpu
// subgraph node: for_each_possible_cpu
// subgraph edge: kvm_init_stage2_mmu->kzalloc
// subgraph edge: kvm_init_stage2_mmu->kvm_pgtable_stage2_destroy
// subgraph edge: kvm_init_stage2_mmu->get_kvm_ipa_limit
// subgraph node: get_kvm_ipa_limit
// subgraph edge: kvm_init_stage2_mmu->KVM_VM_TYPE_ARM_IPA_SIZE
// subgraph node: KVM_VM_TYPE_ARM_IPA_SIZE
// subgraph edge: kvm_init_stage2_mmu->kvm_get_vtcr
// subgraph node: kvm_get_vtcr
// subgraph edge: kvm_init_stage2_mmu->kvm_pgtable_stage2_init
// subgraph node: kvm_pgtable_stage2_init
// subgraph edge: kvm_init_stage2_mmu->alloc_percpu
// subgraph node: alloc_percpu
// subgraph edge: kvm_init_stage2_mmu->per_cpu_ptr
// subgraph node: per_cpu_ptr
// subgraph edge: kvm_arch_init_vm->kvm_vgic_early_init
// subgraph node: kvm_vgic_early_init
// subgraph edge: kvm_arch_init_vm->kvm_timer_init_vm
// subgraph node: kvm_timer_init_vm
// subgraph edge: kvm_arch_init_vm->kvm_arm_default_max_vcpus
// subgraph node: kvm_arm_default_max_vcpus
// subgraph edge: kvm_arm_default_max_vcpus->kvm_vgic_get_max_vcpus
// subgraph node: kvm_vgic_get_max_vcpus
// subgraph edge: kvm_arch_init_vm->kvm_arm_init_hypercalls
// subgraph node: kvm_arm_init_hypercalls
// subgraph edge: kvm_arm_init_hypercalls->mt_init
// subgraph node: mt_init
// subgraph edge: kvm_arch_init_vm->bitmap_zero
// subgraph node: bitmap_zero
// subgraph edge: kvm_create_vm->hardware_enable_all
// subgraph node: hardware_enable_all
// subgraph edge: hardware_enable_all->on_each_cpu
// subgraph edge: hardware_enable_all->mutex_lock
// subgraph edge: hardware_enable_all->mutex_unlock
// subgraph edge: hardware_enable_all->cpus_read_lock
// subgraph edge: hardware_enable_all->hardware_disable_all_nolock
// subgraph edge: hardware_enable_all->cpus_read_unlock
// subgraph edge: hardware_enable_all->ATOMIC_INIT
// subgraph node: ATOMIC_INIT
// subgraph edge: hardware_enable_all->hardware_enable_nolock
// subgraph node: hardware_enable_nolock
// subgraph edge: hardware_enable_nolock->atomic_inc
// subgraph node: atomic_inc
// subgraph edge: hardware_enable_all->atomic_read
// subgraph node: atomic_read
// subgraph edge: kvm_create_vm->INIT_HLIST_HEAD
// subgraph node: INIT_HLIST_HEAD
// subgraph edge: kvm_create_vm->kvm_init_mmu_notifier
// subgraph node: kvm_init_mmu_notifier
// subgraph edge: kvm_init_mmu_notifier->mmu_notifier_register
// subgraph node: mmu_notifier_register
// subgraph edge: kvm_create_vm->kvm_coalesced_mmio_init
// subgraph node: kvm_coalesced_mmio_init
// subgraph edge: kvm_coalesced_mmio_init->page_address
// subgraph node: page_address
// subgraph edge: kvm_coalesced_mmio_init->INIT_LIST_HEAD
// subgraph edge: kvm_coalesced_mmio_init->spin_lock_init
// subgraph edge: kvm_coalesced_mmio_init->alloc_page
// subgraph node: alloc_page
// subgraph edge: kvm_create_vm->kvm_create_vm_debugfs
// subgraph node: kvm_create_vm_debugfs
// subgraph edge: kvm_create_vm_debugfs->IS_ERR
// subgraph edge: kvm_create_vm_debugfs->mutex_lock
// subgraph edge: kvm_create_vm_debugfs->mutex_unlock
// subgraph edge: kvm_create_vm_debugfs->kzalloc
// subgraph edge: kvm_create_vm_debugfs->debugfs_create_dir
// subgraph node: debugfs_create_dir
// subgraph edge: kvm_create_vm_debugfs->kvm_stats_debugfs_mode
// subgraph node: kvm_stats_debugfs_mode
// subgraph edge: kvm_create_vm_debugfs->debugfs_create_file
// subgraph node: debugfs_create_file
// subgraph edge: kvm_create_vm_debugfs->kvm_destroy_vm_debugfs
// subgraph edge: kvm_create_vm_debugfs->task_pid_nr
// subgraph edge: kvm_create_vm_debugfs->snprintf
// subgraph edge: kvm_create_vm_debugfs->debugfs_initialized
// subgraph node: debugfs_initialized
// subgraph edge: kvm_create_vm_debugfs->debugfs_lookup
// subgraph node: debugfs_lookup
// subgraph edge: kvm_create_vm_debugfs->pr_warn_ratelimited
// subgraph node: pr_warn_ratelimited
// subgraph edge: kvm_create_vm_debugfs->dput
// subgraph node: dput
// subgraph edge: kvm_create_vm_debugfs->kcalloc
// subgraph node: kcalloc
// subgraph edge: kvm_create_vm_debugfs->kvm_arch_create_vm_debugfs
// subgraph node: kvm_arch_create_vm_debugfs
// subgraph edge: kvm_create_vm->kvm_arch_post_init_vm
// subgraph node: kvm_arch_post_init_vm
// subgraph edge: kvm_create_vm->list_add
// subgraph node: list_add
// subgraph edge: kvm_create_vm->preempt_notifier_inc
// subgraph node: preempt_notifier_inc
// subgraph edge: kvm_create_vm->kvm_init_pm_notifier
// subgraph node: kvm_init_pm_notifier
// subgraph edge: kvm_init_pm_notifier->kvm_pm_notifier_call
// subgraph node: kvm_pm_notifier_call
// subgraph edge: kvm_pm_notifier_call->container_of
// subgraph edge: kvm_pm_notifier_call->kvm_arch_pm_notifier
// subgraph node: kvm_arch_pm_notifier
// subgraph edge: kvm_init_pm_notifier->register_pm_notifier
// subgraph node: register_pm_notifier
// subgraph edge: kvm_dev_ioctl_create_vm->anon_inode_getfile
// subgraph node: anon_inode_getfile
// subgraph edge: kvm_dev_ioctl_create_vm->fd_install
// subgraph node: fd_install
// subgraph edge: kvm_dev_ioctl_create_vm->put_unused_fd
// subgraph node: put_unused_fd
// subgraph edge: kvm_dev_ioctl->kvm_vm_ioctl_check_extension_generic
// subgraph node: kvm_vm_ioctl_check_extension_generic
// subgraph edge: kvm_vm_ioctl_check_extension_generic->kvm_vm_ioctl_check_extension
// subgraph node: kvm_vm_ioctl_check_extension
// subgraph edge: kvm_vm_ioctl_check_extension->cpus_have_final_cap
// subgraph node: cpus_have_final_cap
// subgraph edge: kvm_vm_ioctl_check_extension->BIT
// subgraph node: BIT
// subgraph edge: kvm_vm_ioctl_check_extension->kvm_arm_support_pmu_v3
// subgraph node: kvm_arm_support_pmu_v3
// subgraph edge: kvm_vm_ioctl_check_extension->system_supports_sve
// subgraph node: system_supports_sve
// subgraph edge: kvm_vm_ioctl_check_extension->kvm_arm_default_max_vcpus
// subgraph edge: kvm_vm_ioctl_check_extension->get_kvm_ipa_limit
// subgraph edge: kvm_vm_ioctl_check_extension->min_t
// subgraph node: min_t
// subgraph edge: kvm_vm_ioctl_check_extension->num_online_cpus
// subgraph node: num_online_cpus
// subgraph edge: kvm_vm_ioctl_check_extension->system_supports_mte
// subgraph node: system_supports_mte
// subgraph edge: kvm_vm_ioctl_check_extension->kvm_arm_pvtime_supported
// subgraph node: kvm_arm_pvtime_supported
// subgraph edge: kvm_arm_pvtime_supported->sched_info_on
// subgraph node: sched_info_on
// subgraph edge: kvm_vm_ioctl_check_extension->get_num_brps
// subgraph node: get_num_brps
// subgraph edge: kvm_vm_ioctl_check_extension->get_num_wrps
// subgraph node: get_num_wrps
// subgraph edge: kvm_vm_ioctl_check_extension->system_has_full_ptr_auth
// subgraph node: system_has_full_ptr_auth
// subgraph edge: kvm_vm_ioctl_check_extension->kvm_supported_block_sizes
// subgraph node: kvm_supported_block_sizes
// subgraph edge: kvm_dev_ioctl->kvm_arch_dev_ioctl
// subgraph node: kvm_arch_dev_ioctl
digraph gvpr_result {
	node [shape=box];
	soft_timer_cancel	[label="void soft_timer_cancel (struct hrtimer *hrt)
arch/arm64/kvm/arch_timer.c:219"];
	hrtimer_cancel	[label="hrtimer_cancel()"];
	soft_timer_cancel -> hrtimer_cancel;
	has_vhe	[label="has_vhe()"];
	WARN_ON	[label="WARN_ON()"];
	unlikely	[label="unlikely()"];
	irqchip_in_kernel	[label="irqchip_in_kernel()"];
	vcpu_timer	[label="vcpu_timer()"];
	read_sanitised_ftr_reg	[label="read_sanitised_ftr_reg()"];
	cpus_have_final_cap	[label="cpus_have_final_cap()"];
	write_lock	[label="write_lock()"];
	write_unlock	[label="write_unlock()"];
	BUG_ON	[label="BUG_ON()"];
	BIT	[label="BIT()"];
	kvm_vcpu_idx_to_pmc	[label="struct kvm_pmc *kvm_vcpu_idx_to_pmc (struct kvm_vcpu *vcpu, int cnt_idx)
arch/arm64/kvm/pmu-emul.c:34"];
	IS_ERR	[label="IS_ERR()"];
	PTR_ERR	[label="PTR_ERR()"];
	container_of	[label="container_of()"];
	kvm_pmu_release_perf_event	[label="void kvm_pmu_release_perf_event (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:194"];
	perf_event_disable	[label="perf_event_disable()"];
	kvm_pmu_release_perf_event -> perf_event_disable;
	perf_event_release_kernel	[label="perf_event_release_kernel()"];
	kvm_pmu_release_perf_event -> perf_event_release_kernel;
	kvm_arm_support_pmu_v3	[label="kvm_arm_support_pmu_v3()"];
	list_del	[label="list_del()"];
	kfree	[label="kfree()"];
	is_protected_kvm_enabled	[label="is_protected_kvm_enabled()"];
	is_kernel_in_hyp_mode	[label="is_kernel_in_hyp_mode()"];
	pr_warn_once	[label="pr_warn_once()"];
	on_each_cpu	[label="on_each_cpu()"];
	mutex_lock	[label="mutex_lock()"];
	mutex_unlock	[label="mutex_unlock()"];
	WARN_ON_ONCE	[label="WARN_ON_ONCE()"];
	kvm_err	[label="kvm_err()"];
	system_supports_sve	[label="system_supports_sve()"];
	static_branch_likely	[label="static_branch_likely()"];
	disable_percpu_irq	[label="disable_percpu_irq()"];
	typeof	[label="typeof()"];
	kvm_for_each_vcpu	[label="kvm_for_each_vcpu()"];
	cpu_hyp_reset	[label="void cpu_hyp_reset (void)
arch/arm64/kvm/arm.c:1914"];
	cpu_hyp_reset -> is_kernel_in_hyp_mode;
	kvm_call_hyp_nvhe	[label="kvm_call_hyp_nvhe()"];
	BUILD_BUG_ON	[label="BUILD_BUG_ON()"];
	for_each_possible_cpu	[label="for_each_possible_cpu()"];
	page_address	[label="page_address()"];
	create_hyp_mappings	[label="int create_hyp_mappings (void *from, void *to, enum kvm_pgtable_prot prot)
arch/arm64/kvm/mmu.c:574"];
	create_hyp_mappings -> is_kernel_in_hyp_mode;
	kern_hyp_va	[label="kern_hyp_va()"];
	create_hyp_mappings -> kern_hyp_va;
	kvm_host_owns_hyp_mappings	[label="bool kvm_host_owns_hyp_mappings (void)
arch/arm64/kvm/mmu.c:383"];
	create_hyp_mappings -> kvm_host_owns_hyp_mappings;
	PAGE_ALIGN	[label="PAGE_ALIGN()"];
	create_hyp_mappings -> PAGE_ALIGN;
	kvm_kaddr_to_phys	[label="phys_addr_t kvm_kaddr_to_phys (void *kaddr)
arch/arm64/kvm/mmu.c:419"];
	create_hyp_mappings -> kvm_kaddr_to_phys;
	ALIGN_DOWN	[label="ALIGN_DOWN()"];
	kzalloc	[label="kzalloc()"];
	kvm_host_owns_hyp_mappings -> WARN_ON;
	kvm_host_owns_hyp_mappings -> is_protected_kvm_enabled;
	kvm_host_owns_hyp_mappings -> is_kernel_in_hyp_mode;
	kvm_host_owns_hyp_mappings -> static_branch_likely;
	kvm_kaddr_to_phys -> BUG_ON;
	is_vmalloc_addr	[label="is_vmalloc_addr()"];
	kvm_kaddr_to_phys -> is_vmalloc_addr;
	virt_addr_valid	[label="virt_addr_valid()"];
	kvm_kaddr_to_phys -> virt_addr_valid;
	page_to_phys	[label="page_to_phys()"];
	kvm_kaddr_to_phys -> page_to_phys;
	vmalloc_to_page	[label="vmalloc_to_page()"];
	kvm_kaddr_to_phys -> vmalloc_to_page;
	offset_in_page	[label="offset_in_page()"];
	kvm_kaddr_to_phys -> offset_in_page;
	free_page	[label="free_page()"];
	cpu_hyp_uninit	[label="void cpu_hyp_uninit (void *discard)
arch/arm64/kvm/arm.c:1986"];
	cpu_hyp_uninit -> cpu_hyp_reset;
	free_cpumask_var	[label="free_cpumask_var()"];
	hardware_disable_nolock	[label="void hardware_disable_nolock (void *junk)
virt/kvm/kvm_main.c:5210"];
	kvm_arch_hardware_disable	[label="void kvm_arch_hardware_disable (void)
arch/arm64/kvm/arm.c:2014"];
	hardware_disable_nolock -> kvm_arch_hardware_disable;
	kvm_arch_hardware_disable -> is_protected_kvm_enabled;
	kvm_arch_hardware_disable -> cpu_hyp_uninit;
	kvm_timer_cpu_down	[label="void kvm_timer_cpu_down (void)
arch/arm64/kvm/arch_timer.c:1042"];
	kvm_arch_hardware_disable -> kvm_timer_cpu_down;
	kvm_vgic_cpu_down	[label="kvm_vgic_cpu_down()"];
	kvm_arch_hardware_disable -> kvm_vgic_cpu_down;
	kvm_timer_cpu_down -> disable_percpu_irq;
	debugfs_create_dir	[label="debugfs_create_dir()"];
	kvm_stats_debugfs_mode	[label="umode_t kvm_stats_debugfs_mode (const struct _kvm_stats_desc *pdesc)
virt/kvm/kvm_main.c:1014"];
	debugfs_create_file	[label="debugfs_create_file()"];
	bitmap_free	[label="bitmap_free()"];
	INIT_LIST_HEAD	[label="INIT_LIST_HEAD()"];
	kmem_cache_free	[label="kmem_cache_free()"];
	kvm_put_kvm	[label="void kvm_put_kvm (struct kvm *kvm)
virt/kvm/kvm_main.c:1363"];
	refcount_dec_and_test	[label="refcount_dec_and_test()"];
	kvm_put_kvm -> refcount_dec_and_test;
	kvm_destroy_vm	[label="void kvm_destroy_vm (struct kvm *kvm)
virt/kvm/kvm_main.c:1295"];
	kvm_put_kvm -> kvm_destroy_vm;
	kvm_destroy_vm -> WARN_ON;
	kvm_destroy_vm -> list_del;
	kvm_destroy_vm -> mutex_lock;
	kvm_destroy_vm -> mutex_unlock;
	kvm_destroy_pm_notifier	[label="void kvm_destroy_pm_notifier (struct kvm *kvm)
virt/kvm/kvm_main.c:971"];
	kvm_destroy_vm -> kvm_destroy_pm_notifier;
	kvm_uevent_notify_change	[label="void kvm_uevent_notify_change (unsigned int type, struct kvm *kvm)
virt/kvm/kvm_main.c:5863"];
	kvm_destroy_vm -> kvm_uevent_notify_change;
	kvm_destroy_vm_debugfs	[label="void kvm_destroy_vm_debugfs (struct kvm *kvm)
virt/kvm/kvm_main.c:1027"];
	kvm_destroy_vm -> kvm_destroy_vm_debugfs;
	kvm_arch_sync_events	[label="kvm_arch_sync_events()"];
	kvm_destroy_vm -> kvm_arch_sync_events;
	kvm_arch_pre_destroy_vm	[label="void __weak kvm_arch_pre_destroy_vm (struct kvm *kvm)
virt/kvm/kvm_main.c:1133"];
	kvm_destroy_vm -> kvm_arch_pre_destroy_vm;
	kvm_free_irq_routing	[label="void kvm_free_irq_routing (struct kvm *kvm)
virt/kvm/irqchip.c:119"];
	kvm_destroy_vm -> kvm_free_irq_routing;
	kvm_get_bus	[label="kvm_get_bus()"];
	kvm_destroy_vm -> kvm_get_bus;
	kvm_io_bus_destroy	[label="void kvm_io_bus_destroy (struct kvm_io_bus *bus)
virt/kvm/kvm_main.c:5366"];
	kvm_destroy_vm -> kvm_io_bus_destroy;
	kvm_coalesced_mmio_free	[label="void kvm_coalesced_mmio_free (struct kvm *kvm)
virt/kvm/coalesced_mmio.c:131"];
	kvm_destroy_vm -> kvm_coalesced_mmio_free;
	mmu_notifier_unregister	[label="mmu_notifier_unregister()"];
	kvm_destroy_vm -> mmu_notifier_unregister;
	rcuwait_active	[label="rcuwait_active()"];
	kvm_destroy_vm -> rcuwait_active;
	kvm_flush_shadow_all	[label="void kvm_flush_shadow_all (struct kvm *kvm)
virt/kvm/kvm_main.c:394"];
	kvm_destroy_vm -> kvm_flush_shadow_all;
	kvm_arch_destroy_vm	[label="void kvm_arch_destroy_vm (struct kvm *kvm)
arch/arm64/kvm/arm.c:198"];
	kvm_destroy_vm -> kvm_arch_destroy_vm;
	kvm_destroy_devices	[label="void kvm_destroy_devices (struct kvm *kvm)
virt/kvm/kvm_main.c:1280"];
	kvm_destroy_vm -> kvm_destroy_devices;
	kvm_free_memslots	[label="void kvm_free_memslots (struct kvm *kvm, struct kvm_memslots *slots)
virt/kvm/kvm_main.c:995"];
	kvm_destroy_vm -> kvm_free_memslots;
	cleanup_srcu_struct	[label="cleanup_srcu_struct()"];
	kvm_destroy_vm -> cleanup_srcu_struct;
	kvm_arch_free_vm	[label="kvm_arch_free_vm()"];
	kvm_destroy_vm -> kvm_arch_free_vm;
	preempt_notifier_dec	[label="preempt_notifier_dec()"];
	kvm_destroy_vm -> preempt_notifier_dec;
	hardware_disable_all	[label="void hardware_disable_all (void)
virt/kvm/kvm_main.c:5354"];
	kvm_destroy_vm -> hardware_disable_all;
	mmdrop	[label="mmdrop()"];
	kvm_destroy_vm -> mmdrop;
	unregister_pm_notifier	[label="unregister_pm_notifier()"];
	kvm_destroy_pm_notifier -> unregister_pm_notifier;
	kvm_uevent_notify_change -> IS_ERR;
	kvm_uevent_notify_change -> kfree;
	kvm_uevent_notify_change -> mutex_lock;
	kvm_uevent_notify_change -> mutex_unlock;
	kvm_uevent_notify_change -> kzalloc;
	add_uevent_var	[label="add_uevent_var()"];
	kvm_uevent_notify_change -> add_uevent_var;
	task_pid_nr	[label="task_pid_nr()"];
	kvm_uevent_notify_change -> task_pid_nr;
	kmalloc	[label="kmalloc()"];
	kvm_uevent_notify_change -> kmalloc;
	dentry_path_raw	[label="dentry_path_raw()"];
	kvm_uevent_notify_change -> dentry_path_raw;
	kobject_uevent_env	[label="kobject_uevent_env()"];
	kvm_uevent_notify_change -> kobject_uevent_env;
	kvm_destroy_vm_debugfs -> IS_ERR;
	kvm_destroy_vm_debugfs -> kfree;
	debugfs_remove_recursive	[label="debugfs_remove_recursive()"];
	kvm_destroy_vm_debugfs -> debugfs_remove_recursive;
	rcu_access_pointer	[label="rcu_access_pointer()"];
	kvm_free_irq_routing -> rcu_access_pointer;
	free_irq_routing_table	[label="void free_irq_routing_table (struct kvm_irq_routing_table *rt)
virt/kvm/irqchip.c:99"];
	kvm_free_irq_routing -> free_irq_routing_table;
	kvm_io_bus_destroy -> kfree;
	kvm_iodevice_destructor	[label="void kvm_iodevice_destructor (struct kvm_io_device *dev)
virt/kvm/kvm_main.c:5360"];
	kvm_io_bus_destroy -> kvm_iodevice_destructor;
	kvm_coalesced_mmio_free -> free_page;
	kvm_arch_flush_shadow_all	[label="void kvm_arch_flush_shadow_all (struct kvm *kvm)
arch/arm64/kvm/mmu.c:2057"];
	kvm_flush_shadow_all -> kvm_arch_flush_shadow_all;
	kvm_arch_guest_memory_reclaimed	[label="__weak void kvm_arch_guest_memory_reclaimed (struct kvm *kvm)
virt/kvm/kvm_main.c:155"];
	kvm_flush_shadow_all -> kvm_arch_guest_memory_reclaimed;
	kvm_arch_destroy_vm -> kfree;
	kvm_arch_destroy_vm -> is_protected_kvm_enabled;
	kvm_arch_destroy_vm -> free_cpumask_var;
	kvm_arch_destroy_vm -> bitmap_free;
	kvm_vgic_destroy	[label="kvm_vgic_destroy()"];
	kvm_arch_destroy_vm -> kvm_vgic_destroy;
	pkvm_destroy_hyp_vm	[label="void pkvm_destroy_hyp_vm (struct kvm *host_kvm)
arch/arm64/kvm/pkvm.c:216"];
	kvm_arch_destroy_vm -> pkvm_destroy_hyp_vm;
	kvm_destroy_vcpus	[label="void kvm_destroy_vcpus (struct kvm *kvm)
virt/kvm/kvm_main.c:522"];
	kvm_arch_destroy_vm -> kvm_destroy_vcpus;
	kvm_unshare_hyp	[label="void kvm_unshare_hyp (void *from, void *to)
arch/arm64/kvm/mmu.c:548"];
	kvm_arch_destroy_vm -> kvm_unshare_hyp;
	kvm_arm_teardown_hypercalls	[label="void kvm_arm_teardown_hypercalls (struct kvm *kvm)
arch/arm64/kvm/hypercalls.c:403"];
	kvm_arch_destroy_vm -> kvm_arm_teardown_hypercalls;
	kvm_destroy_devices -> list_del;
	list_for_each_entry_safe	[label="list_for_each_entry_safe()"];
	kvm_destroy_devices -> list_for_each_entry_safe;
	hash_for_each_safe	[label="hash_for_each_safe()"];
	kvm_free_memslots -> hash_for_each_safe;
	kvm_free_memslot	[label="void kvm_free_memslot (struct kvm *kvm, struct kvm_memory_slot *slot)
virt/kvm/kvm_main.c:986"];
	kvm_free_memslots -> kvm_free_memslot;
	hardware_disable_all -> mutex_lock;
	hardware_disable_all -> mutex_unlock;
	cpus_read_lock	[label="cpus_read_lock()"];
	hardware_disable_all -> cpus_read_lock;
	hardware_disable_all_nolock	[label="void hardware_disable_all_nolock (void)
virt/kvm/kvm_main.c:5233"];
	hardware_disable_all -> hardware_disable_all_nolock;
	cpus_read_unlock	[label="cpus_read_unlock()"];
	hardware_disable_all -> cpus_read_unlock;
	free_irq_routing_table -> kfree;
	hlist_for_each_entry_safe	[label="hlist_for_each_entry_safe()"];
	free_irq_routing_table -> hlist_for_each_entry_safe;
	hlist_del	[label="hlist_del()"];
	free_irq_routing_table -> hlist_del;
	kvm_uninit_stage2_mmu	[label="void kvm_uninit_stage2_mmu (struct kvm *kvm)
arch/arm64/kvm/mmu.c:935"];
	kvm_arch_flush_shadow_all -> kvm_uninit_stage2_mmu;
	kvm_free_stage2_pgd	[label="void kvm_free_stage2_pgd (struct kvm_s2_mmu *mmu)
arch/arm64/kvm/mmu.c:1009"];
	kvm_uninit_stage2_mmu -> kvm_free_stage2_pgd;
	kvm_mmu_free_memory_cache	[label="void kvm_mmu_free_memory_cache (struct kvm_mmu_memory_cache *mc)
virt/kvm/kvm_main.c:454"];
	kvm_uninit_stage2_mmu -> kvm_mmu_free_memory_cache;
	kvm_free_stage2_pgd -> write_lock;
	kvm_free_stage2_pgd -> write_unlock;
	kvm_free_stage2_pgd -> kfree;
	kvm_s2_mmu_to_kvm	[label="kvm_s2_mmu_to_kvm()"];
	kvm_free_stage2_pgd -> kvm_s2_mmu_to_kvm;
	free_percpu	[label="free_percpu()"];
	kvm_free_stage2_pgd -> free_percpu;
	kvm_pgtable_stage2_destroy	[label="kvm_pgtable_stage2_destroy()"];
	kvm_free_stage2_pgd -> kvm_pgtable_stage2_destroy;
	kvm_mmu_free_memory_cache -> free_page;
	kvm_mmu_free_memory_cache -> kmem_cache_free;
	kvfree	[label="kvfree()"];
	kvm_mmu_free_memory_cache -> kvfree;
	pkvm_destroy_hyp_vm -> mutex_lock;
	pkvm_destroy_hyp_vm -> mutex_unlock;
	kvm_destroy_vcpus -> kvm_for_each_vcpu;
	kvm_vcpu_destroy	[label="void kvm_vcpu_destroy (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:506"];
	kvm_destroy_vcpus -> kvm_vcpu_destroy;
	xa_erase	[label="xa_erase()"];
	kvm_destroy_vcpus -> xa_erase;
	atomic_set	[label="atomic_set()"];
	kvm_destroy_vcpus -> atomic_set;
	kvm_unshare_hyp -> WARN_ON;
	kvm_unshare_hyp -> is_kernel_in_hyp_mode;
	kvm_unshare_hyp -> ALIGN_DOWN;
	kvm_unshare_hyp -> kvm_host_owns_hyp_mappings;
	kvm_unshare_hyp -> PAGE_ALIGN;
	unshare_pfn_hyp	[label="int unshare_pfn_hyp (u64 pfn)
arch/arm64/kvm/mmu.c:490"];
	kvm_unshare_hyp -> unshare_pfn_hyp;
	mtree_destroy	[label="mtree_destroy()"];
	kvm_arm_teardown_hypercalls -> mtree_destroy;
	kvm_vcpu_destroy -> free_page;
	kvm_vcpu_destroy -> kmem_cache_free;
	kvm_arch_vcpu_destroy	[label="void kvm_arch_vcpu_destroy (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:405"];
	kvm_vcpu_destroy -> kvm_arch_vcpu_destroy;
	kvm_dirty_ring_free	[label="void kvm_dirty_ring_free (struct kvm_dirty_ring *ring)
virt/kvm/dirty_ring.c:218"];
	kvm_vcpu_destroy -> kvm_dirty_ring_free;
	put_pid	[label="put_pid()"];
	kvm_vcpu_destroy -> put_pid;
	rcu_dereference_protected	[label="rcu_dereference_protected()"];
	kvm_vcpu_destroy -> rcu_dereference_protected;
	kvm_arch_vcpu_destroy -> unlikely;
	kvm_arch_vcpu_destroy -> irqchip_in_kernel;
	kvm_arch_vcpu_destroy -> kvm_mmu_free_memory_cache;
	vcpu_has_run_once	[label="vcpu_has_run_once()"];
	kvm_arch_vcpu_destroy -> vcpu_has_run_once;
	static_branch_dec	[label="static_branch_dec()"];
	kvm_arch_vcpu_destroy -> static_branch_dec;
	kvm_timer_vcpu_terminate	[label="void kvm_timer_vcpu_terminate (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:1446"];
	kvm_arch_vcpu_destroy -> kvm_timer_vcpu_terminate;
	kvm_pmu_vcpu_destroy	[label="void kvm_pmu_vcpu_destroy (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:259"];
	kvm_arch_vcpu_destroy -> kvm_pmu_vcpu_destroy;
	kvm_vgic_vcpu_destroy	[label="kvm_vgic_vcpu_destroy()"];
	kvm_arch_vcpu_destroy -> kvm_vgic_vcpu_destroy;
	kvm_arm_vcpu_destroy	[label="void kvm_arm_vcpu_destroy (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:150"];
	kvm_arch_vcpu_destroy -> kvm_arm_vcpu_destroy;
	vfree	[label="vfree()"];
	kvm_dirty_ring_free -> vfree;
	kvm_timer_vcpu_terminate -> soft_timer_cancel;
	kvm_timer_vcpu_terminate -> vcpu_timer;
	kvm_pmu_vcpu_destroy -> kvm_vcpu_idx_to_pmc;
	kvm_pmu_vcpu_destroy -> kvm_pmu_release_perf_event;
	irq_work_sync	[label="irq_work_sync()"];
	kvm_pmu_vcpu_destroy -> irq_work_sync;
	kvm_arm_vcpu_destroy -> kfree;
	kvm_arm_vcpu_destroy -> kvm_unshare_hyp;
	kvm_vcpu_unshare_task_fp	[label="void kvm_vcpu_unshare_task_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:17"];
	kvm_arm_vcpu_destroy -> kvm_vcpu_unshare_task_fp;
	vcpu_sve_state_size	[label="vcpu_sve_state_size()"];
	kvm_arm_vcpu_destroy -> vcpu_sve_state_size;
	kvm_vcpu_unshare_task_fp -> is_protected_kvm_enabled;
	kvm_vcpu_unshare_task_fp -> kvm_unshare_hyp;
	put_task_struct	[label="put_task_struct()"];
	kvm_vcpu_unshare_task_fp -> put_task_struct;
	unshare_pfn_hyp -> WARN_ON;
	unshare_pfn_hyp -> kfree;
	unshare_pfn_hyp -> mutex_lock;
	unshare_pfn_hyp -> mutex_unlock;
	unshare_pfn_hyp -> kvm_call_hyp_nvhe;
	find_shared_pfn	[label="struct hyp_shared_pfn *find_shared_pfn (u64 pfn, struct rb_node ***node, struct rb_node **parent)
arch/arm64/kvm/mmu.c:439"];
	unshare_pfn_hyp -> find_shared_pfn;
	rb_erase	[label="rb_erase()"];
	unshare_pfn_hyp -> rb_erase;
	find_shared_pfn -> container_of;
	kvm_free_memslot -> kfree;
	kvm_destroy_dirty_bitmap	[label="void kvm_destroy_dirty_bitmap (struct kvm_memory_slot *memslot)
virt/kvm/kvm_main.c:976"];
	kvm_free_memslot -> kvm_destroy_dirty_bitmap;
	kvm_arch_free_memslot	[label="void kvm_arch_free_memslot (struct kvm *kvm, struct kvm_memory_slot *slot)
arch/arm64/kvm/mmu.c:2049"];
	kvm_free_memslot -> kvm_arch_free_memslot;
	kvm_destroy_dirty_bitmap -> kvfree;
	hardware_disable_all_nolock -> BUG_ON;
	hardware_disable_all_nolock -> on_each_cpu;
	hardware_disable_all_nolock -> hardware_disable_nolock;
	kvm_dev_ioctl	[label="long kvm_dev_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:5114"];
	kvm_dev_ioctl_create_vm	[label="int kvm_dev_ioctl_create_vm (unsigned long type)
virt/kvm/kvm_main.c:5071"];
	kvm_dev_ioctl -> kvm_dev_ioctl_create_vm;
	kvm_vm_ioctl_check_extension_generic	[label="int kvm_vm_ioctl_check_extension_generic (struct kvm *kvm, long arg)
virt/kvm/kvm_main.c:4526"];
	kvm_dev_ioctl -> kvm_vm_ioctl_check_extension_generic;
	kvm_arch_dev_ioctl	[label="long kvm_arch_dev_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
arch/arm64/kvm/arm.c:331"];
	kvm_dev_ioctl -> kvm_arch_dev_ioctl;
	kvm_dev_ioctl_create_vm -> IS_ERR;
	kvm_dev_ioctl_create_vm -> PTR_ERR;
	kvm_dev_ioctl_create_vm -> kvm_put_kvm;
	kvm_dev_ioctl_create_vm -> kvm_uevent_notify_change;
	get_unused_fd_flags	[label="get_unused_fd_flags()"];
	kvm_dev_ioctl_create_vm -> get_unused_fd_flags;
	snprintf	[label="snprintf()"];
	kvm_dev_ioctl_create_vm -> snprintf;
	kvm_create_vm	[label="struct kvm *kvm_create_vm (unsigned long type, const char *fdname)
virt/kvm/kvm_main.c:1148"];
	kvm_dev_ioctl_create_vm -> kvm_create_vm;
	anon_inode_getfile	[label="anon_inode_getfile()"];
	kvm_dev_ioctl_create_vm -> anon_inode_getfile;
	fd_install	[label="fd_install()"];
	kvm_dev_ioctl_create_vm -> fd_install;
	put_unused_fd	[label="put_unused_fd()"];
	kvm_dev_ioctl_create_vm -> put_unused_fd;
	kvm_vm_ioctl_check_extension	[label="int kvm_vm_ioctl_check_extension (struct kvm *kvm, long ext)
arch/arm64/kvm/arm.c:216"];
	kvm_vm_ioctl_check_extension_generic -> kvm_vm_ioctl_check_extension;
	kvm_create_vm -> kfree;
	kvm_create_vm -> mutex_lock;
	kvm_create_vm -> mutex_unlock;
	kvm_create_vm -> WARN_ON_ONCE;
	kvm_create_vm -> BUILD_BUG_ON;
	kvm_create_vm -> kzalloc;
	kvm_create_vm -> INIT_LIST_HEAD;
	kvm_create_vm -> refcount_dec_and_test;
	kvm_create_vm -> kvm_destroy_vm_debugfs;
	kvm_create_vm -> kvm_get_bus;
	kvm_create_vm -> kvm_coalesced_mmio_free;
	kvm_create_vm -> mmu_notifier_unregister;
	kvm_create_vm -> kvm_arch_destroy_vm;
	kvm_create_vm -> cleanup_srcu_struct;
	kvm_create_vm -> kvm_arch_free_vm;
	kvm_create_vm -> hardware_disable_all;
	kvm_create_vm -> mmdrop;
	kvm_create_vm -> task_pid_nr;
	kvm_create_vm -> snprintf;
	kvm_arch_alloc_vm	[label="struct kvm *kvm_arch_alloc_vm (void)
arch/arm64/kvm/arm.c:337"];
	kvm_create_vm -> kvm_arch_alloc_vm;
	ERR_PTR	[label="ERR_PTR()"];
	kvm_create_vm -> ERR_PTR;
	KVM_MMU_LOCK_INIT	[label="KVM_MMU_LOCK_INIT()"];
	kvm_create_vm -> KVM_MMU_LOCK_INIT;
	mmgrab	[label="mmgrab()"];
	kvm_create_vm -> mmgrab;
	kvm_eventfd_init	[label="void kvm_eventfd_init (struct kvm *kvm)
virt/kvm/eventfd.c:532"];
	kvm_create_vm -> kvm_eventfd_init;
	mutex_init	[label="mutex_init()"];
	kvm_create_vm -> mutex_init;
	spin_lock_init	[label="spin_lock_init()"];
	kvm_create_vm -> spin_lock_init;
	rcuwait_init	[label="rcuwait_init()"];
	kvm_create_vm -> rcuwait_init;
	xa_init	[label="xa_init()"];
	kvm_create_vm -> xa_init;
	init_srcu_struct	[label="init_srcu_struct()"];
	kvm_create_vm -> init_srcu_struct;
	refcount_set	[label="refcount_set()"];
	kvm_create_vm -> refcount_set;
	atomic_long_set	[label="atomic_long_set()"];
	kvm_create_vm -> atomic_long_set;
	hash_init	[label="hash_init()"];
	kvm_create_vm -> hash_init;
	rcu_assign_pointer	[label="rcu_assign_pointer()"];
	kvm_create_vm -> rcu_assign_pointer;
	kvm_arch_init_vm	[label="int kvm_arch_init_vm (struct kvm *kvm, unsigned long type)
arch/arm64/kvm/arm.c:136"];
	kvm_create_vm -> kvm_arch_init_vm;
	hardware_enable_all	[label="int hardware_enable_all (void)
virt/kvm/kvm_main.c:5349"];
	kvm_create_vm -> hardware_enable_all;
	INIT_HLIST_HEAD	[label="INIT_HLIST_HEAD()"];
	kvm_create_vm -> INIT_HLIST_HEAD;
	kvm_init_mmu_notifier	[label="int kvm_init_mmu_notifier (struct kvm *kvm)
virt/kvm/kvm_main.c:937"];
	kvm_create_vm -> kvm_init_mmu_notifier;
	kvm_coalesced_mmio_init	[label="int kvm_coalesced_mmio_init (struct kvm *kvm)
virt/kvm/coalesced_mmio.c:110"];
	kvm_create_vm -> kvm_coalesced_mmio_init;
	kvm_create_vm_debugfs	[label="int kvm_create_vm_debugfs (struct kvm *kvm, const char *fdname)
virt/kvm/kvm_main.c:1045"];
	kvm_create_vm -> kvm_create_vm_debugfs;
	kvm_arch_post_init_vm	[label="int __weak kvm_arch_post_init_vm (struct kvm *kvm)
virt/kvm/kvm_main.c:1124"];
	kvm_create_vm -> kvm_arch_post_init_vm;
	list_add	[label="list_add()"];
	kvm_create_vm -> list_add;
	preempt_notifier_inc	[label="preempt_notifier_inc()"];
	kvm_create_vm -> preempt_notifier_inc;
	kvm_init_pm_notifier	[label="void kvm_init_pm_notifier (struct kvm *kvm)
virt/kvm/kvm_main.c:967"];
	kvm_create_vm -> kvm_init_pm_notifier;
	kvm_arch_alloc_vm -> has_vhe;
	kvm_arch_alloc_vm -> kzalloc;
	kvm_eventfd_init -> INIT_LIST_HEAD;
	kvm_eventfd_init -> mutex_init;
	kvm_eventfd_init -> spin_lock_init;
	kvm_arch_init_vm -> mutex_lock;
	kvm_arch_init_vm -> mutex_unlock;
	kvm_arch_init_vm -> free_cpumask_var;
	kvm_arch_init_vm -> kvm_unshare_hyp;
	kvm_arch_init_vm -> mutex_init;
	kvm_share_hyp	[label="int kvm_share_hyp (void *from, void *to)
arch/arm64/kvm/mmu.c:516"];
	kvm_arch_init_vm -> kvm_share_hyp;
	pkvm_init_host_vm	[label="int pkvm_init_host_vm (struct kvm *host_kvm)
arch/arm64/kvm/pkvm.c:223"];
	kvm_arch_init_vm -> pkvm_init_host_vm;
	zalloc_cpumask_var	[label="zalloc_cpumask_var()"];
	kvm_arch_init_vm -> zalloc_cpumask_var;
	cpumask_copy	[label="cpumask_copy()"];
	kvm_arch_init_vm -> cpumask_copy;
	kvm_init_stage2_mmu	[label="int kvm_init_stage2_mmu (struct kvm *kvm, struct kvm_s2_mmu *mmu, unsigned long type)
arch/arm64/kvm/mmu.c:866"];
	kvm_arch_init_vm -> kvm_init_stage2_mmu;
	kvm_vgic_early_init	[label="kvm_vgic_early_init()"];
	kvm_arch_init_vm -> kvm_vgic_early_init;
	kvm_timer_init_vm	[label="void kvm_timer_init_vm (struct kvm *kvm)
arch/arm64/kvm/arch_timer.c:1029"];
	kvm_arch_init_vm -> kvm_timer_init_vm;
	kvm_arm_default_max_vcpus	[label="int kvm_arm_default_max_vcpus (void)
arch/arm64/kvm/arm.c:127"];
	kvm_arch_init_vm -> kvm_arm_default_max_vcpus;
	kvm_arm_init_hypercalls	[label="void kvm_arm_init_hypercalls (struct kvm *kvm)
arch/arm64/kvm/hypercalls.c:392"];
	kvm_arch_init_vm -> kvm_arm_init_hypercalls;
	bitmap_zero	[label="bitmap_zero()"];
	kvm_arch_init_vm -> bitmap_zero;
	hardware_enable_all -> on_each_cpu;
	hardware_enable_all -> mutex_lock;
	hardware_enable_all -> mutex_unlock;
	hardware_enable_all -> cpus_read_lock;
	hardware_enable_all -> hardware_disable_all_nolock;
	hardware_enable_all -> cpus_read_unlock;
	ATOMIC_INIT	[label="ATOMIC_INIT()"];
	hardware_enable_all -> ATOMIC_INIT;
	hardware_enable_nolock	[label="void hardware_enable_nolock (void *failed)
virt/kvm/kvm_main.c:5188"];
	hardware_enable_all -> hardware_enable_nolock;
	atomic_read	[label="atomic_read()"];
	hardware_enable_all -> atomic_read;
	mmu_notifier_register	[label="mmu_notifier_register()"];
	kvm_init_mmu_notifier -> mmu_notifier_register;
	kvm_coalesced_mmio_init -> page_address;
	kvm_coalesced_mmio_init -> INIT_LIST_HEAD;
	kvm_coalesced_mmio_init -> spin_lock_init;
	alloc_page	[label="alloc_page()"];
	kvm_coalesced_mmio_init -> alloc_page;
	kvm_create_vm_debugfs -> IS_ERR;
	kvm_create_vm_debugfs -> mutex_lock;
	kvm_create_vm_debugfs -> mutex_unlock;
	kvm_create_vm_debugfs -> kzalloc;
	kvm_create_vm_debugfs -> debugfs_create_dir;
	kvm_create_vm_debugfs -> kvm_stats_debugfs_mode;
	kvm_create_vm_debugfs -> debugfs_create_file;
	kvm_create_vm_debugfs -> kvm_destroy_vm_debugfs;
	kvm_create_vm_debugfs -> task_pid_nr;
	kvm_create_vm_debugfs -> snprintf;
	debugfs_initialized	[label="debugfs_initialized()"];
	kvm_create_vm_debugfs -> debugfs_initialized;
	debugfs_lookup	[label="debugfs_lookup()"];
	kvm_create_vm_debugfs -> debugfs_lookup;
	pr_warn_ratelimited	[label="pr_warn_ratelimited()"];
	kvm_create_vm_debugfs -> pr_warn_ratelimited;
	dput	[label="dput()"];
	kvm_create_vm_debugfs -> dput;
	kcalloc	[label="kcalloc()"];
	kvm_create_vm_debugfs -> kcalloc;
	kvm_arch_create_vm_debugfs	[label="int __weak kvm_arch_create_vm_debugfs (struct kvm *kvm)
virt/kvm/kvm_main.c:1143"];
	kvm_create_vm_debugfs -> kvm_arch_create_vm_debugfs;
	kvm_pm_notifier_call	[label="int kvm_pm_notifier_call (struct notifier_block *bl, unsigned long state, void *unused)
virt/kvm/kvm_main.c:945"];
	kvm_init_pm_notifier -> kvm_pm_notifier_call;
	register_pm_notifier	[label="register_pm_notifier()"];
	kvm_init_pm_notifier -> register_pm_notifier;
	kvm_share_hyp -> is_kernel_in_hyp_mode;
	kvm_share_hyp -> create_hyp_mappings;
	kvm_share_hyp -> ALIGN_DOWN;
	kvm_share_hyp -> kvm_host_owns_hyp_mappings;
	kvm_share_hyp -> PAGE_ALIGN;
	is_vmalloc_or_module_addr	[label="is_vmalloc_or_module_addr()"];
	kvm_share_hyp -> is_vmalloc_or_module_addr;
	share_pfn_hyp	[label="int share_pfn_hyp (u64 pfn)
arch/arm64/kvm/mmu.c:460"];
	kvm_share_hyp -> share_pfn_hyp;
	pkvm_init_host_vm -> mutex_init;
	kvm_init_stage2_mmu -> read_sanitised_ftr_reg;
	kvm_init_stage2_mmu -> kfree;
	kvm_init_stage2_mmu -> is_protected_kvm_enabled;
	kvm_init_stage2_mmu -> pr_warn_once;
	kvm_init_stage2_mmu -> kvm_err;
	kvm_init_stage2_mmu -> typeof;
	kvm_init_stage2_mmu -> for_each_possible_cpu;
	kvm_init_stage2_mmu -> kzalloc;
	kvm_init_stage2_mmu -> kvm_pgtable_stage2_destroy;
	get_kvm_ipa_limit	[label="u32 get_kvm_ipa_limit (void)
arch/arm64/kvm/reset.c:269"];
	kvm_init_stage2_mmu -> get_kvm_ipa_limit;
	KVM_VM_TYPE_ARM_IPA_SIZE	[label="KVM_VM_TYPE_ARM_IPA_SIZE()"];
	kvm_init_stage2_mmu -> KVM_VM_TYPE_ARM_IPA_SIZE;
	kvm_get_vtcr	[label="kvm_get_vtcr()"];
	kvm_init_stage2_mmu -> kvm_get_vtcr;
	kvm_pgtable_stage2_init	[label="kvm_pgtable_stage2_init()"];
	kvm_init_stage2_mmu -> kvm_pgtable_stage2_init;
	alloc_percpu	[label="alloc_percpu()"];
	kvm_init_stage2_mmu -> alloc_percpu;
	per_cpu_ptr	[label="per_cpu_ptr()"];
	kvm_init_stage2_mmu -> per_cpu_ptr;
	kvm_vgic_get_max_vcpus	[label="kvm_vgic_get_max_vcpus()"];
	kvm_arm_default_max_vcpus -> kvm_vgic_get_max_vcpus;
	mt_init	[label="mt_init()"];
	kvm_arm_init_hypercalls -> mt_init;
	share_pfn_hyp -> mutex_lock;
	share_pfn_hyp -> mutex_unlock;
	share_pfn_hyp -> kvm_call_hyp_nvhe;
	share_pfn_hyp -> kzalloc;
	share_pfn_hyp -> find_shared_pfn;
	rb_link_node	[label="rb_link_node()"];
	share_pfn_hyp -> rb_link_node;
	rb_insert_color	[label="rb_insert_color()"];
	share_pfn_hyp -> rb_insert_color;
	atomic_inc	[label="atomic_inc()"];
	hardware_enable_nolock -> atomic_inc;
	kvm_pm_notifier_call -> container_of;
	kvm_arch_pm_notifier	[label="kvm_arch_pm_notifier()"];
	kvm_pm_notifier_call -> kvm_arch_pm_notifier;
	kvm_vm_ioctl_check_extension -> cpus_have_final_cap;
	kvm_vm_ioctl_check_extension -> BIT;
	kvm_vm_ioctl_check_extension -> kvm_arm_support_pmu_v3;
	kvm_vm_ioctl_check_extension -> system_supports_sve;
	kvm_vm_ioctl_check_extension -> kvm_arm_default_max_vcpus;
	kvm_vm_ioctl_check_extension -> get_kvm_ipa_limit;
	min_t	[label="min_t()"];
	kvm_vm_ioctl_check_extension -> min_t;
	num_online_cpus	[label="num_online_cpus()"];
	kvm_vm_ioctl_check_extension -> num_online_cpus;
	system_supports_mte	[label="system_supports_mte()"];
	kvm_vm_ioctl_check_extension -> system_supports_mte;
	kvm_arm_pvtime_supported	[label="bool kvm_arm_pvtime_supported (void)
arch/arm64/kvm/pvtime.c:70"];
	kvm_vm_ioctl_check_extension -> kvm_arm_pvtime_supported;
	get_num_brps	[label="get_num_brps()"];
	kvm_vm_ioctl_check_extension -> get_num_brps;
	get_num_wrps	[label="get_num_wrps()"];
	kvm_vm_ioctl_check_extension -> get_num_wrps;
	system_has_full_ptr_auth	[label="system_has_full_ptr_auth()"];
	kvm_vm_ioctl_check_extension -> system_has_full_ptr_auth;
	kvm_supported_block_sizes	[label="kvm_supported_block_sizes()"];
	kvm_vm_ioctl_check_extension -> kvm_supported_block_sizes;
	sched_info_on	[label="sched_info_on()"];
	kvm_arm_pvtime_supported -> sched_info_on;
}
