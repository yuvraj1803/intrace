digraph cflow {
    node [shape="box"]
    aa32_id_visibility [label="unsigned int aa32_id_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1478"]
    aa32_id_visibility -> kvm_supports_32bit_el0
    aa32_id_visibility -> id_visibility
    kvm_supports_32bit_el0 [label="kvm_supports_32bit_el0()"]
    id_visibility [label="unsigned int id_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1463"]
    id_visibility -> reg_to_encoding
    id_visibility -> vcpu_has_sve
    reg_to_encoding [label="reg_to_encoding()"]
    vcpu_has_sve [label="vcpu_has_sve()"]
    access_actlr [label="bool access_actlr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:277"]
    access_actlr -> ignore_write
    access_actlr -> get_access_mask
    access_actlr -> vcpu_read_sys_reg
    ignore_write [label="ignore_write()"]
    get_access_mask [label="void get_access_mask (const struct sys_reg_desc *r, u64 *mask, u64 *shift)
arch/arm64/kvm/sys_regs.c:229"]
    get_access_mask -> GENMASK_ULL
    GENMASK_ULL [label="GENMASK_ULL()"]
    vcpu_read_sys_reg [label="u64 vcpu_read_sys_reg (const struct kvm_vcpu *vcpu, int reg)
arch/arm64/kvm/sys_regs.c:68"]
    vcpu_read_sys_reg -> vcpu_get_flag
    vcpu_get_flag [label="vcpu_get_flag()"]
    access_arch_timer [label="bool access_arch_timer (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1242"]
    access_arch_timer -> reg_to_encoding
    access_arch_timer -> print_sys_reg_msg
    access_arch_timer -> kvm_inject_undefined
    access_arch_timer -> kvm_arm_timer_write_sysreg
    access_arch_timer -> kvm_arm_timer_read_sysreg
    print_sys_reg_msg [label="print_sys_reg_msg()"]
    kvm_inject_undefined [label="void kvm_inject_undefined (struct kvm_vcpu *vcpu)
arch/arm64/kvm/inject_fault.c:225"]
    kvm_inject_undefined -> vcpu_el1_is_32bit
    kvm_inject_undefined -> inject_undef32
    kvm_inject_undefined -> inject_undef64
    vcpu_el1_is_32bit [label="vcpu_el1_is_32bit()"]
    inject_undef32 [label="void inject_undef32 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/inject_fault.c:119"]
    inject_undef32 -> kvm_pend_exception
    kvm_pend_exception [label="kvm_pend_exception()"]
    inject_undef64 [label="void inject_undef64 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/inject_fault.c:95"]
    inject_undef64 -> pend_sync_exception
    inject_undef64 -> kvm_vcpu_trap_il_is32bit
    inject_undef64 -> match_target_el
    inject_undef64 -> unpack_vcpu_flag
    inject_undef64 -> vcpu_write_sys_reg
    pend_sync_exception [label="void pend_sync_exception (struct kvm_vcpu *vcpu)
arch/arm64/kvm/inject_fault.c:18"]
    pend_sync_exception -> likely
    pend_sync_exception -> vcpu_has_nv
    pend_sync_exception -> kvm_pend_exception
    pend_sync_exception -> vcpu_cpsr
    pend_sync_exception -> vcpu_el2_tge_is_set
    pend_sync_exception -> BUG
    likely [label="likely()"]
    vcpu_has_nv [label="vcpu_has_nv()"]
    vcpu_cpsr [label="vcpu_cpsr()"]
    vcpu_el2_tge_is_set [label="vcpu_el2_tge_is_set()"]
    BUG [label="BUG()"]
    kvm_vcpu_trap_il_is32bit [label="kvm_vcpu_trap_il_is32bit()"]
    match_target_el [label="bool match_target_el (struct kvm_vcpu *vcpu, unsigned long target)
arch/arm64/kvm/inject_fault.c:52"]
    match_target_el -> vcpu_get_flag
    unpack_vcpu_flag [label="unpack_vcpu_flag()"]
    vcpu_write_sys_reg [label="void vcpu_write_sys_reg (struct kvm_vcpu *vcpu, u64 val, int reg)
arch/arm64/kvm/sys_regs.c:79"]
    vcpu_write_sys_reg -> vcpu_get_flag
    kvm_arm_timer_write_sysreg [label="void kvm_arm_timer_write_sysreg (struct kvm_vcpu *vcpu, enum kvm_arch_timers tmr, enum kvm_arch_timer_regs treg, u64 val)
arch/arm64/kvm/arch_timer.c:1220"]
    kvm_arm_timer_write_sysreg -> get_timer_map
    kvm_arm_timer_write_sysreg -> vcpu_get_timer
    kvm_arm_timer_write_sysreg -> soft_timer_cancel
    kvm_arm_timer_write_sysreg -> kvm_arm_timer_write
    kvm_arm_timer_write_sysreg -> timer_emulate
    kvm_arm_timer_write_sysreg -> preempt_disable
    kvm_arm_timer_write_sysreg -> timer_save_state
    kvm_arm_timer_write_sysreg -> timer_restore_state
    kvm_arm_timer_write_sysreg -> preempt_enable
    get_timer_map [label="void get_timer_map (struct kvm_vcpu *vcpu, struct timer_map *map)
arch/arm64/kvm/arch_timer.c:178"]
    get_timer_map -> vcpu_has_nv
    get_timer_map -> is_hyp_ctxt
    get_timer_map -> vcpu_hvtimer
    get_timer_map -> vcpu_hptimer
    get_timer_map -> vcpu_vtimer
    get_timer_map -> vcpu_ptimer
    get_timer_map -> has_vhe
    get_timer_map -> trace_kvm_get_timer_map
    is_hyp_ctxt [label="is_hyp_ctxt()"]
    vcpu_hvtimer [label="vcpu_hvtimer()"]
    vcpu_hptimer [label="vcpu_hptimer()"]
    vcpu_vtimer [label="vcpu_vtimer()"]
    vcpu_ptimer [label="vcpu_ptimer()"]
    has_vhe [label="has_vhe()"]
    trace_kvm_get_timer_map [label="trace_kvm_get_timer_map()"]
    vcpu_get_timer [label="vcpu_get_timer()"]
    soft_timer_cancel [label="void soft_timer_cancel (struct hrtimer *hrt)
arch/arm64/kvm/arch_timer.c:219"]
    soft_timer_cancel -> hrtimer_cancel
    hrtimer_cancel [label="hrtimer_cancel()"]
    kvm_arm_timer_write [label="void kvm_arm_timer_write (struct kvm_vcpu *vcpu, struct arch_timer_context *timer, enum kvm_arch_timer_regs treg, u64 val)
arch/arm64/kvm/arch_timer.c:1193"]
    kvm_arm_timer_write -> timer_set_cval
    kvm_arm_timer_write -> kvm_phys_timer_read
    kvm_arm_timer_write -> timer_get_offset
    kvm_arm_timer_write -> timer_set_ctl
    kvm_arm_timer_write -> BUG
    timer_set_cval [label="void timer_set_cval (struct arch_timer_context *ctxt, u64 cval)
arch/arm64/kvm/arch_timer.c:141"]
    timer_set_cval -> arch_timer_ctx_index
    timer_set_cval -> WARN_ON
    arch_timer_ctx_index [label="arch_timer_ctx_index()"]
    WARN_ON [label="WARN_ON()"]
    kvm_phys_timer_read [label="u64 kvm_phys_timer_read (void)
arch/arm64/kvm/arch_timer.c:173"]
    timer_get_offset [label="u64 timer_get_offset (struct arch_timer_context *ctxt)
arch/arm64/kvm/arch_timer.c:104"]
    timer_set_ctl [label="void timer_set_ctl (struct arch_timer_context *ctxt, u32 ctl)
arch/arm64/kvm/arch_timer.c:119"]
    timer_set_ctl -> arch_timer_ctx_index
    timer_set_ctl -> WARN_ON
    timer_emulate [label="void timer_emulate (struct arch_timer_context *ctx)
arch/arm64/kvm/arch_timer.c:465"]
    timer_emulate -> bool
    timer_emulate -> kvm_timer_should_fire
    timer_emulate -> trace_kvm_timer_emulate
    timer_emulate -> kvm_timer_update_irq
    timer_emulate -> kvm_timer_irq_can_fire
    timer_emulate -> soft_timer_start
    timer_emulate -> kvm_timer_compute_delta
    bool [label="bool()"]
    kvm_timer_should_fire [label="bool kvm_timer_should_fire (struct arch_timer_context *timer_ctx)
arch/arm64/kvm/arch_timer.c:381"]
    kvm_timer_should_fire -> arch_timer_ctx_index
    kvm_timer_should_fire -> read_sysreg_el0
    kvm_timer_should_fire -> kvm_timer_irq_can_fire
    kvm_timer_should_fire -> timer_get_cval
    kvm_timer_should_fire -> kvm_phys_timer_read
    kvm_timer_should_fire -> timer_get_offset
    read_sysreg_el0 [label="read_sysreg_el0()"]
    kvm_timer_irq_can_fire [label="bool kvm_timer_irq_can_fire (struct arch_timer_context *timer_ctx)
arch/arm64/kvm/arch_timer.c:279"]
    kvm_timer_irq_can_fire -> WARN_ON
    kvm_timer_irq_can_fire -> timer_get_ctl
    timer_get_ctl [label="u32 timer_get_ctl (struct arch_timer_context *ctxt)
arch/arm64/kvm/arch_timer.c:66"]
    timer_get_ctl -> arch_timer_ctx_index
    timer_get_ctl -> WARN_ON
    timer_get_cval [label="u64 timer_get_cval (struct arch_timer_context *ctxt)
arch/arm64/kvm/arch_timer.c:85"]
    timer_get_cval -> arch_timer_ctx_index
    timer_get_cval -> WARN_ON
    trace_kvm_timer_emulate [label="trace_kvm_timer_emulate()"]
    kvm_timer_update_irq [label="void kvm_timer_update_irq (struct kvm_vcpu *vcpu, bool new_level, struct arch_timer_context *timer_ctx)
arch/arm64/kvm/arch_timer.c:446"]
    kvm_timer_update_irq -> trace_kvm_timer_update_irq
    kvm_timer_update_irq -> timer_irq
    kvm_timer_update_irq -> userspace_irqchip
    kvm_timer_update_irq -> kvm_vgic_inject_irq
    kvm_timer_update_irq -> WARN_ON
    trace_kvm_timer_update_irq [label="trace_kvm_timer_update_irq()"]
    timer_irq [label="timer_irq()"]
    userspace_irqchip [label="inline bool userspace_irqchip (struct kvm *kvm)
arch/arm64/kvm/arch_timer.c:207"]
    userspace_irqchip -> static_branch_unlikely
    userspace_irqchip -> unlikely
    userspace_irqchip -> irqchip_in_kernel
    static_branch_unlikely [label="static_branch_unlikely()"]
    unlikely [label="unlikely()"]
    irqchip_in_kernel [label="irqchip_in_kernel()"]
    kvm_vgic_inject_irq [label="kvm_vgic_inject_irq()"]
    soft_timer_start [label="void soft_timer_start (struct hrtimer *hrt, u64 ns)
arch/arm64/kvm/arch_timer.c:213"]
    soft_timer_start -> hrtimer_start
    soft_timer_start -> ktime_add_ns
    soft_timer_start -> ktime_get
    hrtimer_start [label="hrtimer_start()"]
    ktime_add_ns [label="ktime_add_ns()"]
    ktime_get [label="ktime_get()"]
    kvm_timer_compute_delta [label="u64 kvm_timer_compute_delta (struct arch_timer_context *timer_ctx)
arch/arm64/kvm/arch_timer.c:274"]
    kvm_timer_compute_delta -> kvm_counter_compute_delta
    kvm_timer_compute_delta -> timer_get_cval
    kvm_counter_compute_delta [label="u64 kvm_counter_compute_delta (struct arch_timer_context *timer_ctx, u64 val)
arch/arm64/kvm/arch_timer.c:256"]
    kvm_counter_compute_delta -> kvm_phys_timer_read
    kvm_counter_compute_delta -> timer_get_offset
    kvm_counter_compute_delta -> cyclecounter_cyc2ns
    cyclecounter_cyc2ns [label="cyclecounter_cyc2ns()"]
    preempt_disable [label="preempt_disable()"]
    timer_save_state [label="void timer_save_state (struct arch_timer_context *ctx)
arch/arm64/kvm/arch_timer.c:498"]
    timer_save_state -> vcpu_timer
    timer_save_state -> arch_timer_ctx_index
    timer_save_state -> local_irq_save
    timer_save_state -> timer_set_ctl
    timer_save_state -> read_sysreg_el0
    timer_save_state -> timer_set_cval
    timer_save_state -> write_sysreg_el0
    timer_save_state -> isb
    timer_save_state -> set_cntvoff
    timer_save_state -> timer_get_offset
    timer_save_state -> set_cntpoff
    timer_save_state -> BUG
    timer_save_state -> trace_kvm_timer_save_state
    timer_save_state -> local_irq_restore
    vcpu_timer [label="vcpu_timer()"]
    local_irq_save [label="local_irq_save()"]
    write_sysreg_el0 [label="write_sysreg_el0()"]
    isb [label="isb()"]
    set_cntvoff [label="void set_cntvoff (u64 cntvoff)
arch/arm64/kvm/arch_timer.c:487"]
    set_cntvoff -> kvm_call_hyp
    kvm_call_hyp [label="kvm_call_hyp()"]
    set_cntpoff [label="void set_cntpoff (u64 cntpoff)
arch/arm64/kvm/arch_timer.c:492"]
    set_cntpoff -> has_cntpoff
    set_cntpoff -> write_sysreg_s
    has_cntpoff [label="has_cntpoff()"]
    write_sysreg_s [label="write_sysreg_s()"]
    trace_kvm_timer_save_state [label="trace_kvm_timer_save_state()"]
    local_irq_restore [label="local_irq_restore()"]
    timer_restore_state [label="void timer_restore_state (struct arch_timer_context *ctx)
arch/arm64/kvm/arch_timer.c:604"]
    timer_restore_state -> vcpu_timer
    timer_restore_state -> arch_timer_ctx_index
    timer_restore_state -> local_irq_save
    timer_restore_state -> set_cntvoff
    timer_restore_state -> timer_get_offset
    timer_restore_state -> write_sysreg_el0
    timer_restore_state -> timer_get_cval
    timer_restore_state -> isb
    timer_restore_state -> timer_get_ctl
    timer_restore_state -> set_cntpoff
    timer_restore_state -> BUG
    timer_restore_state -> trace_kvm_timer_restore_state
    timer_restore_state -> local_irq_restore
    trace_kvm_timer_restore_state [label="trace_kvm_timer_restore_state()"]
    preempt_enable [label="preempt_enable()"]
    kvm_arm_timer_read_sysreg [label="u64 kvm_arm_timer_read_sysreg (struct kvm_vcpu *vcpu, enum kvm_arch_timers tmr, enum kvm_arch_timer_regs treg)
arch/arm64/kvm/arch_timer.c:1168"]
    kvm_arm_timer_read_sysreg -> get_timer_map
    kvm_arm_timer_read_sysreg -> vcpu_get_timer
    kvm_arm_timer_read_sysreg -> kvm_arm_timer_read
    kvm_arm_timer_read_sysreg -> preempt_disable
    kvm_arm_timer_read_sysreg -> timer_save_state
    kvm_arm_timer_read_sysreg -> timer_restore_state
    kvm_arm_timer_read_sysreg -> preempt_enable
    kvm_arm_timer_read [label="u64 kvm_arm_timer_read (struct kvm_vcpu *vcpu, struct arch_timer_context *timer, enum kvm_arch_timer_regs treg)
arch/arm64/kvm/arch_timer.c:1133"]
    kvm_arm_timer_read -> timer_get_cval
    kvm_arm_timer_read -> kvm_phys_timer_read
    kvm_arm_timer_read -> timer_get_offset
    kvm_arm_timer_read -> lower_32_bits
    kvm_arm_timer_read -> read_timer_ctl
    kvm_arm_timer_read -> BUG
    lower_32_bits [label="lower_32_bits()"]
    read_timer_ctl [label="u64 read_timer_ctl (struct arch_timer_context *timer)
arch/arm64/kvm/arch_timer.c:1092"]
    read_timer_ctl -> timer_get_ctl
    read_timer_ctl -> kvm_timer_compute_delta
    access_ccsidr [label="bool access_ccsidr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1846"]
    access_ccsidr -> write_to_read_only
    access_ccsidr -> vcpu_read_sys_reg
    access_ccsidr -> get_ccsidr
    write_to_read_only [label="bool write_to_read_only (struct kvm_vcpu *vcpu, struct sys_reg_params *params, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:58"]
    write_to_read_only -> WARN_ONCE
    write_to_read_only -> print_sys_reg_instr
    write_to_read_only -> kvm_inject_undefined
    WARN_ONCE [label="WARN_ONCE()"]
    print_sys_reg_instr [label="print_sys_reg_instr()"]
    get_ccsidr [label="u32 get_ccsidr (struct kvm_vcpu *vcpu, u32 csselr)
arch/arm64/kvm/sys_regs.c:117"]
    get_ccsidr -> get_min_cache_line_size
    get_ccsidr -> SYS_FIELD_PREP
    get_min_cache_line_size [label="u8 get_min_cache_line_size (bool icache)
arch/arm64/kvm/sys_regs.c:95"]
    get_min_cache_line_size -> read_sanitised_ftr_reg
    get_min_cache_line_size -> SYS_FIELD_GET
    read_sanitised_ftr_reg [label="read_sanitised_ftr_reg()"]
    SYS_FIELD_GET [label="SYS_FIELD_GET()"]
    SYS_FIELD_PREP [label="SYS_FIELD_PREP()"]
    access_clidr [label="bool access_clidr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1754"]
    access_clidr -> write_to_read_only
    access_csselr [label="bool access_csselr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1834"]
    access_csselr -> vcpu_write_sys_reg
    access_csselr -> vcpu_read_sys_reg
    access_ctr [label="bool access_ctr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1744"]
    access_ctr -> write_to_read_only
    access_ctr -> read_sanitised_ftr_reg
    access_dcgsw [label="bool access_dcgsw (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:216"]
    access_dcgsw -> kvm_has_mte
    access_dcgsw -> kvm_inject_undefined
    access_dcgsw -> access_dcsw
    kvm_has_mte [label="kvm_has_mte()"]
    access_dcsw [label="bool access_dcsw (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:196"]
    access_dcsw -> read_from_write_only
    access_dcsw -> cpus_have_final_cap
    access_dcsw -> kvm_set_way_flush
    read_from_write_only [label="bool read_from_write_only (struct kvm_vcpu *vcpu, struct sys_reg_params *params, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:48"]
    read_from_write_only -> WARN_ONCE
    read_from_write_only -> print_sys_reg_instr
    read_from_write_only -> kvm_inject_undefined
    cpus_have_final_cap [label="cpus_have_final_cap()"]
    kvm_set_way_flush [label="void kvm_set_way_flush (struct kvm_vcpu *vcpu)
arch/arm64/kvm/mmu.c:2101"]
    kvm_set_way_flush -> vcpu_hcr
    kvm_set_way_flush -> trace_kvm_set_way_flush
    kvm_set_way_flush -> vcpu_pc
    kvm_set_way_flush -> vcpu_has_cache_enabled
    kvm_set_way_flush -> stage2_flush_vm
    vcpu_hcr [label="vcpu_hcr()"]
    trace_kvm_set_way_flush [label="trace_kvm_set_way_flush()"]
    vcpu_pc [label="vcpu_pc()"]
    vcpu_has_cache_enabled [label="vcpu_has_cache_enabled()"]
    stage2_flush_vm [label="void stage2_flush_vm (struct kvm *kvm)
arch/arm64/kvm/mmu.c:352"]
    stage2_flush_vm -> srcu_read_lock
    stage2_flush_vm -> write_lock
    stage2_flush_vm -> kvm_memslots
    stage2_flush_vm -> kvm_for_each_memslot
    stage2_flush_vm -> stage2_flush_memslot
    stage2_flush_vm -> write_unlock
    stage2_flush_vm -> srcu_read_unlock
    srcu_read_lock [label="srcu_read_lock()"]
    write_lock [label="write_lock()"]
    kvm_memslots [label="kvm_memslots()"]
    kvm_for_each_memslot [label="kvm_for_each_memslot()"]
    stage2_flush_memslot [label="void stage2_flush_memslot (struct kvm *kvm, struct kvm_memory_slot *memslot)
arch/arm64/kvm/mmu.c:336"]
    stage2_flush_memslot -> stage2_apply_range_resched
    stage2_apply_range_resched [label="stage2_apply_range_resched()"]
    write_unlock [label="write_unlock()"]
    srcu_read_unlock [label="srcu_read_unlock()"]
    access_elr [label="bool access_elr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:2000"]
    access_elr -> vcpu_write_sys_reg
    access_elr -> vcpu_read_sys_reg
    access_gic_sgi [label="bool access_gic_sgi (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:298"]
    access_gic_sgi -> bool
    access_gic_sgi -> read_from_write_only
    access_gic_sgi -> vgic_v3_dispatch_sgi
    vgic_v3_dispatch_sgi [label="vgic_v3_dispatch_sgi()"]
    access_gic_sre [label="bool access_gic_sre (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:343"]
    access_gic_sre -> ignore_write
    access_id_reg [label="bool access_id_reg (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1500"]
    access_id_reg -> write_to_read_only
    access_id_reg -> read_id_reg
    access_id_reg -> vcpu_has_nv
    access_id_reg -> access_nested_id_reg
    read_id_reg [label="u64 read_id_reg (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1440"]
    read_id_reg -> IDREG
    read_id_reg -> reg_to_encoding
    IDREG [label="IDREG()"]
    access_nested_id_reg [label="void access_nested_id_reg (struct kvm_vcpu *v, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/nested.c:26"]
    access_nested_id_reg -> reg_to_encoding
    access_nested_id_reg -> NV_FTR
    access_nested_id_reg -> GENMASK_ULL
    access_nested_id_reg -> FIELD_PREP
    access_nested_id_reg -> FIELD_GET
    NV_FTR [label="NV_FTR()"]
    FIELD_PREP [label="FIELD_PREP()"]
    FIELD_GET [label="FIELD_GET()"]
    access_pmceid [label="bool access_pmceid (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:854"]
    access_pmceid -> BUG_ON
    access_pmceid -> pmu_access_el0_disabled
    access_pmceid -> get_access_mask
    access_pmceid -> kvm_pmu_get_pmceid
    BUG_ON [label="BUG_ON()"]
    pmu_access_el0_disabled [label="bool pmu_access_el0_disabled (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:789"]
    pmu_access_el0_disabled -> check_pmu_access_disabled
    check_pmu_access_disabled [label="bool check_pmu_access_disabled (struct kvm_vcpu *vcpu, u64 flags)
arch/arm64/kvm/sys_regs.c:778"]
    check_pmu_access_disabled -> bool
    check_pmu_access_disabled -> vcpu_mode_priv
    check_pmu_access_disabled -> kvm_inject_undefined
    vcpu_mode_priv [label="vcpu_mode_priv()"]
    kvm_pmu_get_pmceid [label="u64 kvm_pmu_get_pmceid (struct kvm_vcpu *vcpu, bool pmceid1)
arch/arm64/kvm/pmu-emul.c:761"]
    kvm_pmu_get_pmceid -> kvm_vcpu_has_pmu
    kvm_pmu_get_pmceid -> read_sysreg
    kvm_pmu_get_pmceid -> BIT
    kvm_pmu_get_pmceid -> BIT_ULL
    kvm_pmu_get_pmceid -> kvm_pmu_event_mask
    kvm_pmu_get_pmceid -> bitmap_get_value8
    kvm_vcpu_has_pmu [label="kvm_vcpu_has_pmu()"]
    read_sysreg [label="read_sysreg()"]
    BIT [label="BIT()"]
    BIT_ULL [label="BIT_ULL()"]
    kvm_pmu_event_mask [label="u32 kvm_pmu_event_mask (struct kvm *kvm)
arch/arm64/kvm/pmu-emul.c:55"]
    kvm_pmu_event_mask -> IDREG
    kvm_pmu_event_mask -> SYS_FIELD_GET
    bitmap_get_value8 [label="bitmap_get_value8()"]
    access_pmcnten [label="bool access_pmcnten (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1027"]
    access_pmcnten -> pmu_access_el0_disabled
    access_pmcnten -> kvm_pmu_valid_counter_mask
    access_pmcnten -> kvm_pmu_enable_counter_mask
    access_pmcnten -> kvm_vcpu_pmu_restore_guest
    access_pmcnten -> kvm_pmu_disable_counter_mask
    kvm_pmu_valid_counter_mask [label="u64 kvm_pmu_valid_counter_mask (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:268"]
    kvm_pmu_valid_counter_mask -> kvm_vcpu_read_pmcr
    kvm_pmu_valid_counter_mask -> BIT
    kvm_pmu_valid_counter_mask -> GENMASK
    kvm_vcpu_read_pmcr [label="u64 kvm_vcpu_read_pmcr (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:1137"]
    GENMASK [label="GENMASK()"]
    kvm_pmu_enable_counter_mask [label="void kvm_pmu_enable_counter_mask (struct kvm_vcpu *vcpu, u64 val)
arch/arm64/kvm/pmu-emul.c:286"]
    kvm_pmu_enable_counter_mask -> kvm_vcpu_has_pmu
    kvm_pmu_enable_counter_mask -> kvm_vcpu_read_pmcr
    kvm_pmu_enable_counter_mask -> BIT
    kvm_pmu_enable_counter_mask -> kvm_vcpu_idx_to_pmc
    kvm_pmu_enable_counter_mask -> kvm_pmu_create_perf_event
    kvm_pmu_enable_counter_mask -> perf_event_enable
    kvm_pmu_enable_counter_mask -> kvm_debug
    kvm_vcpu_idx_to_pmc [label="struct kvm_pmc *kvm_vcpu_idx_to_pmc (struct kvm_vcpu *vcpu, int cnt_idx)
arch/arm64/kvm/pmu-emul.c:34"]
    kvm_pmu_create_perf_event [label="void kvm_pmu_create_perf_event (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:597"]
    kvm_pmu_create_perf_event -> kvm_pmc_to_vcpu
    kvm_pmu_create_perf_event -> bool
    kvm_pmu_create_perf_event -> counter_index_to_evtreg
    kvm_pmu_create_perf_event -> kvm_pmu_stop_counter
    kvm_pmu_create_perf_event -> kvm_pmu_event_mask
    kvm_pmu_create_perf_event -> test_bit
    kvm_pmu_create_perf_event -> memset
    kvm_pmu_create_perf_event -> kvm_pmu_counter_is_enabled
    kvm_pmu_create_perf_event -> kvm_pmc_is_64bit
    kvm_pmu_create_perf_event -> compute_period
    kvm_pmu_create_perf_event -> kvm_pmu_get_pmc_value
    kvm_pmu_create_perf_event -> perf_event_create_kernel_counter
    kvm_pmu_create_perf_event -> kvm_pmu_perf_overflow
    kvm_pmu_create_perf_event -> IS_ERR
    kvm_pmu_create_perf_event -> pr_err_once
    kvm_pmu_create_perf_event -> PTR_ERR
    kvm_pmc_to_vcpu [label="struct kvm_vcpu *kvm_pmc_to_vcpu (const struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:29"]
    kvm_pmc_to_vcpu -> container_of
    container_of [label="container_of()"]
    counter_index_to_evtreg [label="u32 counter_index_to_evtreg (u64 idx)
arch/arm64/kvm/pmu-emul.c:109"]
    kvm_pmu_stop_counter [label="void kvm_pmu_stop_counter (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:209"]
    kvm_pmu_stop_counter -> kvm_pmc_to_vcpu
    kvm_pmu_stop_counter -> kvm_pmu_get_pmc_value
    kvm_pmu_stop_counter -> counter_index_to_reg
    kvm_pmu_stop_counter -> kvm_pmu_release_perf_event
    kvm_pmu_get_pmc_value [label="u64 kvm_pmu_get_pmc_value (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:114"]
    kvm_pmu_get_pmc_value -> kvm_pmc_to_vcpu
    kvm_pmu_get_pmc_value -> counter_index_to_reg
    kvm_pmu_get_pmc_value -> perf_event_read_value
    kvm_pmu_get_pmc_value -> kvm_pmc_is_64bit
    kvm_pmu_get_pmc_value -> lower_32_bits
    counter_index_to_reg [label="u32 counter_index_to_reg (u64 idx)
arch/arm64/kvm/pmu-emul.c:104"]
    perf_event_read_value [label="perf_event_read_value()"]
    kvm_pmc_is_64bit [label="bool kvm_pmc_is_64bit (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:84"]
    kvm_pmc_is_64bit -> kvm_pmu_is_3p5
    kvm_pmc_is_64bit -> kvm_pmc_to_vcpu
    kvm_pmu_is_3p5 [label="kvm_pmu_is_3p5()"]
    kvm_pmu_release_perf_event [label="void kvm_pmu_release_perf_event (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:194"]
    kvm_pmu_release_perf_event -> perf_event_disable
    kvm_pmu_release_perf_event -> perf_event_release_kernel
    perf_event_disable [label="perf_event_disable()"]
    perf_event_release_kernel [label="perf_event_release_kernel()"]
    test_bit [label="test_bit()"]
    memset [label="memset()"]
    kvm_pmu_counter_is_enabled [label="bool kvm_pmu_counter_is_enabled (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:586"]
    kvm_pmu_counter_is_enabled -> kvm_pmc_to_vcpu
    kvm_pmu_counter_is_enabled -> kvm_vcpu_read_pmcr
    kvm_pmu_counter_is_enabled -> BIT
    compute_period [label="u64 compute_period (struct kvm_pmc *pmc, u64 counter)
arch/arm64/kvm/pmu-emul.c:482"]
    compute_period -> kvm_pmc_is_64bit
    compute_period -> kvm_pmc_has_64bit_overflow
    compute_period -> GENMASK
    kvm_pmc_has_64bit_overflow [label="bool kvm_pmc_has_64bit_overflow (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:90"]
    kvm_pmc_has_64bit_overflow -> kvm_vcpu_read_pmcr
    kvm_pmc_has_64bit_overflow -> kvm_pmc_to_vcpu
    perf_event_create_kernel_counter [label="perf_event_create_kernel_counter()"]
    kvm_pmu_perf_overflow [label="void kvm_pmu_perf_overflow (struct perf_event *perf_event, struct perf_sample_data *data, struct pt_regs *regs)
arch/arm64/kvm/pmu-emul.c:497"]
    kvm_pmu_perf_overflow -> to_arm_pmu
    kvm_pmu_perf_overflow -> kvm_pmc_to_vcpu
    kvm_pmu_perf_overflow -> compute_period
    kvm_pmu_perf_overflow -> local64_read
    kvm_pmu_perf_overflow -> local64_set
    kvm_pmu_perf_overflow -> BIT
    kvm_pmu_perf_overflow -> kvm_pmu_counter_can_chain
    kvm_pmu_perf_overflow -> kvm_pmu_counter_increment
    kvm_pmu_perf_overflow -> kvm_pmu_overflow_status
    kvm_pmu_perf_overflow -> kvm_make_request
    kvm_pmu_perf_overflow -> in_nmi
    kvm_pmu_perf_overflow -> kvm_vcpu_kick
    kvm_pmu_perf_overflow -> irq_work_queue
    to_arm_pmu [label="to_arm_pmu()"]
    local64_read [label="local64_read()"]
    local64_set [label="local64_set()"]
    kvm_pmu_counter_can_chain [label="bool kvm_pmu_counter_can_chain (struct kvm_pmc *pmc)
arch/arm64/kvm/pmu-emul.c:98"]
    kvm_pmu_counter_can_chain -> kvm_pmc_has_64bit_overflow
    kvm_pmu_counter_increment [label="void kvm_pmu_counter_increment (struct kvm_vcpu *vcpu, unsigned long mask, u32 event)
arch/arm64/kvm/pmu-emul.c:441"]
    kvm_pmu_counter_increment -> kvm_vcpu_read_pmcr
    kvm_pmu_counter_increment -> for_each_set_bit
    kvm_pmu_counter_increment -> kvm_vcpu_idx_to_pmc
    kvm_pmu_counter_increment -> counter_index_to_evtreg
    kvm_pmu_counter_increment -> kvm_pmu_event_mask
    kvm_pmu_counter_increment -> counter_index_to_reg
    kvm_pmu_counter_increment -> kvm_pmc_is_64bit
    kvm_pmu_counter_increment -> lower_32_bits
    kvm_pmu_counter_increment -> kvm_pmc_has_64bit_overflow
    kvm_pmu_counter_increment -> BIT
    kvm_pmu_counter_increment -> kvm_pmu_counter_can_chain
    kvm_pmu_counter_increment -> kvm_pmu_counter_increment
    for_each_set_bit [label="for_each_set_bit()"]
    kvm_pmu_overflow_status [label="u64 kvm_pmu_overflow_status (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:340"]
    kvm_pmu_overflow_status -> kvm_vcpu_read_pmcr
    kvm_make_request [label="kvm_make_request()"]
    in_nmi [label="in_nmi()"]
    kvm_vcpu_kick [label="void kvm_vcpu_kick (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3639"]
    kvm_vcpu_kick -> kvm_vcpu_wake_up
    kvm_vcpu_kick -> get_cpu
    kvm_vcpu_kick -> WRITE_ONCE
    kvm_vcpu_kick -> kvm_arch_vcpu_should_kick
    kvm_vcpu_kick -> READ_ONCE
    kvm_vcpu_kick -> cpu_online
    kvm_vcpu_kick -> smp_send_reschedule
    kvm_vcpu_kick -> put_cpu
    kvm_vcpu_wake_up [label="bool kvm_vcpu_wake_up (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3623"]
    kvm_vcpu_wake_up -> WRITE_ONCE
    WRITE_ONCE [label="WRITE_ONCE()"]
    get_cpu [label="get_cpu()"]
    kvm_arch_vcpu_should_kick [label="int kvm_arch_vcpu_should_kick (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:67"]
    kvm_arch_vcpu_should_kick -> kvm_vcpu_exiting_guest_mode
    kvm_vcpu_exiting_guest_mode [label="kvm_vcpu_exiting_guest_mode()"]
    READ_ONCE [label="READ_ONCE()"]
    cpu_online [label="cpu_online()"]
    smp_send_reschedule [label="smp_send_reschedule()"]
    put_cpu [label="put_cpu()"]
    irq_work_queue [label="irq_work_queue()"]
    IS_ERR [label="IS_ERR()"]
    pr_err_once [label="pr_err_once()"]
    PTR_ERR [label="PTR_ERR()"]
    perf_event_enable [label="perf_event_enable()"]
    kvm_debug [label="kvm_debug()"]
    kvm_vcpu_pmu_restore_guest [label="void kvm_vcpu_pmu_restore_guest (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu.c:176"]
    kvm_vcpu_pmu_restore_guest -> kvm_arm_support_pmu_v3
    kvm_vcpu_pmu_restore_guest -> has_vhe
    kvm_vcpu_pmu_restore_guest -> preempt_disable
    kvm_vcpu_pmu_restore_guest -> kvm_get_pmu_events
    kvm_vcpu_pmu_restore_guest -> kvm_vcpu_pmu_enable_el0
    kvm_vcpu_pmu_restore_guest -> kvm_vcpu_pmu_disable_el0
    kvm_vcpu_pmu_restore_guest -> preempt_enable
    kvm_arm_support_pmu_v3 [label="kvm_arm_support_pmu_v3()"]
    kvm_get_pmu_events [label="struct kvm_pmu_events *kvm_get_pmu_events (void)
arch/arm64/kvm/pmu.c:29"]
    kvm_get_pmu_events -> this_cpu_ptr
    this_cpu_ptr [label="this_cpu_ptr()"]
    kvm_vcpu_pmu_enable_el0 [label="void kvm_vcpu_pmu_enable_el0 (unsigned long events)
arch/arm64/kvm/pmu.c:143"]
    kvm_vcpu_pmu_enable_el0 -> for_each_set_bit
    kvm_vcpu_pmu_enable_el0 -> kvm_vcpu_pmu_read_evtype_direct
    kvm_vcpu_pmu_enable_el0 -> kvm_vcpu_pmu_write_evtype_direct
    kvm_vcpu_pmu_read_evtype_direct [label="u64 kvm_vcpu_pmu_read_evtype_direct (int idx)
arch/arm64/kvm/pmu.c:111"]
    kvm_vcpu_pmu_read_evtype_direct -> PMEVTYPER_CASES
    kvm_vcpu_pmu_read_evtype_direct -> read_sysreg
    kvm_vcpu_pmu_read_evtype_direct -> WARN_ON
    PMEVTYPER_CASES [label="PMEVTYPER_CASES()"]
    kvm_vcpu_pmu_write_evtype_direct [label="void kvm_vcpu_pmu_write_evtype_direct (int idx, u32 val)
arch/arm64/kvm/pmu.c:128"]
    kvm_vcpu_pmu_write_evtype_direct -> PMEVTYPER_CASES
    kvm_vcpu_pmu_write_evtype_direct -> write_sysreg
    kvm_vcpu_pmu_write_evtype_direct -> WARN_ON
    write_sysreg [label="write_sysreg()"]
    kvm_vcpu_pmu_disable_el0 [label="void kvm_vcpu_pmu_disable_el0 (unsigned long events)
arch/arm64/kvm/pmu.c:158"]
    kvm_vcpu_pmu_disable_el0 -> for_each_set_bit
    kvm_vcpu_pmu_disable_el0 -> kvm_vcpu_pmu_read_evtype_direct
    kvm_vcpu_pmu_disable_el0 -> kvm_vcpu_pmu_write_evtype_direct
    kvm_pmu_disable_counter_mask [label="void kvm_pmu_disable_counter_mask (struct kvm_vcpu *vcpu, u64 val)
arch/arm64/kvm/pmu-emul.c:320"]
    kvm_pmu_disable_counter_mask -> kvm_vcpu_has_pmu
    kvm_pmu_disable_counter_mask -> BIT
    kvm_pmu_disable_counter_mask -> kvm_vcpu_idx_to_pmc
    kvm_pmu_disable_counter_mask -> perf_event_disable
    access_pmcr [label="bool access_pmcr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:809"]
    access_pmcr -> pmu_access_el0_disabled
    access_pmcr -> kvm_vcpu_read_pmcr
    access_pmcr -> kvm_supports_32bit_el0
    access_pmcr -> kvm_pmu_handle_pmcr
    kvm_pmu_handle_pmcr [label="void kvm_pmu_handle_pmcr (struct kvm_vcpu *vcpu, u64 val)
arch/arm64/kvm/pmu-emul.c:552"]
    kvm_pmu_handle_pmcr -> kvm_vcpu_has_pmu
    kvm_pmu_handle_pmcr -> kvm_pmu_is_3p5
    kvm_pmu_handle_pmcr -> kvm_pmu_enable_counter_mask
    kvm_pmu_handle_pmcr -> kvm_pmu_disable_counter_mask
    kvm_pmu_handle_pmcr -> kvm_pmu_set_counter_value
    kvm_pmu_handle_pmcr -> kvm_pmu_valid_counter_mask
    kvm_pmu_handle_pmcr -> BIT
    kvm_pmu_handle_pmcr -> for_each_set_bit
    kvm_pmu_handle_pmcr -> kvm_pmu_set_pmc_value
    kvm_pmu_handle_pmcr -> kvm_vcpu_idx_to_pmc
    kvm_pmu_handle_pmcr -> kvm_vcpu_pmu_restore_guest
    kvm_pmu_set_counter_value [label="void kvm_pmu_set_counter_value (struct kvm_vcpu *vcpu, u64 select_idx, u64 val)
arch/arm64/kvm/pmu-emul.c:182"]
    kvm_pmu_set_counter_value -> kvm_vcpu_has_pmu
    kvm_pmu_set_counter_value -> kvm_pmu_set_pmc_value
    kvm_pmu_set_counter_value -> kvm_vcpu_idx_to_pmc
    kvm_pmu_set_pmc_value [label="void kvm_pmu_set_pmc_value (struct kvm_pmc *pmc, u64 val, bool force)
arch/arm64/kvm/pmu-emul.c:149"]
    kvm_pmu_set_pmc_value -> kvm_pmc_to_vcpu
    kvm_pmu_set_pmc_value -> kvm_pmu_release_perf_event
    kvm_pmu_set_pmc_value -> counter_index_to_reg
    kvm_pmu_set_pmc_value -> vcpu_mode_is_32bit
    kvm_pmu_set_pmc_value -> GENMASK
    kvm_pmu_set_pmc_value -> lower_32_bits
    kvm_pmu_set_pmc_value -> kvm_pmu_create_perf_event
    vcpu_mode_is_32bit [label="vcpu_mode_is_32bit()"]
    access_pminten [label="bool access_pminten (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1055"]
    access_pminten -> kvm_pmu_valid_counter_mask
    access_pminten -> check_pmu_access_disabled
    access_pmovs [label="bool access_pmovs (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1079"]
    access_pmovs -> kvm_pmu_valid_counter_mask
    access_pmovs -> pmu_access_el0_disabled
    access_pmselr [label="bool access_pmselr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:838"]
    access_pmselr -> pmu_access_event_counter_el0_disabled
    pmu_access_event_counter_el0_disabled [label="bool pmu_access_event_counter_el0_disabled (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:804"]
    pmu_access_event_counter_el0_disabled -> check_pmu_access_disabled
    access_pmswinc [label="bool access_pmswinc (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1101"]
    access_pmswinc -> read_from_write_only
    access_pmswinc -> pmu_write_swinc_el0_disabled
    access_pmswinc -> kvm_pmu_valid_counter_mask
    access_pmswinc -> kvm_pmu_software_increment
    pmu_write_swinc_el0_disabled [label="bool pmu_write_swinc_el0_disabled (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:794"]
    pmu_write_swinc_el0_disabled -> check_pmu_access_disabled
    kvm_pmu_software_increment [label="void kvm_pmu_software_increment (struct kvm_vcpu *vcpu, u64 val)
arch/arm64/kvm/pmu-emul.c:542"]
    kvm_pmu_software_increment -> kvm_pmu_counter_increment
    access_pmu_evcntr [label="bool access_pmu_evcntr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:905"]
    access_pmu_evcntr -> pmu_access_event_counter_el0_disabled
    access_pmu_evcntr -> pmu_access_cycle_counter_el0_disabled
    access_pmu_evcntr -> WARN_ON
    access_pmu_evcntr -> pmu_counter_idx_valid
    access_pmu_evcntr -> pmu_access_el0_disabled
    access_pmu_evcntr -> kvm_pmu_set_counter_value
    access_pmu_evcntr -> kvm_pmu_get_counter_value
    pmu_access_cycle_counter_el0_disabled [label="bool pmu_access_cycle_counter_el0_disabled (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:799"]
    pmu_access_cycle_counter_el0_disabled -> check_pmu_access_disabled
    pmu_counter_idx_valid [label="bool pmu_counter_idx_valid (struct kvm_vcpu *vcpu, u64 idx)
arch/arm64/kvm/sys_regs.c:875"]
    pmu_counter_idx_valid -> kvm_vcpu_read_pmcr
    pmu_counter_idx_valid -> kvm_inject_undefined
    kvm_pmu_get_counter_value [label="u64 kvm_pmu_get_counter_value (struct kvm_vcpu *vcpu, u64 select_idx)
arch/arm64/kvm/pmu-emul.c:141"]
    kvm_pmu_get_counter_value -> kvm_vcpu_has_pmu
    kvm_pmu_get_counter_value -> kvm_pmu_get_pmc_value
    kvm_pmu_get_counter_value -> kvm_vcpu_idx_to_pmc
    access_pmu_evtyper [label="bool access_pmu_evtyper (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:958"]
    access_pmu_evtyper -> pmu_access_el0_disabled
    access_pmu_evtyper -> BUG
    access_pmu_evtyper -> pmu_counter_idx_valid
    access_pmu_evtyper -> kvm_pmu_set_counter_event_type
    access_pmu_evtyper -> kvm_vcpu_pmu_restore_guest
    kvm_pmu_set_counter_event_type [label="void kvm_pmu_set_counter_event_type (struct kvm_vcpu *vcpu, u64 data, u64 select_idx)
arch/arm64/kvm/pmu-emul.c:679"]
    kvm_pmu_set_counter_event_type -> kvm_vcpu_idx_to_pmc
    kvm_pmu_set_counter_event_type -> kvm_vcpu_has_pmu
    kvm_pmu_set_counter_event_type -> counter_index_to_evtreg
    kvm_pmu_set_counter_event_type -> kvm_pmu_evtyper_mask
    kvm_pmu_set_counter_event_type -> kvm_pmu_create_perf_event
    kvm_pmu_evtyper_mask [label="u64 kvm_pmu_evtyper_mask (struct kvm *kvm)
arch/arm64/kvm/pmu-emul.c:63"]
    kvm_pmu_evtyper_mask -> kvm_pmu_event_mask
    kvm_pmu_evtyper_mask -> IDREG
    kvm_pmu_evtyper_mask -> SYS_FIELD_GET
    access_pmuserenr [label="bool access_pmuserenr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1117"]
    access_pmuserenr -> vcpu_mode_priv
    access_pmuserenr -> kvm_inject_undefined
    access_sp_el1 [label="bool access_sp_el1 (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1988"]
    access_spsr [label="bool access_spsr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:2012"]
    access_vm_reg [label="bool access_vm_reg (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:252"]
    access_vm_reg -> bool
    access_vm_reg -> vcpu_has_cache_enabled
    access_vm_reg -> BUG_ON
    access_vm_reg -> get_access_mask
    access_vm_reg -> vcpu_read_sys_reg
    access_vm_reg -> vcpu_write_sys_reg
    access_vm_reg -> kvm_toggle_cache
    kvm_toggle_cache [label="void kvm_toggle_cache (struct kvm_vcpu *vcpu, bool was_enabled)
arch/arm64/kvm/mmu.c:2122"]
    kvm_toggle_cache -> bool
    kvm_toggle_cache -> vcpu_has_cache_enabled
    kvm_toggle_cache -> stage2_flush_vm
    kvm_toggle_cache -> vcpu_hcr
    kvm_toggle_cache -> trace_kvm_toggle_cache
    kvm_toggle_cache -> vcpu_pc
    trace_kvm_toggle_cache [label="trace_kvm_toggle_cache()"]
    check_cnthctl_el1pcten [label="enum trap_behaviour check_cnthctl_el1pcten (struct kvm_vcpu *vcpu)
arch/arm64/kvm/emulate-nested.c:397"]
    check_cnthctl_el1pcten -> get_sanitized_cnthctl
    get_sanitized_cnthctl [label="u64 get_sanitized_cnthctl (struct kvm_vcpu *vcpu)
arch/arm64/kvm/emulate-nested.c:387"]
    get_sanitized_cnthctl -> vcpu_el2_e2h_is_set
    vcpu_el2_e2h_is_set [label="vcpu_el2_e2h_is_set()"]
    check_cnthctl_el1pten [label="enum trap_behaviour check_cnthctl_el1pten (struct kvm_vcpu *vcpu)
arch/arm64/kvm/emulate-nested.c:405"]
    check_cnthctl_el1pten -> get_sanitized_cnthctl
    clean_dcache_guest_page [label="void clean_dcache_guest_page (void *va, size_t size)
arch/arm64/kvm/mmu.c:273"]
    coalesced_mmio_destructor [label="void coalesced_mmio_destructor (struct kvm_io_device *this)
virt/kvm/coalesced_mmio.c:96"]
    coalesced_mmio_destructor -> to_mmio
    coalesced_mmio_destructor -> list_del
    coalesced_mmio_destructor -> kfree
    to_mmio [label="inline struct kvm_coalesced_mmio_dev *to_mmio (struct kvm_io_device *dev)
virt/kvm/coalesced_mmio.c:20"]
    to_mmio -> container_of
    list_del [label="list_del()"]
    kfree [label="kfree()"]
    coalesced_mmio_write [label="int coalesced_mmio_write (struct kvm_vcpu *vcpu, struct kvm_io_device *this, gpa_t addr, int len, const void *val)
virt/kvm/coalesced_mmio.c:64"]
    coalesced_mmio_write -> to_mmio
    coalesced_mmio_write -> coalesced_mmio_in_range
    coalesced_mmio_write -> spin_lock
    coalesced_mmio_write -> READ_ONCE
    coalesced_mmio_write -> coalesced_mmio_has_room
    coalesced_mmio_write -> spin_unlock
    coalesced_mmio_write -> memcpy
    coalesced_mmio_write -> smp_wmb
    coalesced_mmio_in_range [label="int coalesced_mmio_in_range (struct kvm_coalesced_mmio_dev *dev, gpa_t addr, int len)
virt/kvm/coalesced_mmio.c:25"]
    spin_lock [label="spin_lock()"]
    coalesced_mmio_has_room [label="int coalesced_mmio_has_room (struct kvm_coalesced_mmio_dev *dev, u32 last)
virt/kvm/coalesced_mmio.c:43"]
    spin_unlock [label="spin_unlock()"]
    memcpy [label="memcpy()"]
    smp_wmb [label="smp_wmb()"]
    create_hyp_io_mappings [label="int create_hyp_io_mappings (phys_addr_t phys_addr, size_t size, void __iomem **kaddr, void __iomem **haddr)
arch/arm64/kvm/mmu.c:740"]
    create_hyp_io_mappings -> is_protected_kvm_enabled
    create_hyp_io_mappings -> ioremap
    create_hyp_io_mappings -> is_kernel_in_hyp_mode
    create_hyp_io_mappings -> iounmap
    is_protected_kvm_enabled [label="is_protected_kvm_enabled()"]
    ioremap [label="ioremap()"]
    is_kernel_in_hyp_mode [label="is_kernel_in_hyp_mode()"]
    iounmap [label="iounmap()"]
    early_kvm_mode_cfg [label="int __init early_kvm_mode_cfg (char *arg)
arch/arm64/kvm/arm.c:2609"]
    early_kvm_mode_cfg -> strcmp
    early_kvm_mode_cfg -> is_hyp_mode_available
    early_kvm_mode_cfg -> pr_warn_once
    early_kvm_mode_cfg -> is_kernel_in_hyp_mode
    early_kvm_mode_cfg -> WARN_ON
    strcmp [label="strcmp()"]
    is_hyp_mode_available [label="is_hyp_mode_available()"]
    pr_warn_once [label="pr_warn_once()"]
    el2_visibility [label="unsigned int el2_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1879"]
    el2_visibility -> vcpu_has_nv
    file_is_kvm [label="bool file_is_kvm (struct file *file)
virt/kvm/kvm_main.c:5065"]
    finalize_pkvm [label="int __init finalize_pkvm (void)
arch/arm64/kvm/pkvm.c:250"]
    finalize_pkvm -> is_protected_kvm_enabled
    finalize_pkvm -> is_kvm_arm_initialised
    finalize_pkvm -> kmemleak_free_part
    finalize_pkvm -> kmemleak_free_part_phys
    finalize_pkvm -> pkvm_drop_host_privileges
    finalize_pkvm -> pr_err
    is_kvm_arm_initialised [label="bool is_kvm_arm_initialised (void)
arch/arm64/kvm/arm.c:62"]
    kmemleak_free_part [label="kmemleak_free_part()"]
    kmemleak_free_part_phys [label="kmemleak_free_part_phys()"]
    pkvm_drop_host_privileges [label="int __init pkvm_drop_host_privileges (void)
arch/arm64/kvm/pkvm.c:237"]
    pkvm_drop_host_privileges -> static_branch_enable
    pkvm_drop_host_privileges -> on_each_cpu
    static_branch_enable [label="static_branch_enable()"]
    on_each_cpu [label="on_each_cpu()"]
    pr_err [label="pr_err()"]
    get_bcr [label="int get_bcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 *val)
arch/arm64/kvm/sys_regs.c:588"]
    get_bvr [label="int get_bvr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 *val)
arch/arm64/kvm/sys_regs.c:551"]
    get_gic_ap0r [label="int get_gic_ap0r (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:241"]
    get_gic_ap0r -> vgic_v3_max_apr_idx
    get_gic_ap0r -> get_apr_reg
    vgic_v3_max_apr_idx [label="vgic_v3_max_apr_idx()"]
    get_apr_reg [label="u64 get_apr_reg (struct kvm_vcpu *vcpu, u8 apr, u8 idx)
arch/arm64/kvm/vgic-sys-reg-v3.c:218"]
    get_gic_ap1r [label="int get_gic_ap1r (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:267"]
    get_gic_ap1r -> vgic_v3_max_apr_idx
    get_gic_ap1r -> get_apr_reg
    get_gic_bpr0 [label="int get_gic_bpr0 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:122"]
    get_gic_bpr0 -> vgic_get_vmcr
    get_gic_bpr0 -> FIELD_PREP
    vgic_get_vmcr [label="vgic_get_vmcr()"]
    get_gic_bpr1 [label="int get_gic_bpr1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:147"]
    get_gic_bpr1 -> vgic_get_vmcr
    get_gic_bpr1 -> FIELD_PREP
    get_gic_bpr1 -> min
    min [label="min()"]
    get_gic_ctlr [label="int get_gic_ctlr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *valp)
arch/arm64/kvm/vgic-sys-reg-v3.c:59"]
    get_gic_ctlr -> vgic_get_vmcr
    get_gic_ctlr -> FIELD_PREP
    get_gic_ctlr -> FIELD_GET
    get_gic_grpen0 [label="int get_gic_grpen0 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:174"]
    get_gic_grpen0 -> vgic_get_vmcr
    get_gic_grpen0 -> FIELD_PREP
    get_gic_grpen1 [label="int get_gic_grpen1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:197"]
    get_gic_grpen1 -> vgic_get_vmcr
    get_gic_grpen1 -> FIELD_GET
    get_gic_pmr [label="int get_gic_pmr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:99"]
    get_gic_pmr -> vgic_get_vmcr
    get_gic_pmr -> FIELD_PREP
    get_gic_sre [label="int get_gic_sre (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/vgic-sys-reg-v3.c:290"]
    get_id_reg [label="int get_id_reg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 *val)
arch/arm64/kvm/sys_regs.c:1672"]
    get_id_reg -> kvm_vm_has_ran_once
    get_id_reg -> read_id_reg
    get_id_reg -> mutex_lock
    get_id_reg -> mutex_unlock
    kvm_vm_has_ran_once [label="kvm_vm_has_ran_once()"]
    mutex_lock [label="mutex_lock()"]
    mutex_unlock [label="mutex_unlock()"]
    get_pmcr [label="int get_pmcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/sys_regs.c:1136"]
    get_pmcr -> kvm_vcpu_read_pmcr
    get_pmreg [label="int get_pmreg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/sys_regs.c:1019"]
    get_pmreg -> kvm_pmu_valid_counter_mask
    get_pmu_evcntr [label="int get_pmu_evcntr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 *val)
arch/arm64/kvm/sys_regs.c:889"]
    get_pmu_evcntr -> kvm_pmu_get_counter_value
    get_raz_reg [label="int get_raz_reg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 *val)
arch/arm64/kvm/sys_regs.c:1731"]
    get_wcr [label="int get_wcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 *val)
arch/arm64/kvm/sys_regs.c:663"]
    get_wvr [label="int get_wvr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 *val)
arch/arm64/kvm/sys_regs.c:626"]
    gfn_to_hva_prot [label="unsigned long gfn_to_hva_prot (struct kvm *kvm, gfn_t gfn, bool *writable)
virt/kvm/kvm_main.c:2481"]
    gfn_to_hva_prot -> gfn_to_memslot
    gfn_to_hva_prot -> gfn_to_hva_memslot_prot
    gfn_to_memslot [label="struct kvm_memory_slot *gfn_to_memslot (struct kvm *kvm, gfn_t gfn)
virt/kvm/kvm_main.c:2338"]
    gfn_to_memslot -> kvm_memslots
    gfn_to_hva_memslot_prot [label="unsigned long gfn_to_hva_memslot_prot (struct kvm_memory_slot *slot, gfn_t gfn, bool *writable)
virt/kvm/kvm_main.c:2470"]
    gfn_to_hva_memslot_prot -> kvm_is_error_hva
    gfn_to_hva_memslot_prot -> memslot_is_readonly
    kvm_is_error_hva [label="kvm_is_error_hva()"]
    memslot_is_readonly [label="bool memslot_is_readonly (const struct kvm_memory_slot *slot)
virt/kvm/kvm_main.c:2417"]
    gfn_to_page [label="struct page *gfn_to_page (struct kvm *kvm, gfn_t gfn)
virt/kvm/kvm_main.c:2834"]
    gfn_to_page -> gfn_to_pfn
    gfn_to_page -> is_error_noslot_pfn
    gfn_to_page -> kvm_pfn_to_refcounted_page
    gfn_to_pfn [label="kvm_pfn_t gfn_to_pfn (struct kvm *kvm, gfn_t gfn)
virt/kvm/kvm_main.c:2799"]
    gfn_to_pfn -> gfn_to_pfn_memslot
    gfn_to_pfn -> gfn_to_memslot
    gfn_to_pfn_memslot [label="kvm_pfn_t gfn_to_pfn_memslot (const struct kvm_memory_slot *slot, gfn_t gfn)
virt/kvm/kvm_main.c:2779"]
    is_error_noslot_pfn [label="is_error_noslot_pfn()"]
    kvm_pfn_to_refcounted_page [label="struct page *kvm_pfn_to_refcounted_page (kvm_pfn_t pfn)
virt/kvm/kvm_main.c:179"]
    kvm_pfn_to_refcounted_page -> pfn_valid
    kvm_pfn_to_refcounted_page -> pfn_to_page
    kvm_pfn_to_refcounted_page -> PageReserved
    kvm_pfn_to_refcounted_page -> is_zero_pfn
    kvm_pfn_to_refcounted_page -> kvm_is_zone_device_page
    pfn_valid [label="pfn_valid()"]
    pfn_to_page [label="pfn_to_page()"]
    PageReserved [label="PageReserved()"]
    is_zero_pfn [label="is_zero_pfn()"]
    kvm_is_zone_device_page [label="bool kvm_is_zone_device_page (struct page *page)
virt/kvm/kvm_main.c:159"]
    kvm_is_zone_device_page -> WARN_ON_ONCE
    kvm_is_zone_device_page -> page_count
    kvm_is_zone_device_page -> is_zone_device_page
    WARN_ON_ONCE [label="WARN_ON_ONCE()"]
    page_count [label="page_count()"]
    is_zone_device_page [label="is_zone_device_page()"]
    gfn_to_page_many_atomic [label="int gfn_to_page_many_atomic (struct kvm_memory_slot *slot, gfn_t gfn, struct page **pages, int nr_pages)
virt/kvm/kvm_main.c:2811"]
    gfn_to_page_many_atomic -> gfn_to_hva_many
    gfn_to_page_many_atomic -> kvm_is_error_hva
    gfn_to_page_many_atomic -> get_user_pages_fast_only
    gfn_to_hva_many [label="unsigned long gfn_to_hva_many (struct kvm_memory_slot *slot, gfn_t gfn, gfn_t *nr_pages)
virt/kvm/kvm_main.c:2437"]
    get_user_pages_fast_only [label="get_user_pages_fast_only()"]
    handle_hvc [label="int handle_hvc (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:37"]
    handle_hvc -> trace_kvm_hvc_arm64
    handle_hvc -> vcpu_pc
    handle_hvc -> vcpu_get_reg
    handle_hvc -> kvm_vcpu_hvc_get_imm
    handle_hvc -> vcpu_has_nv
    handle_hvc -> vcpu_read_sys_reg
    handle_hvc -> kvm_inject_undefined
    handle_hvc -> kvm_inject_nested_sync
    handle_hvc -> kvm_vcpu_get_esr
    handle_hvc -> kvm_smccc_call_handler
    trace_kvm_hvc_arm64 [label="trace_kvm_hvc_arm64()"]
    vcpu_get_reg [label="vcpu_get_reg()"]
    kvm_vcpu_hvc_get_imm [label="kvm_vcpu_hvc_get_imm()"]
    kvm_inject_nested_sync [label="int kvm_inject_nested_sync (struct kvm_vcpu *vcpu, u64 esr_el2)
arch/arm64/kvm/emulate-nested.c:2099"]
    kvm_inject_nested_sync -> kvm_inject_nested
    kvm_inject_nested [label="int kvm_inject_nested (struct kvm_vcpu *vcpu, u64 esr_el2, enum exception_type type)
arch/arm64/kvm/emulate-nested.c:2038"]
    kvm_inject_nested -> bool
    kvm_inject_nested -> vcpu_has_nv
    kvm_inject_nested -> kvm_err
    kvm_inject_nested -> vcpu_cpsr
    kvm_inject_nested -> vcpu_el2_e2h_is_set
    kvm_inject_nested -> vcpu_el2_tge_is_set
    kvm_inject_nested -> kvm_inject_el2_exception
    kvm_inject_nested -> preempt_disable
    kvm_inject_nested -> kvm_arch_vcpu_put
    kvm_inject_nested -> kvm_arch_vcpu_load
    kvm_inject_nested -> smp_processor_id
    kvm_inject_nested -> preempt_enable
    kvm_err [label="kvm_err()"]
    kvm_inject_el2_exception [label="void kvm_inject_el2_exception (struct kvm_vcpu *vcpu, u64 esr_el2, enum exception_type type)
arch/arm64/kvm/emulate-nested.c:2016"]
    kvm_inject_el2_exception -> trace_kvm_inject_nested_exception
    kvm_inject_el2_exception -> kvm_pend_exception
    kvm_inject_el2_exception -> vcpu_write_sys_reg
    kvm_inject_el2_exception -> WARN_ONCE
    trace_kvm_inject_nested_exception [label="trace_kvm_inject_nested_exception()"]
    kvm_arch_vcpu_put [label="void kvm_arch_vcpu_put (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:473"]
    kvm_arch_vcpu_put -> kvm_arch_vcpu_put_debug_state_flags
    kvm_arch_vcpu_put -> kvm_arch_vcpu_put_fp
    kvm_arch_vcpu_put -> has_vhe
    kvm_arch_vcpu_put -> kvm_vcpu_put_vhe
    kvm_arch_vcpu_put -> kvm_timer_vcpu_put
    kvm_arch_vcpu_put -> kvm_vgic_put
    kvm_arch_vcpu_put -> kvm_vcpu_pmu_restore_host
    kvm_arch_vcpu_put -> kvm_arm_vmid_clear_active
    kvm_arch_vcpu_put -> vcpu_clear_on_unsupported_cpu
    kvm_arch_vcpu_put_debug_state_flags [label="void kvm_arch_vcpu_put_debug_state_flags (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:340"]
    kvm_arch_vcpu_put_debug_state_flags -> vcpu_clear_flag
    vcpu_clear_flag [label="vcpu_clear_flag()"]
    kvm_arch_vcpu_put_fp [label="void kvm_arch_vcpu_put_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:175"]
    kvm_arch_vcpu_put_fp -> local_irq_save
    kvm_arch_vcpu_put_fp -> has_vhe
    kvm_arch_vcpu_put_fp -> system_supports_sme
    kvm_arch_vcpu_put_fp -> vcpu_get_flag
    kvm_arch_vcpu_put_fp -> sysreg_clear_set
    kvm_arch_vcpu_put_fp -> isb
    kvm_arch_vcpu_put_fp -> vcpu_has_sve
    kvm_arch_vcpu_put_fp -> read_sysreg_el1
    kvm_arch_vcpu_put_fp -> sve_cond_update_zcr_vq
    kvm_arch_vcpu_put_fp -> vcpu_sve_max_vq
    kvm_arch_vcpu_put_fp -> fpsimd_save_and_flush_cpu_state
    kvm_arch_vcpu_put_fp -> system_supports_sve
    kvm_arch_vcpu_put_fp -> local_irq_restore
    system_supports_sme [label="system_supports_sme()"]
    sysreg_clear_set [label="sysreg_clear_set()"]
    read_sysreg_el1 [label="read_sysreg_el1()"]
    sve_cond_update_zcr_vq [label="sve_cond_update_zcr_vq()"]
    vcpu_sve_max_vq [label="vcpu_sve_max_vq()"]
    fpsimd_save_and_flush_cpu_state [label="fpsimd_save_and_flush_cpu_state()"]
    system_supports_sve [label="system_supports_sve()"]
    kvm_vcpu_put_vhe [label="kvm_vcpu_put_vhe()"]
    kvm_timer_vcpu_put [label="void kvm_timer_vcpu_put (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:878"]
    kvm_timer_vcpu_put -> vcpu_timer
    kvm_timer_vcpu_put -> unlikely
    kvm_timer_vcpu_put -> get_timer_map
    kvm_timer_vcpu_put -> timer_save_state
    kvm_timer_vcpu_put -> soft_timer_cancel
    kvm_timer_vcpu_put -> kvm_vcpu_is_blocking
    kvm_timer_vcpu_put -> kvm_timer_blocking
    kvm_vcpu_is_blocking [label="kvm_vcpu_is_blocking()"]
    kvm_timer_blocking [label="void kvm_timer_blocking (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:572"]
    kvm_timer_blocking -> vcpu_timer
    kvm_timer_blocking -> get_timer_map
    kvm_timer_blocking -> kvm_timer_irq_can_fire
    kvm_timer_blocking -> vcpu_has_wfit_active
    kvm_timer_blocking -> soft_timer_start
    kvm_timer_blocking -> kvm_timer_earliest_exp
    vcpu_has_wfit_active [label="bool vcpu_has_wfit_active (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:287"]
    vcpu_has_wfit_active -> cpus_have_final_cap
    vcpu_has_wfit_active -> vcpu_get_flag
    kvm_timer_earliest_exp [label="u64 kvm_timer_earliest_exp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:308"]
    kvm_timer_earliest_exp -> nr_timers
    kvm_timer_earliest_exp -> WARN
    kvm_timer_earliest_exp -> kvm_timer_irq_can_fire
    kvm_timer_earliest_exp -> min
    kvm_timer_earliest_exp -> kvm_timer_compute_delta
    kvm_timer_earliest_exp -> vcpu_has_wfit_active
    kvm_timer_earliest_exp -> wfit_delay_ns
    nr_timers [label="int nr_timers (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:58"]
    nr_timers -> vcpu_has_nv
    WARN [label="WARN()"]
    wfit_delay_ns [label="u64 wfit_delay_ns (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:293"]
    wfit_delay_ns -> vcpu_get_reg
    wfit_delay_ns -> kvm_vcpu_sys_get_rt
    wfit_delay_ns -> vcpu_has_nv
    wfit_delay_ns -> is_hyp_ctxt
    wfit_delay_ns -> vcpu_hvtimer
    wfit_delay_ns -> vcpu_vtimer
    wfit_delay_ns -> kvm_counter_compute_delta
    kvm_vcpu_sys_get_rt [label="kvm_vcpu_sys_get_rt()"]
    kvm_vgic_put [label="kvm_vgic_put()"]
    kvm_vcpu_pmu_restore_host [label="void kvm_vcpu_pmu_restore_host (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu.c:197"]
    kvm_vcpu_pmu_restore_host -> kvm_arm_support_pmu_v3
    kvm_vcpu_pmu_restore_host -> has_vhe
    kvm_vcpu_pmu_restore_host -> kvm_get_pmu_events
    kvm_vcpu_pmu_restore_host -> kvm_vcpu_pmu_enable_el0
    kvm_vcpu_pmu_restore_host -> kvm_vcpu_pmu_disable_el0
    kvm_arm_vmid_clear_active [label="void kvm_arm_vmid_clear_active (void)
arch/arm64/kvm/vmid.c:133"]
    kvm_arm_vmid_clear_active -> atomic64_set
    kvm_arm_vmid_clear_active -> this_cpu_ptr
    atomic64_set [label="atomic64_set()"]
    vcpu_clear_on_unsupported_cpu [label="vcpu_clear_on_unsupported_cpu()"]
    kvm_arch_vcpu_load [label="void kvm_arch_vcpu_load (struct kvm_vcpu *vcpu, int cpu)
arch/arm64/kvm/arm.c:427"]
    kvm_arch_vcpu_load -> this_cpu_ptr
    kvm_arch_vcpu_load -> kvm_call_hyp
    kvm_arch_vcpu_load -> kvm_vgic_load
    kvm_arch_vcpu_load -> kvm_timer_vcpu_load
    kvm_arch_vcpu_load -> has_vhe
    kvm_arch_vcpu_load -> kvm_vcpu_load_vhe
    kvm_arch_vcpu_load -> kvm_arch_vcpu_load_fp
    kvm_arch_vcpu_load -> kvm_vcpu_pmu_restore_guest
    kvm_arch_vcpu_load -> kvm_arm_is_pvtime_enabled
    kvm_arch_vcpu_load -> kvm_make_request
    kvm_arch_vcpu_load -> single_task_running
    kvm_arch_vcpu_load -> vcpu_clear_wfx_traps
    kvm_arch_vcpu_load -> vcpu_set_wfx_traps
    kvm_arch_vcpu_load -> vcpu_has_ptrauth
    kvm_arch_vcpu_load -> vcpu_ptrauth_disable
    kvm_arch_vcpu_load -> kvm_arch_vcpu_load_debug_state_flags
    kvm_arch_vcpu_load -> cpumask_test_cpu
    kvm_arch_vcpu_load -> vcpu_set_on_unsupported_cpu
    kvm_vgic_load [label="kvm_vgic_load()"]
    kvm_timer_vcpu_load [label="void kvm_timer_vcpu_load (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:827"]
    kvm_timer_vcpu_load -> vcpu_timer
    kvm_timer_vcpu_load -> unlikely
    kvm_timer_vcpu_load -> get_timer_map
    kvm_timer_vcpu_load -> static_branch_likely
    kvm_timer_vcpu_load -> vcpu_has_nv
    kvm_timer_vcpu_load -> kvm_timer_vcpu_load_nested_switch
    kvm_timer_vcpu_load -> kvm_timer_vcpu_load_gic
    kvm_timer_vcpu_load -> kvm_timer_vcpu_load_nogic
    kvm_timer_vcpu_load -> kvm_timer_unblocking
    kvm_timer_vcpu_load -> timer_restore_state
    kvm_timer_vcpu_load -> timer_emulate
    kvm_timer_vcpu_load -> timer_set_traps
    static_branch_likely [label="static_branch_likely()"]
    kvm_timer_vcpu_load_nested_switch [label="void kvm_timer_vcpu_load_nested_switch (struct kvm_vcpu *vcpu, struct timer_map *map)
arch/arm64/kvm/arch_timer.c:714"]
    kvm_timer_vcpu_load_nested_switch -> irqchip_in_kernel
    kvm_timer_vcpu_load_nested_switch -> kvm_vgic_get_map
    kvm_timer_vcpu_load_nested_switch -> timer_irq
    kvm_timer_vcpu_load_nested_switch -> kvm_vgic_unmap_phys_irq
    kvm_timer_vcpu_load_nested_switch -> kvm_vgic_map_phys_irq
    kvm_timer_vcpu_load_nested_switch -> WARN_ON_ONCE
    kvm_timer_vcpu_load_nested_switch -> vcpu_hvtimer
    kvm_timer_vcpu_load_nested_switch -> vcpu_el2_e2h_is_set
    kvm_vgic_get_map [label="kvm_vgic_get_map()"]
    kvm_vgic_unmap_phys_irq [label="kvm_vgic_unmap_phys_irq()"]
    kvm_vgic_map_phys_irq [label="kvm_vgic_map_phys_irq()"]
    kvm_timer_vcpu_load_gic [label="void kvm_timer_vcpu_load_gic (struct arch_timer_context *ctx)
arch/arm64/kvm/arch_timer.c:656"]
    kvm_timer_vcpu_load_gic -> bool
    kvm_timer_vcpu_load_gic -> kvm_timer_update_irq
    kvm_timer_vcpu_load_gic -> kvm_timer_should_fire
    kvm_timer_vcpu_load_gic -> irqchip_in_kernel
    kvm_timer_vcpu_load_gic -> kvm_vgic_map_is_active
    kvm_timer_vcpu_load_gic -> timer_irq
    kvm_timer_vcpu_load_gic -> set_timer_irq_phys_active
    kvm_vgic_map_is_active [label="kvm_vgic_map_is_active()"]
    set_timer_irq_phys_active [label="inline void set_timer_irq_phys_active (struct arch_timer_context *ctx, bool active)
arch/arm64/kvm/arch_timer.c:649"]
    set_timer_irq_phys_active -> irq_set_irqchip_state
    set_timer_irq_phys_active -> WARN_ON
    irq_set_irqchip_state [label="irq_set_irqchip_state()"]
    kvm_timer_vcpu_load_nogic [label="void kvm_timer_vcpu_load_nogic (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:677"]
    kvm_timer_vcpu_load_nogic -> vcpu_vtimer
    kvm_timer_vcpu_load_nogic -> kvm_timer_update_irq
    kvm_timer_vcpu_load_nogic -> kvm_timer_should_fire
    kvm_timer_vcpu_load_nogic -> disable_percpu_irq
    kvm_timer_vcpu_load_nogic -> enable_percpu_irq
    disable_percpu_irq [label="disable_percpu_irq()"]
    enable_percpu_irq [label="enable_percpu_irq()"]
    kvm_timer_unblocking [label="void kvm_timer_unblocking (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:597"]
    kvm_timer_unblocking -> vcpu_timer
    kvm_timer_unblocking -> soft_timer_cancel
    timer_set_traps [label="void timer_set_traps (struct kvm_vcpu *vcpu, struct timer_map *map)
arch/arm64/kvm/arch_timer.c:765"]
    timer_set_traps -> bool
    timer_set_traps -> has_vhe
    timer_set_traps -> has_cntpoff
    timer_set_traps -> timer_get_offset
    timer_set_traps -> vcpu_has_nv
    timer_set_traps -> is_hyp_ctxt
    timer_set_traps -> vcpu_el2_e2h_is_set
    timer_set_traps -> assign_clear_set_bit
    timer_set_traps -> sysreg_clear_set
    assign_clear_set_bit [label="assign_clear_set_bit()"]
    kvm_vcpu_load_vhe [label="kvm_vcpu_load_vhe()"]
    kvm_arch_vcpu_load_fp [label="void kvm_arch_vcpu_load_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:75"]
    kvm_arch_vcpu_load_fp -> BUG_ON
    kvm_arch_vcpu_load_fp -> system_supports_fpsimd
    kvm_arch_vcpu_load_fp -> fpsimd_kvm_prepare
    kvm_arch_vcpu_load_fp -> vcpu_clear_flag
    kvm_arch_vcpu_load_fp -> read_sysreg
    kvm_arch_vcpu_load_fp -> vcpu_set_flag
    kvm_arch_vcpu_load_fp -> system_supports_sme
    kvm_arch_vcpu_load_fp -> read_sysreg_s
    kvm_arch_vcpu_load_fp -> fpsimd_save_and_flush_cpu_state
    system_supports_fpsimd [label="system_supports_fpsimd()"]
    fpsimd_kvm_prepare [label="fpsimd_kvm_prepare()"]
    vcpu_set_flag [label="vcpu_set_flag()"]
    read_sysreg_s [label="read_sysreg_s()"]
    kvm_arm_is_pvtime_enabled [label="kvm_arm_is_pvtime_enabled()"]
    single_task_running [label="single_task_running()"]
    vcpu_clear_wfx_traps [label="vcpu_clear_wfx_traps()"]
    vcpu_set_wfx_traps [label="vcpu_set_wfx_traps()"]
    vcpu_has_ptrauth [label="vcpu_has_ptrauth()"]
    vcpu_ptrauth_disable [label="vcpu_ptrauth_disable()"]
    kvm_arch_vcpu_load_debug_state_flags [label="void kvm_arch_vcpu_load_debug_state_flags (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:317"]
    kvm_arch_vcpu_load_debug_state_flags -> has_vhe
    kvm_arch_vcpu_load_debug_state_flags -> read_sysreg
    kvm_arch_vcpu_load_debug_state_flags -> cpuid_feature_extract_unsigned_field
    kvm_arch_vcpu_load_debug_state_flags -> read_sysreg_s
    kvm_arch_vcpu_load_debug_state_flags -> BIT
    kvm_arch_vcpu_load_debug_state_flags -> vcpu_set_flag
    cpuid_feature_extract_unsigned_field [label="cpuid_feature_extract_unsigned_field()"]
    cpumask_test_cpu [label="cpumask_test_cpu()"]
    vcpu_set_on_unsupported_cpu [label="vcpu_set_on_unsupported_cpu()"]
    smp_processor_id [label="smp_processor_id()"]
    kvm_vcpu_get_esr [label="kvm_vcpu_get_esr()"]
    kvm_smccc_call_handler [label="int kvm_smccc_call_handler (struct kvm_vcpu *vcpu)
arch/arm64/kvm/hypercalls.c:263"]
    kvm_smccc_call_handler -> smccc_get_function
    kvm_smccc_call_handler -> kvm_smccc_get_action
    kvm_smccc_call_handler -> kvm_prepare_hypercall_exit
    kvm_smccc_call_handler -> WARN_RATELIMIT
    kvm_smccc_call_handler -> smccc_get_arg1
    kvm_smccc_call_handler -> arm64_get_spectre_v2_state
    kvm_smccc_call_handler -> arm64_get_spectre_v4_state
    kvm_smccc_call_handler -> cpus_have_final_cap
    kvm_smccc_call_handler -> arm64_get_spectre_bhb_state
    kvm_smccc_call_handler -> test_bit
    kvm_smccc_call_handler -> kvm_hypercall_pv_features
    kvm_smccc_call_handler -> kvm_init_stolen_time
    kvm_smccc_call_handler -> kvm_ptp_get_time
    kvm_smccc_call_handler -> kvm_trng_call
    kvm_smccc_call_handler -> kvm_psci_call
    kvm_smccc_call_handler -> smccc_set_retval
    smccc_get_function [label="smccc_get_function()"]
    kvm_smccc_get_action [label="u8 kvm_smccc_get_action (struct kvm_vcpu *vcpu, u32 func_id)
arch/arm64/kvm/hypercalls.c:227"]
    kvm_smccc_get_action -> kvm_smccc_filter_get_action
    kvm_smccc_get_action -> kvm_smccc_test_fw_bmap
    kvm_smccc_get_action -> kvm_smccc_default_allowed
    kvm_smccc_filter_get_action [label="u8 kvm_smccc_filter_get_action (struct kvm *kvm, u32 func_id)
arch/arm64/kvm/hypercalls.c:209"]
    kvm_smccc_filter_get_action -> kvm_smccc_filter_configured
    kvm_smccc_filter_get_action -> mt_find
    kvm_smccc_filter_get_action -> xa_to_value
    kvm_smccc_filter_configured [label="bool kvm_smccc_filter_configured (struct kvm *kvm)
arch/arm64/kvm/hypercalls.c:165"]
    kvm_smccc_filter_configured -> mtree_empty
    mtree_empty [label="mtree_empty()"]
    mt_find [label="mt_find()"]
    xa_to_value [label="xa_to_value()"]
    kvm_smccc_test_fw_bmap [label="bool kvm_smccc_test_fw_bmap (struct kvm_vcpu *vcpu, u32 func_id)
arch/arm64/kvm/hypercalls.c:96"]
    kvm_smccc_test_fw_bmap -> test_bit
    kvm_smccc_default_allowed [label="bool kvm_smccc_default_allowed (u32 func_id)
arch/arm64/kvm/hypercalls.c:68"]
    kvm_smccc_default_allowed -> ARM_SMCCC_OWNER_NUM
    kvm_smccc_default_allowed -> ARM_SMCCC_FUNC_NUM
    kvm_smccc_default_allowed -> KVM_PSCI_FN
    ARM_SMCCC_OWNER_NUM [label="ARM_SMCCC_OWNER_NUM()"]
    ARM_SMCCC_FUNC_NUM [label="ARM_SMCCC_FUNC_NUM()"]
    KVM_PSCI_FN [label="KVM_PSCI_FN()"]
    kvm_prepare_hypercall_exit [label="void kvm_prepare_hypercall_exit (struct kvm_vcpu *vcpu, u32 func_id)
arch/arm64/kvm/hypercalls.c:244"]
    kvm_prepare_hypercall_exit -> ESR_ELx_EC
    kvm_prepare_hypercall_exit -> kvm_vcpu_get_esr
    kvm_prepare_hypercall_exit -> kvm_vcpu_trap_il_is32bit
    kvm_prepare_hypercall_exit -> typeof
    ESR_ELx_EC [label="ESR_ELx_EC()"]
    typeof [label="typeof()"]
    WARN_RATELIMIT [label="WARN_RATELIMIT()"]
    smccc_get_arg1 [label="smccc_get_arg1()"]
    arm64_get_spectre_v2_state [label="arm64_get_spectre_v2_state()"]
    arm64_get_spectre_v4_state [label="arm64_get_spectre_v4_state()"]
    arm64_get_spectre_bhb_state [label="arm64_get_spectre_bhb_state()"]
    kvm_hypercall_pv_features [label="long kvm_hypercall_pv_features (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pvtime.c:35"]
    kvm_hypercall_pv_features -> smccc_get_arg1
    kvm_init_stolen_time [label="gpa_t kvm_init_stolen_time (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pvtime.c:51"]
    kvm_init_stolen_time -> kvm_write_guest_lock
    kvm_write_guest_lock [label="kvm_write_guest_lock()"]
    kvm_ptp_get_time [label="void kvm_ptp_get_time (struct kvm_vcpu *vcpu, u64 *val)
arch/arm64/kvm/hypercalls.c:19"]
    kvm_ptp_get_time -> ktime_get_snapshot
    kvm_ptp_get_time -> smccc_get_arg1
    kvm_ptp_get_time -> upper_32_bits
    kvm_ptp_get_time -> lower_32_bits
    ktime_get_snapshot [label="ktime_get_snapshot()"]
    upper_32_bits [label="upper_32_bits()"]
    kvm_trng_call [label="int kvm_trng_call (struct kvm_vcpu *vcpu)
arch/arm64/kvm/trng.c:51"]
    kvm_trng_call -> smccc_get_function
    kvm_trng_call -> smccc_get_arg1
    kvm_trng_call -> smccc_set_retval
    kvm_trng_call -> le32_to_cpu
    kvm_trng_call -> kvm_trng_do_rnd
    smccc_set_retval [label="smccc_set_retval()"]
    le32_to_cpu [label="le32_to_cpu()"]
    kvm_trng_do_rnd [label="int kvm_trng_do_rnd (struct kvm_vcpu *vcpu, int size)
arch/arm64/kvm/trng.c:24"]
    kvm_trng_do_rnd -> DECLARE_BITMAP
    kvm_trng_do_rnd -> smccc_get_arg1
    kvm_trng_do_rnd -> smccc_set_retval
    kvm_trng_do_rnd -> DIV_ROUND_UP
    kvm_trng_do_rnd -> get_random_long
    kvm_trng_do_rnd -> bitmap_clear
    kvm_trng_do_rnd -> lower_32_bits
    kvm_trng_do_rnd -> upper_32_bits
    kvm_trng_do_rnd -> memzero_explicit
    DECLARE_BITMAP [label="DECLARE_BITMAP()"]
    DIV_ROUND_UP [label="DIV_ROUND_UP()"]
    get_random_long [label="get_random_long()"]
    bitmap_clear [label="bitmap_clear()"]
    memzero_explicit [label="memzero_explicit()"]
    kvm_psci_call [label="int kvm_psci_call (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:439"]
    kvm_psci_call -> smccc_get_function
    kvm_psci_call -> kvm_psci_version
    kvm_psci_call -> kvm_psci_check_allowed_function
    kvm_psci_call -> smccc_set_retval
    kvm_psci_call -> kvm_psci_1_x_call
    kvm_psci_call -> kvm_psci_0_2_call
    kvm_psci_call -> kvm_psci_0_1_call
    kvm_psci_call -> WARN_ONCE
    kvm_psci_version [label="kvm_psci_version()"]
    kvm_psci_check_allowed_function [label="unsigned long kvm_psci_check_allowed_function (struct kvm_vcpu *vcpu, u32 fn)
arch/arm64/kvm/psci.c:229"]
    kvm_psci_check_allowed_function -> vcpu_mode_is_32bit
    kvm_psci_1_x_call [label="int kvm_psci_1_x_call (struct kvm_vcpu *vcpu, u32 minor)
arch/arm64/kvm/psci.c:315"]
    kvm_psci_1_x_call -> smccc_get_function
    kvm_psci_1_x_call -> smccc_get_arg1
    kvm_psci_1_x_call -> kvm_psci_check_allowed_function
    kvm_psci_1_x_call -> test_bit
    kvm_psci_1_x_call -> kvm_psci_narrow_to_32bit
    kvm_psci_1_x_call -> kvm_psci_system_suspend
    kvm_psci_1_x_call -> kvm_psci_system_reset2
    kvm_psci_1_x_call -> vcpu_set_reg
    kvm_psci_1_x_call -> kvm_psci_0_2_call
    kvm_psci_1_x_call -> smccc_set_retval
    kvm_psci_narrow_to_32bit [label="void kvm_psci_narrow_to_32bit (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:217"]
    kvm_psci_narrow_to_32bit -> vcpu_set_reg
    kvm_psci_narrow_to_32bit -> lower_32_bits
    kvm_psci_narrow_to_32bit -> vcpu_get_reg
    vcpu_set_reg [label="vcpu_set_reg()"]
    kvm_psci_system_suspend [label="void kvm_psci_system_suspend (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:208"]
    kvm_psci_system_suspend -> memset
    kvm_psci_system_reset2 [label="void kvm_psci_system_reset2 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:202"]
    kvm_psci_system_reset2 -> kvm_prepare_system_event
    kvm_prepare_system_event [label="void kvm_prepare_system_event (struct kvm_vcpu *vcpu, u32 type, u64 flags)
arch/arm64/kvm/psci.c:164"]
    kvm_prepare_system_event -> kvm_for_each_vcpu
    kvm_prepare_system_event -> spin_lock
    kvm_prepare_system_event -> WRITE_ONCE
    kvm_prepare_system_event -> spin_unlock
    kvm_prepare_system_event -> kvm_make_all_cpus_request
    kvm_prepare_system_event -> memset
    kvm_for_each_vcpu [label="kvm_for_each_vcpu()"]
    kvm_make_all_cpus_request [label="bool kvm_make_all_cpus_request (struct kvm *kvm, unsigned int req)
virt/kvm/kvm_main.c:340"]
    kvm_make_all_cpus_request -> kvm_make_all_cpus_request_except
    kvm_make_all_cpus_request_except [label="bool kvm_make_all_cpus_request_except (struct kvm *kvm, unsigned int req, struct kvm_vcpu *except)
virt/kvm/kvm_main.c:314"]
    kvm_make_all_cpus_request_except -> bool
    kvm_make_all_cpus_request_except -> get_cpu
    kvm_make_all_cpus_request_except -> this_cpu_cpumask_var_ptr
    kvm_make_all_cpus_request_except -> cpumask_clear
    kvm_make_all_cpus_request_except -> kvm_for_each_vcpu
    kvm_make_all_cpus_request_except -> kvm_make_vcpu_request
    kvm_make_all_cpus_request_except -> kvm_kick_many_cpus
    kvm_make_all_cpus_request_except -> put_cpu
    this_cpu_cpumask_var_ptr [label="this_cpu_cpumask_var_ptr()"]
    cpumask_clear [label="cpumask_clear()"]
    kvm_make_vcpu_request [label="void kvm_make_vcpu_request (struct kvm_vcpu *vcpu, unsigned int req, struct cpumask *tmp, int current_cpu)
virt/kvm/kvm_main.c:260"]
    kvm_make_vcpu_request -> likely
    kvm_make_vcpu_request -> kvm_vcpu_wake_up
    kvm_make_vcpu_request -> kvm_request_needs_ipi
    kvm_make_vcpu_request -> READ_ONCE
    kvm_request_needs_ipi [label="bool kvm_request_needs_ipi (struct kvm_vcpu *vcpu, unsigned req)
virt/kvm/kvm_main.c:230"]
    kvm_request_needs_ipi -> kvm_vcpu_exiting_guest_mode
    kvm_kick_many_cpus [label="inline bool kvm_kick_many_cpus (struct cpumask *cpus, bool wait)
virt/kvm/kvm_main.c:251"]
    kvm_kick_many_cpus -> cpumask_empty
    kvm_kick_many_cpus -> smp_call_function_many
    kvm_kick_many_cpus -> ack_kick
    cpumask_empty [label="cpumask_empty()"]
    smp_call_function_many [label="smp_call_function_many()"]
    ack_kick [label="void ack_kick (void *_completed)
virt/kvm/kvm_main.c:247"]
    kvm_psci_0_2_call [label="int kvm_psci_0_2_call (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:240"]
    kvm_psci_0_2_call -> smccc_get_function
    kvm_psci_0_2_call -> kvm_psci_vcpu_suspend
    kvm_psci_0_2_call -> kvm_arm_vcpu_power_off
    kvm_psci_0_2_call -> kvm_psci_narrow_to_32bit
    kvm_psci_0_2_call -> kvm_psci_vcpu_on
    kvm_psci_0_2_call -> kvm_psci_vcpu_affinity_info
    kvm_psci_0_2_call -> kvm_psci_system_off
    kvm_psci_0_2_call -> kvm_psci_system_reset
    kvm_psci_0_2_call -> smccc_set_retval
    kvm_psci_vcpu_suspend [label="unsigned long kvm_psci_vcpu_suspend (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:34"]
    kvm_psci_vcpu_suspend -> kvm_vcpu_wfi
    kvm_vcpu_wfi [label="void kvm_vcpu_wfi (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:764"]
    kvm_vcpu_wfi -> preempt_disable
    kvm_vcpu_wfi -> kvm_vgic_vmcr_sync
    kvm_vcpu_wfi -> vcpu_set_flag
    kvm_vcpu_wfi -> vgic_v4_put
    kvm_vcpu_wfi -> preempt_enable
    kvm_vcpu_wfi -> kvm_vcpu_halt
    kvm_vcpu_wfi -> vcpu_clear_flag
    kvm_vcpu_wfi -> vgic_v4_load
    kvm_vgic_vmcr_sync [label="kvm_vgic_vmcr_sync()"]
    vgic_v4_put [label="vgic_v4_put()"]
    kvm_vcpu_halt [label="void kvm_vcpu_halt (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3550"]
    kvm_vcpu_halt -> kvm_vcpu_max_halt_poll_ns
    kvm_vcpu_halt -> kvm_arch_no_poll
    kvm_vcpu_halt -> ktime_get
    kvm_vcpu_halt -> ktime_add_ns
    kvm_vcpu_halt -> kvm_vcpu_check_block
    kvm_vcpu_halt -> cpu_relax
    kvm_vcpu_halt -> kvm_vcpu_can_poll
    kvm_vcpu_halt -> kvm_vcpu_block
    kvm_vcpu_halt -> ktime_to_ns
    kvm_vcpu_halt -> KVM_STATS_LOG_HIST_UPDATE
    kvm_vcpu_halt -> update_halt_poll_stats
    kvm_vcpu_halt -> vcpu_valid_wakeup
    kvm_vcpu_halt -> shrink_halt_poll_ns
    kvm_vcpu_halt -> grow_halt_poll_ns
    kvm_vcpu_halt -> trace_kvm_vcpu_wakeup
    kvm_vcpu_max_halt_poll_ns [label="unsigned int kvm_vcpu_max_halt_poll_ns (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3526"]
    kvm_vcpu_max_halt_poll_ns -> smp_rmb
    kvm_vcpu_max_halt_poll_ns -> READ_ONCE
    smp_rmb [label="smp_rmb()"]
    kvm_arch_no_poll [label="kvm_arch_no_poll()"]
    kvm_vcpu_check_block [label="int kvm_vcpu_check_block (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3447"]
    kvm_vcpu_check_block -> srcu_read_lock
    kvm_vcpu_check_block -> kvm_arch_vcpu_runnable
    kvm_vcpu_check_block -> kvm_cpu_has_pending_timer
    kvm_vcpu_check_block -> signal_pending
    kvm_vcpu_check_block -> kvm_check_request
    kvm_vcpu_check_block -> srcu_read_unlock
    kvm_arch_vcpu_runnable [label="int kvm_arch_vcpu_runnable (struct kvm_vcpu *v)
arch/arm64/kvm/arm.c:560"]
    kvm_arch_vcpu_runnable -> bool
    kvm_arch_vcpu_runnable -> vcpu_hcr
    kvm_arch_vcpu_runnable -> kvm_vgic_vcpu_pending_irq
    kvm_arch_vcpu_runnable -> kvm_arm_vcpu_stopped
    kvm_vgic_vcpu_pending_irq [label="kvm_vgic_vcpu_pending_irq()"]
    kvm_arm_vcpu_stopped [label="bool kvm_arm_vcpu_stopped (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:502"]
    kvm_arm_vcpu_stopped -> READ_ONCE
    kvm_cpu_has_pending_timer [label="int kvm_cpu_has_pending_timer (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:423"]
    kvm_cpu_has_pending_timer -> vcpu_has_wfit_active
    kvm_cpu_has_pending_timer -> wfit_delay_ns
    signal_pending [label="signal_pending()"]
    kvm_check_request [label="kvm_check_request()"]
    cpu_relax [label="cpu_relax()"]
    kvm_vcpu_can_poll [label="kvm_vcpu_can_poll()"]
    kvm_vcpu_block [label="bool kvm_vcpu_block (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3472"]
    kvm_vcpu_block -> kvm_arch_vcpu_get_wait
    kvm_vcpu_block -> preempt_disable
    kvm_vcpu_block -> kvm_arch_vcpu_blocking
    kvm_vcpu_block -> prepare_to_rcuwait
    kvm_vcpu_block -> preempt_enable
    kvm_vcpu_block -> set_current_state
    kvm_vcpu_block -> kvm_vcpu_check_block
    kvm_vcpu_block -> schedule
    kvm_vcpu_block -> finish_rcuwait
    kvm_vcpu_block -> kvm_arch_vcpu_unblocking
    kvm_arch_vcpu_get_wait [label="kvm_arch_vcpu_get_wait()"]
    kvm_arch_vcpu_blocking [label="void kvm_arch_vcpu_blocking (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:417"]
    prepare_to_rcuwait [label="prepare_to_rcuwait()"]
    set_current_state [label="set_current_state()"]
    schedule [label="schedule()"]
    finish_rcuwait [label="finish_rcuwait()"]
    kvm_arch_vcpu_unblocking [label="void kvm_arch_vcpu_unblocking (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:422"]
    ktime_to_ns [label="ktime_to_ns()"]
    KVM_STATS_LOG_HIST_UPDATE [label="KVM_STATS_LOG_HIST_UPDATE()"]
    update_halt_poll_stats [label="inline void update_halt_poll_stats (struct kvm_vcpu *vcpu, ktime_t start, ktime_t end, bool success)
virt/kvm/kvm_main.c:3504"]
    update_halt_poll_stats -> ktime_to_ns
    update_halt_poll_stats -> ktime_sub
    update_halt_poll_stats -> vcpu_valid_wakeup
    update_halt_poll_stats -> KVM_STATS_LOG_HIST_UPDATE
    ktime_sub [label="ktime_sub()"]
    vcpu_valid_wakeup [label="vcpu_valid_wakeup()"]
    shrink_halt_poll_ns [label="void shrink_halt_poll_ns (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3428"]
    shrink_halt_poll_ns -> READ_ONCE
    shrink_halt_poll_ns -> trace_kvm_halt_poll_ns_shrink
    trace_kvm_halt_poll_ns_shrink [label="trace_kvm_halt_poll_ns_shrink()"]
    grow_halt_poll_ns [label="void grow_halt_poll_ns (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3409"]
    grow_halt_poll_ns -> READ_ONCE
    grow_halt_poll_ns -> trace_kvm_halt_poll_ns_grow
    trace_kvm_halt_poll_ns_grow [label="trace_kvm_halt_poll_ns_grow()"]
    trace_kvm_vcpu_wakeup [label="trace_kvm_vcpu_wakeup()"]
    vgic_v4_load [label="vgic_v4_load()"]
    kvm_arm_vcpu_power_off [label="void kvm_arm_vcpu_power_off (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:495"]
    kvm_arm_vcpu_power_off -> spin_lock
    kvm_arm_vcpu_power_off -> spin_unlock
    kvm_psci_vcpu_on [label="unsigned long kvm_psci_vcpu_on (struct kvm_vcpu *source_vcpu)
arch/arm64/kvm/psci.c:60"]
    kvm_psci_vcpu_on -> smccc_get_arg1
    kvm_psci_vcpu_on -> kvm_psci_valid_affinity
    kvm_psci_vcpu_on -> kvm_mpidr_to_vcpu
    kvm_psci_vcpu_on -> spin_lock
    kvm_psci_vcpu_on -> kvm_arm_vcpu_stopped
    kvm_psci_vcpu_on -> kvm_psci_version
    kvm_psci_vcpu_on -> smccc_get_arg2
    kvm_psci_vcpu_on -> kvm_vcpu_is_be
    kvm_psci_vcpu_on -> smccc_get_arg3
    kvm_psci_vcpu_on -> kvm_make_request
    kvm_psci_vcpu_on -> smp_wmb
    kvm_psci_vcpu_on -> WRITE_ONCE
    kvm_psci_vcpu_on -> kvm_vcpu_wake_up
    kvm_psci_vcpu_on -> spin_unlock
    kvm_psci_valid_affinity [label="inline bool kvm_psci_valid_affinity (struct kvm_vcpu *vcpu, unsigned long affinity)
arch/arm64/kvm/psci.c:54"]
    kvm_mpidr_to_vcpu [label="struct kvm_vcpu *kvm_mpidr_to_vcpu (struct kvm *kvm, unsigned long mpidr)
arch/arm64/kvm/arm.c:2450"]
    kvm_mpidr_to_vcpu -> kvm_mpidr_index
    kvm_mpidr_to_vcpu -> kvm_get_vcpu
    kvm_mpidr_to_vcpu -> kvm_vcpu_get_mpidr_aff
    kvm_mpidr_to_vcpu -> kvm_for_each_vcpu
    kvm_mpidr_index [label="kvm_mpidr_index()"]
    kvm_get_vcpu [label="kvm_get_vcpu()"]
    kvm_vcpu_get_mpidr_aff [label="kvm_vcpu_get_mpidr_aff()"]
    smccc_get_arg2 [label="smccc_get_arg2()"]
    kvm_vcpu_is_be [label="kvm_vcpu_is_be()"]
    smccc_get_arg3 [label="smccc_get_arg3()"]
    kvm_psci_vcpu_affinity_info [label="unsigned long kvm_psci_vcpu_affinity_info (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:121"]
    kvm_psci_vcpu_affinity_info -> smccc_get_arg1
    kvm_psci_vcpu_affinity_info -> smccc_get_arg2
    kvm_psci_vcpu_affinity_info -> kvm_psci_valid_affinity
    kvm_psci_vcpu_affinity_info -> psci_affinity_mask
    kvm_psci_vcpu_affinity_info -> kvm_for_each_vcpu
    kvm_psci_vcpu_affinity_info -> kvm_vcpu_get_mpidr_aff
    kvm_psci_vcpu_affinity_info -> kvm_arm_vcpu_stopped
    psci_affinity_mask [label="unsigned long psci_affinity_mask (unsigned long affinity_level)
arch/arm64/kvm/psci.c:26"]
    psci_affinity_mask -> AFFINITY_MASK
    AFFINITY_MASK [label="AFFINITY_MASK()"]
    kvm_psci_system_off [label="void kvm_psci_system_off (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:192"]
    kvm_psci_system_off -> kvm_prepare_system_event
    kvm_psci_system_reset [label="void kvm_psci_system_reset (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:197"]
    kvm_psci_system_reset -> kvm_prepare_system_event
    kvm_psci_0_1_call [label="int kvm_psci_0_1_call (struct kvm_vcpu *vcpu)
arch/arm64/kvm/psci.c:403"]
    kvm_psci_0_1_call -> smccc_get_function
    kvm_psci_0_1_call -> kvm_arm_vcpu_power_off
    kvm_psci_0_1_call -> kvm_psci_vcpu_on
    kvm_psci_0_1_call -> smccc_set_retval
    handle_no_fpsimd [label="int handle_no_fpsimd (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:93"]
    handle_no_fpsimd -> kvm_inject_undefined
    handle_smc [label="int handle_smc (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:56"]
    handle_smc -> kvm_incr_pc
    handle_smc -> kvm_vcpu_hvc_get_imm
    handle_smc -> vcpu_set_reg
    handle_smc -> kvm_smccc_call_handler
    kvm_incr_pc [label="kvm_incr_pc()"]
    handle_svc [label="int handle_svc (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:244"]
    handle_svc -> kvm_inject_nested_sync
    handle_svc -> kvm_vcpu_get_esr
    handle_sve [label="int handle_sve (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:203"]
    handle_sve -> kvm_inject_undefined
    hidden_user_visibility [label="unsigned int hidden_user_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1902"]
    hyp_init_cpu_pm_notifier [label="int hyp_init_cpu_pm_notifier (struct notifier_block *self, unsigned long cmd, void *v)
arch/arm64/kvm/arm.c:2024"]
    hyp_init_cpu_pm_notifier -> cpu_hyp_reset
    hyp_init_cpu_pm_notifier -> cpu_hyp_reinit
    cpu_hyp_reset [label="void cpu_hyp_reset (void)
arch/arm64/kvm/arm.c:1914"]
    cpu_hyp_reset -> is_kernel_in_hyp_mode
    cpu_hyp_reinit [label="void cpu_hyp_reinit (void)
arch/arm64/kvm/arm.c:1971"]
    cpu_hyp_reinit -> cpu_hyp_reset
    cpu_hyp_reinit -> cpu_hyp_init_context
    cpu_hyp_reinit -> cpu_hyp_init_features
    cpu_hyp_init_context [label="void cpu_hyp_init_context (void)
arch/arm64/kvm/arm.c:1951"]
    cpu_hyp_init_context -> kvm_init_host_cpu_context
    cpu_hyp_init_context -> this_cpu_ptr_hyp_sym
    cpu_hyp_init_context -> is_kernel_in_hyp_mode
    cpu_hyp_init_context -> cpu_init_hyp_mode
    kvm_init_host_cpu_context [label="kvm_init_host_cpu_context()"]
    this_cpu_ptr_hyp_sym [label="this_cpu_ptr_hyp_sym()"]
    cpu_init_hyp_mode [label="void cpu_init_hyp_mode (void)
arch/arm64/kvm/arm.c:1900"]
    cpu_init_hyp_mode -> hyp_install_host_vector
    cpu_init_hyp_mode -> this_cpu_has_cap
    cpu_init_hyp_mode -> arm64_get_spectre_v4_state
    cpu_init_hyp_mode -> kvm_call_hyp_nvhe
    hyp_install_host_vector [label="void hyp_install_host_vector (void)
arch/arm64/kvm/arm.c:1880"]
    hyp_install_host_vector -> kvm_get_idmap_vector
    hyp_install_host_vector -> BUG_ON
    hyp_install_host_vector -> system_capabilities_finalized
    hyp_install_host_vector -> this_cpu_ptr_nvhe_sym
    hyp_install_host_vector -> arm_smccc_1_1_hvc
    hyp_install_host_vector -> KVM_HOST_SMCCC_FUNC
    hyp_install_host_vector -> virt_to_phys
    hyp_install_host_vector -> WARN_ON
    kvm_get_idmap_vector [label="phys_addr_t kvm_get_idmap_vector (void)
arch/arm64/kvm/mmu.c:1827"]
    system_capabilities_finalized [label="system_capabilities_finalized()"]
    this_cpu_ptr_nvhe_sym [label="this_cpu_ptr_nvhe_sym()"]
    arm_smccc_1_1_hvc [label="arm_smccc_1_1_hvc()"]
    KVM_HOST_SMCCC_FUNC [label="KVM_HOST_SMCCC_FUNC()"]
    virt_to_phys [label="virt_to_phys()"]
    this_cpu_has_cap [label="this_cpu_has_cap()"]
    kvm_call_hyp_nvhe [label="kvm_call_hyp_nvhe()"]
    cpu_hyp_init_features [label="void cpu_hyp_init_features (void)
arch/arm64/kvm/arm.c:1959"]
    cpu_hyp_init_features -> cpu_set_hyp_vector
    cpu_hyp_init_features -> kvm_arm_init_debug
    cpu_hyp_init_features -> is_kernel_in_hyp_mode
    cpu_hyp_init_features -> kvm_timer_init_vhe
    cpu_hyp_init_features -> kvm_vgic_init_cpu_hardware
    cpu_set_hyp_vector [label="void cpu_set_hyp_vector (void)
arch/arm64/kvm/arm.c:1940"]
    cpu_set_hyp_vector -> this_cpu_ptr
    cpu_set_hyp_vector -> is_protected_kvm_enabled
    cpu_set_hyp_vector -> this_cpu_ptr_hyp_sym
    cpu_set_hyp_vector -> kvm_call_hyp_nvhe
    kvm_arm_init_debug [label="void kvm_arm_init_debug (void)
arch/arm64/kvm/debug.c:78"]
    kvm_arm_init_debug -> kvm_call_hyp_ret
    kvm_call_hyp_ret [label="kvm_call_hyp_ret()"]
    kvm_timer_init_vhe [label="void kvm_timer_init_vhe (void)
arch/arm64/kvm/arch_timer.c:1554"]
    kvm_timer_init_vhe -> cpus_have_final_cap
    kvm_timer_init_vhe -> sysreg_clear_set
    kvm_vgic_init_cpu_hardware [label="kvm_vgic_init_cpu_hardware()"]
    invalidate_icache_guest_page [label="void invalidate_icache_guest_page (void *va, size_t size)
arch/arm64/kvm/mmu.c:278"]
    ioeventfd_destructor [label="void ioeventfd_destructor (struct kvm_io_device *this)
virt/kvm/eventfd.c:798"]
    ioeventfd_destructor -> to_ioeventfd
    ioeventfd_destructor -> ioeventfd_release
    to_ioeventfd [label="inline struct _ioeventfd *to_ioeventfd (struct kvm_io_device *dev)
virt/kvm/eventfd.c:721"]
    to_ioeventfd -> container_of
    ioeventfd_release [label="void ioeventfd_release (struct _ioeventfd *p)
virt/kvm/eventfd.c:727"]
    ioeventfd_release -> eventfd_ctx_put
    ioeventfd_release -> list_del
    ioeventfd_release -> kfree
    eventfd_ctx_put [label="eventfd_ctx_put()"]
    ioeventfd_write [label="int ioeventfd_write (struct kvm_vcpu *vcpu, struct kvm_io_device *this, gpa_t addr, int len, const void *val)
virt/kvm/eventfd.c:781"]
    ioeventfd_write -> to_ioeventfd
    ioeventfd_write -> ioeventfd_in_range
    ioeventfd_write -> eventfd_signal
    ioeventfd_in_range [label="bool ioeventfd_in_range (struct _ioeventfd *p, gpa_t addr, int len, const void *val)
virt/kvm/eventfd.c:735"]
    ioeventfd_in_range -> BUG_ON
    ioeventfd_in_range -> IS_ALIGNED
    IS_ALIGNED [label="IS_ALIGNED()"]
    eventfd_signal [label="eventfd_signal()"]
    is_aa32_id_reg [label="inline bool is_aa32_id_reg (u32 id)
arch/arm64/kvm/sys_regs.c:1456"]
    is_aa32_id_reg -> sys_reg_Op0
    is_aa32_id_reg -> sys_reg_Op1
    is_aa32_id_reg -> sys_reg_CRn
    is_aa32_id_reg -> sys_reg_CRm
    sys_reg_Op0 [label="sys_reg_Op0()"]
    sys_reg_Op1 [label="sys_reg_Op1()"]
    sys_reg_CRn [label="sys_reg_CRn()"]
    sys_reg_CRm [label="sys_reg_CRm()"]
    is_feature_id_reg [label="bool is_feature_id_reg (u32 encoding)
arch/arm64/kvm/sys_regs.c:3742"]
    is_feature_id_reg -> sys_reg_Op0
    is_feature_id_reg -> sys_reg_Op1
    is_feature_id_reg -> sys_reg_CRn
    is_feature_id_reg -> sys_reg_CRm
    kvm_apply_hyp_relocations [label="__init void kvm_apply_hyp_relocations (void)
arch/arm64/kvm/va_layout.c:89"]
    kvm_apply_hyp_relocations -> lm_alias
    lm_alias [label="lm_alias()"]
    kvm_arch_timer_get_input_level [label="bool kvm_arch_timer_get_input_level (int vintid)
arch/arm64/kvm/arch_timer.c:1486"]
    kvm_arch_timer_get_input_level -> kvm_get_running_vcpu
    kvm_arch_timer_get_input_level -> WARN
    kvm_arch_timer_get_input_level -> WARN_RATELIMIT
    kvm_get_running_vcpu [label="struct kvm_vcpu *kvm_get_running_vcpu (void)
virt/kvm/kvm_main.c:5984"]
    kvm_get_running_vcpu -> preempt_disable
    kvm_get_running_vcpu -> preempt_enable
    kvm_arm_init [label="__init int kvm_arm_init (void)
arch/arm64/kvm/arm.c:2521"]
    kvm_arm_init -> bool
    kvm_arm_init -> is_hyp_mode_available
    kvm_arm_init -> kvm_info
    kvm_arm_init -> kvm_get_mode
    kvm_arm_init -> kvm_sys_reg_table_init
    kvm_arm_init -> is_kernel_in_hyp_mode
    kvm_arm_init -> cpus_have_final_cap
    kvm_arm_init -> kvm_set_ipa_limit
    kvm_arm_init -> kvm_arm_init_sve
    kvm_arm_init -> kvm_arm_vmid_alloc_init
    kvm_arm_init -> kvm_err
    kvm_arm_init -> init_hyp_mode
    kvm_arm_init -> kvm_init_vector_slots
    kvm_arm_init -> init_subsystems
    kvm_arm_init -> is_protected_kvm_enabled
    kvm_arm_init -> kvm_init
    kvm_arm_init -> teardown_subsystems
    kvm_arm_init -> teardown_hyp_mode
    kvm_arm_init -> kvm_arm_vmid_alloc_free
    kvm_info [label="kvm_info()"]
    kvm_get_mode [label="enum kvm_mode kvm_get_mode (void)
arch/arm64/kvm/arm.c:2647"]
    kvm_sys_reg_table_init [label="int __init kvm_sys_reg_table_init (void)
arch/arm64/kvm/sys_regs.c:3794"]
    kvm_sys_reg_table_init -> bool
    kvm_sys_reg_table_init -> check_sysreg_table
    kvm_sys_reg_table_init -> ARRAY_SIZE
    kvm_sys_reg_table_init -> encoding_to_params
    kvm_sys_reg_table_init -> find_reg
    kvm_sys_reg_table_init -> kvm_get_mode
    kvm_sys_reg_table_init -> populate_nv_trap_config
    check_sysreg_table [label="bool check_sysreg_table (const struct sys_reg_desc *table, unsigned int n, bool is_32)
arch/arm64/kvm/sys_regs.c:2914"]
    check_sysreg_table -> kvm_err
    check_sysreg_table -> cmp_sys_reg
    cmp_sys_reg [label="cmp_sys_reg()"]
    ARRAY_SIZE [label="ARRAY_SIZE()"]
    encoding_to_params [label="encoding_to_params()"]
    find_reg [label="find_reg()"]
    populate_nv_trap_config [label="int __init populate_nv_trap_config (void)
arch/arm64/kvm/emulate-nested.c:1701"]
    populate_nv_trap_config -> BUILD_BUG_ON
    populate_nv_trap_config -> BIT
    populate_nv_trap_config -> kvm_info
    populate_nv_trap_config -> ARRAY_SIZE
    populate_nv_trap_config -> cpus_have_final_cap
    populate_nv_trap_config -> xa_destroy
    BUILD_BUG_ON [label="BUILD_BUG_ON()"]
    xa_destroy [label="xa_destroy()"]
    kvm_set_ipa_limit [label="int __init kvm_set_ipa_limit (void)
arch/arm64/kvm/reset.c:274"]
    kvm_set_ipa_limit -> read_sanitised_ftr_reg
    kvm_set_ipa_limit -> cpuid_feature_extract_unsigned_field
    kvm_set_ipa_limit -> min
    kvm_set_ipa_limit -> kvm_err
    kvm_set_ipa_limit -> kvm_debug
    kvm_set_ipa_limit -> id_aa64mmfr0_parange_to_phys_shift
    kvm_set_ipa_limit -> kvm_info
    id_aa64mmfr0_parange_to_phys_shift [label="id_aa64mmfr0_parange_to_phys_shift()"]
    kvm_arm_init_sve [label="int __init kvm_arm_init_sve (void)
arch/arm64/kvm/reset.c:50"]
    kvm_arm_init_sve -> system_supports_sve
    kvm_arm_init_sve -> sve_max_virtualisable_vl
    kvm_arm_init_sve -> WARN_ON
    kvm_arm_init_sve -> sve_max_vl
    kvm_arm_init_sve -> pr_warn
    sve_max_virtualisable_vl [label="sve_max_virtualisable_vl()"]
    sve_max_vl [label="sve_max_vl()"]
    pr_warn [label="pr_warn()"]
    kvm_arm_vmid_alloc_init [label="int __init kvm_arm_vmid_alloc_init (void)
arch/arm64/kvm/vmid.c:180"]
    kvm_arm_vmid_alloc_init -> kvm_get_vmid_bits
    kvm_arm_vmid_alloc_init -> WARN_ON
    kvm_arm_vmid_alloc_init -> num_possible_cpus
    kvm_arm_vmid_alloc_init -> atomic64_set
    kvm_arm_vmid_alloc_init -> bitmap_zalloc
    kvm_get_vmid_bits [label="kvm_get_vmid_bits()"]
    num_possible_cpus [label="num_possible_cpus()"]
    bitmap_zalloc [label="bitmap_zalloc()"]
    init_hyp_mode [label="int __init init_hyp_mode (void)
arch/arm64/kvm/arm.c:2288"]
    init_hyp_mode -> is_protected_kvm_enabled
    init_hyp_mode -> kvm_mmu_init
    init_hyp_mode -> for_each_possible_cpu
    init_hyp_mode -> per_cpu
    init_hyp_mode -> alloc_pages
    init_hyp_mode -> nvhe_percpu_order
    init_hyp_mode -> page_address
    init_hyp_mode -> memcpy
    init_hyp_mode -> CHOOSE_NVHE_SYM
    init_hyp_mode -> nvhe_percpu_size
    init_hyp_mode -> kvm_nvhe_sym
    init_hyp_mode -> create_hyp_mappings
    init_hyp_mode -> kvm_ksym_ref
    init_hyp_mode -> kvm_err
    init_hyp_mode -> per_cpu_ptr_nvhe_sym
    init_hyp_mode -> create_hyp_stack
    init_hyp_mode -> cpu_prepare_hyp_mode
    init_hyp_mode -> kvm_hyp_init_symbols
    init_hyp_mode -> IS_ENABLED
    init_hyp_mode -> cpus_have_final_cap
    init_hyp_mode -> pkvm_hyp_init_ptrauth
    init_hyp_mode -> init_cpu_logical_map
    init_hyp_mode -> init_psci_relay
    init_hyp_mode -> kvm_hyp_init_protection
    init_hyp_mode -> teardown_hyp_mode
    kvm_mmu_init [label="int __init kvm_mmu_init (u32 *hyp_va_bits)
arch/arm64/kvm/mmu.c:1857"]
    kvm_mmu_init -> ALIGN_DOWN
    kvm_mmu_init -> ALIGN
    kvm_mmu_init -> BUG_ON
    kvm_mmu_init -> max
    kvm_mmu_init -> kvm_debug
    kvm_mmu_init -> kern_hyp_va
    kvm_mmu_init -> kvm_err
    kvm_mmu_init -> kzalloc
    kvm_mmu_init -> kvm_pgtable_hyp_init
    kvm_mmu_init -> kvm_map_idmap_text
    kvm_mmu_init -> kvm_pgtable_hyp_destroy
    kvm_mmu_init -> kfree
    ALIGN_DOWN [label="ALIGN_DOWN()"]
    ALIGN [label="ALIGN()"]
    max [label="max()"]
    kern_hyp_va [label="kern_hyp_va()"]
    kzalloc [label="kzalloc()"]
    kvm_pgtable_hyp_init [label="kvm_pgtable_hyp_init()"]
    kvm_map_idmap_text [label="int kvm_map_idmap_text (void)
arch/arm64/kvm/mmu.c:1832"]
    kvm_map_idmap_text -> kvm_err
    kvm_pgtable_hyp_destroy [label="kvm_pgtable_hyp_destroy()"]
    for_each_possible_cpu [label="for_each_possible_cpu()"]
    per_cpu [label="per_cpu()"]
    alloc_pages [label="alloc_pages()"]
    nvhe_percpu_order [label="unsigned long nvhe_percpu_order (void)
arch/arm64/kvm/arm.c:1798"]
    nvhe_percpu_order -> nvhe_percpu_size
    nvhe_percpu_order -> get_order
    nvhe_percpu_size [label="unsigned long nvhe_percpu_size (void)
arch/arm64/kvm/arm.c:1792"]
    nvhe_percpu_size -> CHOOSE_NVHE_SYM
    CHOOSE_NVHE_SYM [label="CHOOSE_NVHE_SYM()"]
    get_order [label="get_order()"]
    page_address [label="page_address()"]
    kvm_nvhe_sym [label="kvm_nvhe_sym()"]
    create_hyp_mappings [label="int create_hyp_mappings (void *from, void *to, enum kvm_pgtable_prot prot)
arch/arm64/kvm/mmu.c:574"]
    create_hyp_mappings -> kern_hyp_va
    create_hyp_mappings -> is_kernel_in_hyp_mode
    create_hyp_mappings -> kvm_host_owns_hyp_mappings
    create_hyp_mappings -> PAGE_ALIGN
    create_hyp_mappings -> kvm_kaddr_to_phys
    kvm_host_owns_hyp_mappings [label="bool kvm_host_owns_hyp_mappings (void)
arch/arm64/kvm/mmu.c:383"]
    kvm_host_owns_hyp_mappings -> is_kernel_in_hyp_mode
    kvm_host_owns_hyp_mappings -> static_branch_likely
    kvm_host_owns_hyp_mappings -> is_protected_kvm_enabled
    kvm_host_owns_hyp_mappings -> WARN_ON
    PAGE_ALIGN [label="PAGE_ALIGN()"]
    kvm_kaddr_to_phys [label="phys_addr_t kvm_kaddr_to_phys (void *kaddr)
arch/arm64/kvm/mmu.c:419"]
    kvm_kaddr_to_phys -> is_vmalloc_addr
    kvm_kaddr_to_phys -> BUG_ON
    kvm_kaddr_to_phys -> virt_addr_valid
    kvm_kaddr_to_phys -> page_to_phys
    kvm_kaddr_to_phys -> vmalloc_to_page
    kvm_kaddr_to_phys -> offset_in_page
    is_vmalloc_addr [label="is_vmalloc_addr()"]
    virt_addr_valid [label="virt_addr_valid()"]
    page_to_phys [label="page_to_phys()"]
    vmalloc_to_page [label="vmalloc_to_page()"]
    offset_in_page [label="offset_in_page()"]
    kvm_ksym_ref [label="kvm_ksym_ref()"]
    per_cpu_ptr_nvhe_sym [label="per_cpu_ptr_nvhe_sym()"]
    create_hyp_stack [label="int create_hyp_stack (phys_addr_t phys_addr, unsigned long *haddr)
arch/arm64/kvm/mmu.c:691"]
    create_hyp_stack -> mutex_lock
    create_hyp_stack -> ALIGN_DOWN
    create_hyp_stack -> mutex_unlock
    create_hyp_stack -> kvm_err
    cpu_prepare_hyp_mode [label="void __init cpu_prepare_hyp_mode (int cpu, u32 hyp_va_bits)
arch/arm64/kvm/arm.c:1837"]
    cpu_prepare_hyp_mode -> per_cpu_ptr_nvhe_sym
    cpu_prepare_hyp_mode -> kasan_reset_tag
    cpu_prepare_hyp_mode -> kvm_ksym_ref
    cpu_prepare_hyp_mode -> CHOOSE_NVHE_SYM
    cpu_prepare_hyp_mode -> read_sysreg
    cpu_prepare_hyp_mode -> cpus_have_final_cap
    cpu_prepare_hyp_mode -> TCR_T0SZ
    cpu_prepare_hyp_mode -> kvm_mmu_get_httbr
    cpu_prepare_hyp_mode -> is_protected_kvm_enabled
    cpu_prepare_hyp_mode -> kvm_flush_dcache_to_poc
    kasan_reset_tag [label="kasan_reset_tag()"]
    TCR_T0SZ [label="TCR_T0SZ()"]
    kvm_mmu_get_httbr [label="phys_addr_t kvm_mmu_get_httbr (void)
arch/arm64/kvm/mmu.c:1822"]
    kvm_flush_dcache_to_poc [label="kvm_flush_dcache_to_poc()"]
    kvm_hyp_init_symbols [label="void kvm_hyp_init_symbols (void)
arch/arm64/kvm/arm.c:2234"]
    kvm_hyp_init_symbols -> kvm_nvhe_sym
    kvm_hyp_init_symbols -> get_hyp_id_aa64pfr0_el1
    kvm_hyp_init_symbols -> read_sanitised_ftr_reg
    get_hyp_id_aa64pfr0_el1 [label="u64 get_hyp_id_aa64pfr0_el1 (void)
arch/arm64/kvm/arm.c:2210"]
    get_hyp_id_aa64pfr0_el1 -> read_sanitised_ftr_reg
    get_hyp_id_aa64pfr0_el1 -> ARM64_FEATURE_MASK
    get_hyp_id_aa64pfr0_el1 -> FIELD_PREP
    get_hyp_id_aa64pfr0_el1 -> arm64_get_spectre_v2_state
    get_hyp_id_aa64pfr0_el1 -> arm64_get_meltdown_state
    ARM64_FEATURE_MASK [label="ARM64_FEATURE_MASK()"]
    arm64_get_meltdown_state [label="arm64_get_meltdown_state()"]
    IS_ENABLED [label="IS_ENABLED()"]
    pkvm_hyp_init_ptrauth [label="void pkvm_hyp_init_ptrauth (void)
arch/arm64/kvm/arm.c:2267"]
    pkvm_hyp_init_ptrauth -> for_each_possible_cpu
    pkvm_hyp_init_ptrauth -> per_cpu_ptr_nvhe_sym
    pkvm_hyp_init_ptrauth -> get_random_long
    init_cpu_logical_map [label="void __init init_cpu_logical_map (void)
arch/arm64/kvm/arm.c:2080"]
    init_cpu_logical_map -> for_each_online_cpu
    init_cpu_logical_map -> cpu_logical_map
    for_each_online_cpu [label="for_each_online_cpu()"]
    cpu_logical_map [label="cpu_logical_map()"]
    init_psci_relay [label="bool __init init_psci_relay (void)
arch/arm64/kvm/arm.c:2097"]
    init_psci_relay -> kvm_err
    init_psci_relay -> arm_smccc_get_version
    init_psci_relay -> PSCI_VERSION
    init_psci_relay -> get_psci_0_1_function_ids
    init_psci_relay -> init_psci_0_1_impl_state
    arm_smccc_get_version [label="arm_smccc_get_version()"]
    PSCI_VERSION [label="PSCI_VERSION()"]
    get_psci_0_1_function_ids [label="get_psci_0_1_function_ids()"]
    init_psci_0_1_impl_state [label="init_psci_0_1_impl_state()"]
    kvm_hyp_init_protection [label="int __init kvm_hyp_init_protection (u32 hyp_va_bits)
arch/arm64/kvm/arm.c:2249"]
    kvm_hyp_init_protection -> phys_to_virt
    kvm_hyp_init_protection -> create_hyp_mappings
    kvm_hyp_init_protection -> do_pkvm_init
    kvm_hyp_init_protection -> free_hyp_pgds
    phys_to_virt [label="phys_to_virt()"]
    do_pkvm_init [label="int __init do_pkvm_init (u32 hyp_va_bits)
arch/arm64/kvm/arm.c:2188"]
    do_pkvm_init -> kvm_ksym_ref
    do_pkvm_init -> kvm_nvhe_sym
    do_pkvm_init -> preempt_disable
    do_pkvm_init -> cpu_hyp_init_context
    do_pkvm_init -> kvm_call_hyp_nvhe
    do_pkvm_init -> num_possible_cpus
    do_pkvm_init -> kern_hyp_va
    do_pkvm_init -> cpu_hyp_init_features
    do_pkvm_init -> preempt_enable
    free_hyp_pgds [label="void __init free_hyp_pgds (void)
arch/arm64/kvm/mmu.c:372"]
    free_hyp_pgds -> mutex_lock
    free_hyp_pgds -> kvm_pgtable_hyp_destroy
    free_hyp_pgds -> kfree
    free_hyp_pgds -> mutex_unlock
    teardown_hyp_mode [label="void __init teardown_hyp_mode (void)
arch/arm64/kvm/arm.c:2177"]
    teardown_hyp_mode -> free_hyp_pgds
    teardown_hyp_mode -> for_each_possible_cpu
    teardown_hyp_mode -> free_page
    teardown_hyp_mode -> per_cpu
    teardown_hyp_mode -> free_pages
    teardown_hyp_mode -> kvm_nvhe_sym
    teardown_hyp_mode -> nvhe_percpu_order
    free_page [label="free_page()"]
    free_pages [label="free_pages()"]
    kvm_init_vector_slots [label="int kvm_init_vector_slots (void)
arch/arm64/kvm/arm.c:1813"]
    kvm_init_vector_slots -> kern_hyp_va
    kvm_init_vector_slots -> kvm_ksym_ref
    kvm_init_vector_slots -> kvm_init_vector_slot
    kvm_init_vector_slots -> kvm_system_needs_idmapped_vectors
    kvm_init_vector_slots -> is_protected_kvm_enabled
    kvm_init_vector_slots -> create_hyp_exec_mappings
    kvm_init_vector_slot [label="void kvm_init_vector_slot (void *base, enum arm64_hyp_spectre_vector slot)
arch/arm64/kvm/arm.c:1808"]
    kvm_system_needs_idmapped_vectors [label="kvm_system_needs_idmapped_vectors()"]
    create_hyp_exec_mappings [label="int create_hyp_exec_mappings (phys_addr_t phys_addr, size_t size, void **haddr)
arch/arm64/kvm/mmu.c:778"]
    create_hyp_exec_mappings -> BUG_ON
    create_hyp_exec_mappings -> is_kernel_in_hyp_mode
    init_subsystems [label="int __init init_subsystems (void)
arch/arm64/kvm/arm.c:2121"]
    init_subsystems -> on_each_cpu
    init_subsystems -> cpu_hyp_init
    init_subsystems -> hyp_cpu_pm_init
    init_subsystems -> kvm_vgic_hyp_init
    init_subsystems -> kvm_timer_hyp_init
    init_subsystems -> kvm_register_perf_callbacks
    init_subsystems -> hyp_cpu_pm_exit
    init_subsystems -> is_protected_kvm_enabled
    init_subsystems -> cpu_hyp_uninit
    cpu_hyp_init [label="void cpu_hyp_init (void *discard)
arch/arm64/kvm/arm.c:1978"]
    cpu_hyp_init -> cpu_hyp_reinit
    hyp_cpu_pm_init [label="inline void __init hyp_cpu_pm_init (void)
arch/arm64/kvm/arm.c:2072"]
    hyp_cpu_pm_init -> is_protected_kvm_enabled
    hyp_cpu_pm_init -> cpu_pm_register_notifier
    cpu_pm_register_notifier [label="cpu_pm_register_notifier()"]
    kvm_vgic_hyp_init [label="kvm_vgic_hyp_init()"]
    kvm_timer_hyp_init [label="int __init kvm_timer_hyp_init (bool has_gic)
arch/arm64/kvm/arch_timer.c:1368"]
    kvm_timer_hyp_init -> arch_timer_get_kvm_info
    kvm_timer_hyp_init -> kvm_err
    kvm_timer_hyp_init -> kvm_irq_init
    kvm_timer_hyp_init -> request_percpu_irq
    kvm_timer_hyp_init -> kvm_arch_timer_handler
    kvm_timer_hyp_init -> kvm_get_running_vcpus
    kvm_timer_hyp_init -> irq_set_vcpu_affinity
    kvm_timer_hyp_init -> static_branch_enable
    kvm_timer_hyp_init -> kvm_debug
    kvm_timer_hyp_init -> has_vhe
    kvm_timer_hyp_init -> free_percpu_irq
    arch_timer_get_kvm_info [label="arch_timer_get_kvm_info()"]
    kvm_irq_init [label="int kvm_irq_init (struct arch_timer_kvm_info *info)
arch/arm64/kvm/arch_timer.c:1320"]
    kvm_irq_init -> kvm_err
    kvm_irq_init -> kvm_irq_fixup_flags
    kvm_irq_init -> irq_domain_alloc_named_fwnode
    kvm_irq_init -> irq_get_irq_data
    kvm_irq_init -> irq_domain_create_hierarchy
    kvm_irq_init -> irq_domain_free_fwnode
    kvm_irq_init -> WARN_ON
    kvm_irq_init -> irq_domain_push_irq
    kvm_irq_fixup_flags [label="void kvm_irq_fixup_flags (unsigned int virq, u32 *flags)
arch/arm64/kvm/arch_timer.c:1310"]
    kvm_irq_fixup_flags -> irq_get_trigger_type
    kvm_irq_fixup_flags -> kvm_err
    irq_get_trigger_type [label="irq_get_trigger_type()"]
    irq_domain_alloc_named_fwnode [label="irq_domain_alloc_named_fwnode()"]
    irq_get_irq_data [label="irq_get_irq_data()"]
    irq_domain_create_hierarchy [label="irq_domain_create_hierarchy()"]
    irq_domain_free_fwnode [label="irq_domain_free_fwnode()"]
    irq_domain_push_irq [label="irq_domain_push_irq()"]
    request_percpu_irq [label="request_percpu_irq()"]
    kvm_arch_timer_handler [label="irqreturn_t kvm_arch_timer_handler (int irq, void *dev_id)
arch/arm64/kvm/arch_timer.c:224"]
    kvm_arch_timer_handler -> get_timer_map
    kvm_arch_timer_handler -> kvm_timer_should_fire
    kvm_arch_timer_handler -> kvm_timer_update_irq
    kvm_arch_timer_handler -> userspace_irqchip
    kvm_arch_timer_handler -> static_branch_unlikely
    kvm_arch_timer_handler -> disable_percpu_irq
    kvm_get_running_vcpus [label="struct kvm_vcpu *__percpu *kvm_get_running_vcpus (void)
virt/kvm/kvm_main.c:5999"]
    irq_set_vcpu_affinity [label="irq_set_vcpu_affinity()"]
    free_percpu_irq [label="free_percpu_irq()"]
    kvm_register_perf_callbacks [label="void kvm_register_perf_callbacks (unsigned int (*pt_intr_handler) (void))
virt/kvm/kvm_main.c:6037"]
    kvm_register_perf_callbacks -> perf_register_guest_info_callbacks
    perf_register_guest_info_callbacks [label="perf_register_guest_info_callbacks()"]
    hyp_cpu_pm_exit [label="inline void __init hyp_cpu_pm_exit (void)
arch/arm64/kvm/arm.c:2075"]
    hyp_cpu_pm_exit -> is_protected_kvm_enabled
    hyp_cpu_pm_exit -> cpu_pm_unregister_notifier
    cpu_pm_unregister_notifier [label="cpu_pm_unregister_notifier()"]
    cpu_hyp_uninit [label="void cpu_hyp_uninit (void *discard)
arch/arm64/kvm/arm.c:1986"]
    cpu_hyp_uninit -> cpu_hyp_reset
    kvm_init [label="int kvm_init (unsigned vcpu_size, unsigned vcpu_align, struct module *module)
virt/kvm/kvm_main.c:6048"]
    kvm_init -> cpuhp_setup_state_nocalls
    kvm_init -> kvm_online_cpu
    kvm_init -> kvm_offline_cpu
    kvm_init -> register_syscore_ops
    kvm_init -> kmem_cache_create_usercopy
    kvm_init -> offsetof
    kvm_init -> offsetofend
    kvm_init -> for_each_possible_cpu
    kvm_init -> alloc_cpumask_var_node
    kvm_init -> per_cpu
    kvm_init -> cpu_to_node
    kvm_init -> kvm_irqfd_init
    kvm_init -> kvm_async_pf_init
    kvm_init -> kvm_sched_in
    kvm_init -> kvm_sched_out
    kvm_init -> kvm_init_debug
    kvm_init -> kvm_vfio_ops_init
    kvm_init -> WARN_ON_ONCE
    kvm_init -> misc_register
    kvm_init -> pr_err
    kvm_init -> kvm_vfio_ops_exit
    kvm_init -> kvm_async_pf_deinit
    kvm_init -> kvm_irqfd_exit
    kvm_init -> free_cpumask_var
    kvm_init -> kmem_cache_destroy
    kvm_init -> unregister_syscore_ops
    kvm_init -> cpuhp_remove_state_nocalls
    cpuhp_setup_state_nocalls [label="cpuhp_setup_state_nocalls()"]
    kvm_online_cpu [label="int kvm_online_cpu (unsigned int cpu)
virt/kvm/kvm_main.c:5194"]
    kvm_online_cpu -> mutex_lock
    kvm_online_cpu -> mutex_unlock
    kvm_offline_cpu [label="int kvm_offline_cpu (unsigned int cpu)
virt/kvm/kvm_main.c:5224"]
    kvm_offline_cpu -> mutex_lock
    kvm_offline_cpu -> hardware_disable_nolock
    kvm_offline_cpu -> mutex_unlock
    hardware_disable_nolock [label="void hardware_disable_nolock (void *junk)
virt/kvm/kvm_main.c:5210"]
    hardware_disable_nolock -> kvm_arch_hardware_disable
    kvm_arch_hardware_disable [label="void kvm_arch_hardware_disable (void)
arch/arm64/kvm/arm.c:2014"]
    kvm_arch_hardware_disable -> kvm_timer_cpu_down
    kvm_arch_hardware_disable -> kvm_vgic_cpu_down
    kvm_arch_hardware_disable -> is_protected_kvm_enabled
    kvm_arch_hardware_disable -> cpu_hyp_uninit
    kvm_timer_cpu_down [label="void kvm_timer_cpu_down (void)
arch/arm64/kvm/arch_timer.c:1042"]
    kvm_timer_cpu_down -> disable_percpu_irq
    kvm_vgic_cpu_down [label="kvm_vgic_cpu_down()"]
    register_syscore_ops [label="register_syscore_ops()"]
    kmem_cache_create_usercopy [label="kmem_cache_create_usercopy()"]
    offsetof [label="offsetof()"]
    offsetofend [label="offsetofend()"]
    alloc_cpumask_var_node [label="alloc_cpumask_var_node()"]
    cpu_to_node [label="cpu_to_node()"]
    kvm_irqfd_init [label="int kvm_irqfd_init (void)
virt/kvm/eventfd.c:685"]
    kvm_irqfd_init -> alloc_workqueue
    alloc_workqueue [label="alloc_workqueue()"]
    kvm_async_pf_init [label="int kvm_async_pf_init (void)
virt/kvm/async_pf.c:22"]
    kvm_async_pf_init -> KMEM_CACHE
    KMEM_CACHE [label="KMEM_CACHE()"]
    kvm_sched_in [label="void kvm_sched_in (struct preempt_notifier *pn, int cpu)
virt/kvm/kvm_main.c:5950"]
    kvm_sched_in -> preempt_notifier_to_vcpu
    kvm_sched_in -> WRITE_ONCE
    kvm_sched_in -> kvm_arch_sched_in
    kvm_sched_in -> kvm_arch_vcpu_load
    preempt_notifier_to_vcpu [label="inline struct kvm_vcpu *preempt_notifier_to_vcpu (struct preempt_notifier *pn)
virt/kvm/kvm_main.c:5945"]
    preempt_notifier_to_vcpu -> container_of
    kvm_arch_sched_in [label="kvm_arch_sched_in()"]
    kvm_sched_out [label="void kvm_sched_out (struct preempt_notifier *pn, struct task_struct *next)
virt/kvm/kvm_main.c:5962"]
    kvm_sched_out -> preempt_notifier_to_vcpu
    kvm_sched_out -> WRITE_ONCE
    kvm_sched_out -> kvm_arch_vcpu_put
    kvm_init_debug [label="void kvm_init_debug (void)
virt/kvm/kvm_main.c:5913"]
    kvm_init_debug -> debugfs_create_dir
    kvm_init_debug -> kvm_stats_debugfs_mode
    kvm_init_debug -> debugfs_create_file
    debugfs_create_dir [label="debugfs_create_dir()"]
    kvm_stats_debugfs_mode [label="umode_t kvm_stats_debugfs_mode (const struct _kvm_stats_desc *pdesc)
virt/kvm/kvm_main.c:1014"]
    debugfs_create_file [label="debugfs_create_file()"]
    kvm_vfio_ops_init [label="int kvm_vfio_ops_init (void)
virt/kvm/vfio.c:386"]
    kvm_vfio_ops_init -> kvm_register_device_ops
    kvm_register_device_ops [label="int kvm_register_device_ops (const struct kvm_device_ops *ops, u32 type)
virt/kvm/kvm_main.c:4450"]
    kvm_register_device_ops -> ARRAY_SIZE
    misc_register [label="misc_register()"]
    kvm_vfio_ops_exit [label="void kvm_vfio_ops_exit (void)
virt/kvm/vfio.c:391"]
    kvm_vfio_ops_exit -> kvm_unregister_device_ops
    kvm_unregister_device_ops [label="void kvm_unregister_device_ops (u32 type)
virt/kvm/kvm_main.c:4462"]
    kvm_async_pf_deinit [label="void kvm_async_pf_deinit (void)
virt/kvm/async_pf.c:32"]
    kvm_async_pf_deinit -> kmem_cache_destroy
    kmem_cache_destroy [label="kmem_cache_destroy()"]
    kvm_irqfd_exit [label="void kvm_irqfd_exit (void)
virt/kvm/eventfd.c:694"]
    kvm_irqfd_exit -> destroy_workqueue
    destroy_workqueue [label="destroy_workqueue()"]
    free_cpumask_var [label="free_cpumask_var()"]
    unregister_syscore_ops [label="unregister_syscore_ops()"]
    cpuhp_remove_state_nocalls [label="cpuhp_remove_state_nocalls()"]
    teardown_subsystems [label="void __init teardown_subsystems (void)
arch/arm64/kvm/arm.c:2171"]
    teardown_subsystems -> kvm_unregister_perf_callbacks
    teardown_subsystems -> hyp_cpu_pm_exit
    kvm_unregister_perf_callbacks [label="void kvm_unregister_perf_callbacks (void)
virt/kvm/kvm_main.c:6042"]
    kvm_unregister_perf_callbacks -> perf_unregister_guest_info_callbacks
    perf_unregister_guest_info_callbacks [label="perf_unregister_guest_info_callbacks()"]
    kvm_arm_vmid_alloc_free [label="void __init kvm_arm_vmid_alloc_free (void)
arch/arm64/kvm/vmid.c:197"]
    kvm_arm_vmid_alloc_free -> bitmap_free
    bitmap_free [label="bitmap_free()"]
    kvm_async_pf_wakeup_all [label="int kvm_async_pf_wakeup_all (struct kvm_vcpu *vcpu)
virt/kvm/async_pf.c:202"]
    kvm_async_pf_wakeup_all -> bool
    kvm_async_pf_wakeup_all -> list_empty_careful
    kvm_async_pf_wakeup_all -> kmem_cache_zalloc
    kvm_async_pf_wakeup_all -> INIT_LIST_HEAD
    kvm_async_pf_wakeup_all -> spin_lock
    kvm_async_pf_wakeup_all -> list_empty
    kvm_async_pf_wakeup_all -> list_add_tail
    kvm_async_pf_wakeup_all -> spin_unlock
    kvm_async_pf_wakeup_all -> IS_ENABLED
    kvm_async_pf_wakeup_all -> kvm_arch_async_page_present_queued
    list_empty_careful [label="list_empty_careful()"]
    kmem_cache_zalloc [label="kmem_cache_zalloc()"]
    INIT_LIST_HEAD [label="INIT_LIST_HEAD()"]
    list_empty [label="list_empty()"]
    list_add_tail [label="list_add_tail()"]
    kvm_arch_async_page_present_queued [label="kvm_arch_async_page_present_queued()"]
    kvm_check_async_pf_completion [label="void kvm_check_async_pf_completion (struct kvm_vcpu *vcpu)
virt/kvm/async_pf.c:136"]
    kvm_check_async_pf_completion -> list_empty_careful
    kvm_check_async_pf_completion -> kvm_arch_can_dequeue_async_page_present
    kvm_check_async_pf_completion -> spin_lock
    kvm_check_async_pf_completion -> list_first_entry
    kvm_check_async_pf_completion -> typeof
    kvm_check_async_pf_completion -> list_del
    kvm_check_async_pf_completion -> spin_unlock
    kvm_check_async_pf_completion -> kvm_arch_async_page_ready
    kvm_check_async_pf_completion -> IS_ENABLED
    kvm_check_async_pf_completion -> kvm_arch_async_page_present
    kvm_check_async_pf_completion -> kmem_cache_free
    kvm_arch_can_dequeue_async_page_present [label="kvm_arch_can_dequeue_async_page_present()"]
    list_first_entry [label="list_first_entry()"]
    kvm_arch_async_page_ready [label="kvm_arch_async_page_ready()"]
    kvm_arch_async_page_present [label="kvm_arch_async_page_present()"]
    kmem_cache_free [label="kmem_cache_free()"]
    kvm_clear_async_pf_completion_queue [label="void kvm_clear_async_pf_completion_queue (struct kvm_vcpu *vcpu)
virt/kvm/async_pf.c:93"]
    kvm_clear_async_pf_completion_queue -> spin_lock
    kvm_clear_async_pf_completion_queue -> list_empty
    kvm_clear_async_pf_completion_queue -> list_first_entry
    kvm_clear_async_pf_completion_queue -> typeof
    kvm_clear_async_pf_completion_queue -> list_del
    kvm_clear_async_pf_completion_queue -> spin_unlock
    kvm_clear_async_pf_completion_queue -> flush_work
    kvm_clear_async_pf_completion_queue -> cancel_work_sync
    kvm_clear_async_pf_completion_queue -> mmput
    kvm_clear_async_pf_completion_queue -> kvm_put_kvm
    kvm_clear_async_pf_completion_queue -> kmem_cache_free
    flush_work [label="flush_work()"]
    cancel_work_sync [label="cancel_work_sync()"]
    mmput [label="mmput()"]
    kvm_put_kvm [label="void kvm_put_kvm (struct kvm *kvm)
virt/kvm/kvm_main.c:1363"]
    kvm_put_kvm -> refcount_dec_and_test
    kvm_put_kvm -> kvm_destroy_vm
    refcount_dec_and_test [label="refcount_dec_and_test()"]
    kvm_destroy_vm [label="void kvm_destroy_vm (struct kvm *kvm)
virt/kvm/kvm_main.c:1295"]
    kvm_destroy_vm -> kvm_destroy_pm_notifier
    kvm_destroy_vm -> kvm_uevent_notify_change
    kvm_destroy_vm -> kvm_destroy_vm_debugfs
    kvm_destroy_vm -> kvm_arch_sync_events
    kvm_destroy_vm -> mutex_lock
    kvm_destroy_vm -> list_del
    kvm_destroy_vm -> mutex_unlock
    kvm_destroy_vm -> kvm_arch_pre_destroy_vm
    kvm_destroy_vm -> kvm_free_irq_routing
    kvm_destroy_vm -> kvm_get_bus
    kvm_destroy_vm -> kvm_io_bus_destroy
    kvm_destroy_vm -> kvm_coalesced_mmio_free
    kvm_destroy_vm -> mmu_notifier_unregister
    kvm_destroy_vm -> WARN_ON
    kvm_destroy_vm -> rcuwait_active
    kvm_destroy_vm -> kvm_flush_shadow_all
    kvm_destroy_vm -> kvm_arch_destroy_vm
    kvm_destroy_vm -> kvm_destroy_devices
    kvm_destroy_vm -> kvm_free_memslots
    kvm_destroy_vm -> cleanup_srcu_struct
    kvm_destroy_vm -> kvm_arch_free_vm
    kvm_destroy_vm -> preempt_notifier_dec
    kvm_destroy_vm -> hardware_disable_all
    kvm_destroy_vm -> mmdrop
    kvm_destroy_pm_notifier [label="void kvm_destroy_pm_notifier (struct kvm *kvm)
virt/kvm/kvm_main.c:971"]
    kvm_destroy_pm_notifier -> unregister_pm_notifier
    unregister_pm_notifier [label="unregister_pm_notifier()"]
    kvm_uevent_notify_change [label="void kvm_uevent_notify_change (unsigned int type, struct kvm *kvm)
virt/kvm/kvm_main.c:5863"]
    kvm_uevent_notify_change -> mutex_lock
    kvm_uevent_notify_change -> mutex_unlock
    kvm_uevent_notify_change -> kzalloc
    kvm_uevent_notify_change -> add_uevent_var
    kvm_uevent_notify_change -> task_pid_nr
    kvm_uevent_notify_change -> IS_ERR
    kvm_uevent_notify_change -> kmalloc
    kvm_uevent_notify_change -> dentry_path_raw
    kvm_uevent_notify_change -> kfree
    kvm_uevent_notify_change -> kobject_uevent_env
    add_uevent_var [label="add_uevent_var()"]
    task_pid_nr [label="task_pid_nr()"]
    kmalloc [label="kmalloc()"]
    dentry_path_raw [label="dentry_path_raw()"]
    kobject_uevent_env [label="kobject_uevent_env()"]
    kvm_destroy_vm_debugfs [label="void kvm_destroy_vm_debugfs (struct kvm *kvm)
virt/kvm/kvm_main.c:1027"]
    kvm_destroy_vm_debugfs -> IS_ERR
    kvm_destroy_vm_debugfs -> debugfs_remove_recursive
    kvm_destroy_vm_debugfs -> kfree
    debugfs_remove_recursive [label="debugfs_remove_recursive()"]
    kvm_arch_sync_events [label="kvm_arch_sync_events()"]
    kvm_arch_pre_destroy_vm [label="void __weak kvm_arch_pre_destroy_vm (struct kvm *kvm)
virt/kvm/kvm_main.c:1133"]
    kvm_free_irq_routing [label="void kvm_free_irq_routing (struct kvm *kvm)
virt/kvm/irqchip.c:119"]
    kvm_free_irq_routing -> rcu_access_pointer
    kvm_free_irq_routing -> free_irq_routing_table
    rcu_access_pointer [label="rcu_access_pointer()"]
    free_irq_routing_table [label="void free_irq_routing_table (struct kvm_irq_routing_table *rt)
virt/kvm/irqchip.c:99"]
    free_irq_routing_table -> hlist_for_each_entry_safe
    free_irq_routing_table -> hlist_del
    free_irq_routing_table -> kfree
    hlist_for_each_entry_safe [label="hlist_for_each_entry_safe()"]
    hlist_del [label="hlist_del()"]
    kvm_get_bus [label="kvm_get_bus()"]
    kvm_io_bus_destroy [label="void kvm_io_bus_destroy (struct kvm_io_bus *bus)
virt/kvm/kvm_main.c:5366"]
    kvm_io_bus_destroy -> kvm_iodevice_destructor
    kvm_io_bus_destroy -> kfree
    kvm_iodevice_destructor [label="void kvm_iodevice_destructor (struct kvm_io_device *dev)
virt/kvm/kvm_main.c:5360"]
    kvm_coalesced_mmio_free [label="void kvm_coalesced_mmio_free (struct kvm *kvm)
virt/kvm/coalesced_mmio.c:131"]
    kvm_coalesced_mmio_free -> free_page
    mmu_notifier_unregister [label="mmu_notifier_unregister()"]
    rcuwait_active [label="rcuwait_active()"]
    kvm_flush_shadow_all [label="void kvm_flush_shadow_all (struct kvm *kvm)
virt/kvm/kvm_main.c:394"]
    kvm_flush_shadow_all -> kvm_arch_flush_shadow_all
    kvm_flush_shadow_all -> kvm_arch_guest_memory_reclaimed
    kvm_arch_flush_shadow_all [label="void kvm_arch_flush_shadow_all (struct kvm *kvm)
arch/arm64/kvm/mmu.c:2057"]
    kvm_arch_flush_shadow_all -> kvm_uninit_stage2_mmu
    kvm_uninit_stage2_mmu [label="void kvm_uninit_stage2_mmu (struct kvm *kvm)
arch/arm64/kvm/mmu.c:935"]
    kvm_uninit_stage2_mmu -> kvm_free_stage2_pgd
    kvm_uninit_stage2_mmu -> kvm_mmu_free_memory_cache
    kvm_free_stage2_pgd [label="void kvm_free_stage2_pgd (struct kvm_s2_mmu *mmu)
arch/arm64/kvm/mmu.c:1009"]
    kvm_free_stage2_pgd -> kvm_s2_mmu_to_kvm
    kvm_free_stage2_pgd -> write_lock
    kvm_free_stage2_pgd -> free_percpu
    kvm_free_stage2_pgd -> write_unlock
    kvm_free_stage2_pgd -> kvm_pgtable_stage2_destroy
    kvm_free_stage2_pgd -> kfree
    kvm_s2_mmu_to_kvm [label="kvm_s2_mmu_to_kvm()"]
    free_percpu [label="free_percpu()"]
    kvm_pgtable_stage2_destroy [label="kvm_pgtable_stage2_destroy()"]
    kvm_mmu_free_memory_cache [label="void kvm_mmu_free_memory_cache (struct kvm_mmu_memory_cache *mc)
virt/kvm/kvm_main.c:454"]
    kvm_mmu_free_memory_cache -> kmem_cache_free
    kvm_mmu_free_memory_cache -> free_page
    kvm_mmu_free_memory_cache -> kvfree
    kvfree [label="kvfree()"]
    kvm_arch_guest_memory_reclaimed [label="__weak void kvm_arch_guest_memory_reclaimed (struct kvm *kvm)
virt/kvm/kvm_main.c:155"]
    kvm_arch_destroy_vm [label="void kvm_arch_destroy_vm (struct kvm *kvm)
arch/arm64/kvm/arm.c:198"]
    kvm_arch_destroy_vm -> bitmap_free
    kvm_arch_destroy_vm -> free_cpumask_var
    kvm_arch_destroy_vm -> kvm_vgic_destroy
    kvm_arch_destroy_vm -> is_protected_kvm_enabled
    kvm_arch_destroy_vm -> pkvm_destroy_hyp_vm
    kvm_arch_destroy_vm -> kfree
    kvm_arch_destroy_vm -> kvm_destroy_vcpus
    kvm_arch_destroy_vm -> kvm_unshare_hyp
    kvm_arch_destroy_vm -> kvm_arm_teardown_hypercalls
    kvm_vgic_destroy [label="kvm_vgic_destroy()"]
    pkvm_destroy_hyp_vm [label="void pkvm_destroy_hyp_vm (struct kvm *host_kvm)
arch/arm64/kvm/pkvm.c:216"]
    pkvm_destroy_hyp_vm -> mutex_lock
    pkvm_destroy_hyp_vm -> mutex_unlock
    kvm_destroy_vcpus [label="void kvm_destroy_vcpus (struct kvm *kvm)
virt/kvm/kvm_main.c:522"]
    kvm_destroy_vcpus -> kvm_for_each_vcpu
    kvm_destroy_vcpus -> kvm_vcpu_destroy
    kvm_destroy_vcpus -> xa_erase
    kvm_destroy_vcpus -> atomic_set
    kvm_vcpu_destroy [label="void kvm_vcpu_destroy (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:506"]
    kvm_vcpu_destroy -> kvm_arch_vcpu_destroy
    kvm_vcpu_destroy -> kvm_dirty_ring_free
    kvm_vcpu_destroy -> put_pid
    kvm_vcpu_destroy -> rcu_dereference_protected
    kvm_vcpu_destroy -> free_page
    kvm_vcpu_destroy -> kmem_cache_free
    kvm_arch_vcpu_destroy [label="void kvm_arch_vcpu_destroy (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:405"]
    kvm_arch_vcpu_destroy -> vcpu_has_run_once
    kvm_arch_vcpu_destroy -> unlikely
    kvm_arch_vcpu_destroy -> irqchip_in_kernel
    kvm_arch_vcpu_destroy -> static_branch_dec
    kvm_arch_vcpu_destroy -> kvm_mmu_free_memory_cache
    kvm_arch_vcpu_destroy -> kvm_timer_vcpu_terminate
    kvm_arch_vcpu_destroy -> kvm_pmu_vcpu_destroy
    kvm_arch_vcpu_destroy -> kvm_vgic_vcpu_destroy
    kvm_arch_vcpu_destroy -> kvm_arm_vcpu_destroy
    vcpu_has_run_once [label="vcpu_has_run_once()"]
    static_branch_dec [label="static_branch_dec()"]
    kvm_timer_vcpu_terminate [label="void kvm_timer_vcpu_terminate (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:1446"]
    kvm_timer_vcpu_terminate -> vcpu_timer
    kvm_timer_vcpu_terminate -> soft_timer_cancel
    kvm_pmu_vcpu_destroy [label="void kvm_pmu_vcpu_destroy (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:259"]
    kvm_pmu_vcpu_destroy -> kvm_pmu_release_perf_event
    kvm_pmu_vcpu_destroy -> kvm_vcpu_idx_to_pmc
    kvm_pmu_vcpu_destroy -> irq_work_sync
    irq_work_sync [label="irq_work_sync()"]
    kvm_vgic_vcpu_destroy [label="kvm_vgic_vcpu_destroy()"]
    kvm_arm_vcpu_destroy [label="void kvm_arm_vcpu_destroy (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:150"]
    kvm_arm_vcpu_destroy -> kvm_vcpu_unshare_task_fp
    kvm_arm_vcpu_destroy -> kvm_unshare_hyp
    kvm_arm_vcpu_destroy -> vcpu_sve_state_size
    kvm_arm_vcpu_destroy -> kfree
    kvm_vcpu_unshare_task_fp [label="void kvm_vcpu_unshare_task_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:17"]
    kvm_vcpu_unshare_task_fp -> is_protected_kvm_enabled
    kvm_vcpu_unshare_task_fp -> kvm_unshare_hyp
    kvm_vcpu_unshare_task_fp -> put_task_struct
    kvm_unshare_hyp [label="void kvm_unshare_hyp (void *from, void *to)
arch/arm64/kvm/mmu.c:548"]
    kvm_unshare_hyp -> is_kernel_in_hyp_mode
    kvm_unshare_hyp -> kvm_host_owns_hyp_mappings
    kvm_unshare_hyp -> ALIGN_DOWN
    kvm_unshare_hyp -> PAGE_ALIGN
    kvm_unshare_hyp -> WARN_ON
    kvm_unshare_hyp -> unshare_pfn_hyp
    unshare_pfn_hyp [label="int unshare_pfn_hyp (u64 pfn)
arch/arm64/kvm/mmu.c:490"]
    unshare_pfn_hyp -> mutex_lock
    unshare_pfn_hyp -> find_shared_pfn
    unshare_pfn_hyp -> WARN_ON
    unshare_pfn_hyp -> rb_erase
    unshare_pfn_hyp -> kfree
    unshare_pfn_hyp -> kvm_call_hyp_nvhe
    unshare_pfn_hyp -> mutex_unlock
    find_shared_pfn [label="struct hyp_shared_pfn *find_shared_pfn (u64 pfn, struct rb_node ***node, struct rb_node **parent)
arch/arm64/kvm/mmu.c:439"]
    find_shared_pfn -> container_of
    rb_erase [label="rb_erase()"]
    put_task_struct [label="put_task_struct()"]
    vcpu_sve_state_size [label="vcpu_sve_state_size()"]
    kvm_dirty_ring_free [label="void kvm_dirty_ring_free (struct kvm_dirty_ring *ring)
virt/kvm/dirty_ring.c:218"]
    kvm_dirty_ring_free -> vfree
    vfree [label="vfree()"]
    put_pid [label="put_pid()"]
    rcu_dereference_protected [label="rcu_dereference_protected()"]
    xa_erase [label="xa_erase()"]
    atomic_set [label="atomic_set()"]
    kvm_arm_teardown_hypercalls [label="void kvm_arm_teardown_hypercalls (struct kvm *kvm)
arch/arm64/kvm/hypercalls.c:403"]
    kvm_arm_teardown_hypercalls -> mtree_destroy
    mtree_destroy [label="mtree_destroy()"]
    kvm_destroy_devices [label="void kvm_destroy_devices (struct kvm *kvm)
virt/kvm/kvm_main.c:1280"]
    kvm_destroy_devices -> list_for_each_entry_safe
    kvm_destroy_devices -> list_del
    list_for_each_entry_safe [label="list_for_each_entry_safe()"]
    kvm_free_memslots [label="void kvm_free_memslots (struct kvm *kvm, struct kvm_memslots *slots)
virt/kvm/kvm_main.c:995"]
    kvm_free_memslots -> hash_for_each_safe
    kvm_free_memslots -> kvm_free_memslot
    hash_for_each_safe [label="hash_for_each_safe()"]
    kvm_free_memslot [label="void kvm_free_memslot (struct kvm *kvm, struct kvm_memory_slot *slot)
virt/kvm/kvm_main.c:986"]
    kvm_free_memslot -> kvm_destroy_dirty_bitmap
    kvm_free_memslot -> kvm_arch_free_memslot
    kvm_free_memslot -> kfree
    kvm_destroy_dirty_bitmap [label="void kvm_destroy_dirty_bitmap (struct kvm_memory_slot *memslot)
virt/kvm/kvm_main.c:976"]
    kvm_destroy_dirty_bitmap -> kvfree
    kvm_arch_free_memslot [label="void kvm_arch_free_memslot (struct kvm *kvm, struct kvm_memory_slot *slot)
arch/arm64/kvm/mmu.c:2049"]
    cleanup_srcu_struct [label="cleanup_srcu_struct()"]
    kvm_arch_free_vm [label="kvm_arch_free_vm()"]
    preempt_notifier_dec [label="preempt_notifier_dec()"]
    hardware_disable_all [label="void hardware_disable_all (void)
virt/kvm/kvm_main.c:5354"]
    hardware_disable_all -> cpus_read_lock
    hardware_disable_all -> mutex_lock
    hardware_disable_all -> hardware_disable_all_nolock
    hardware_disable_all -> mutex_unlock
    hardware_disable_all -> cpus_read_unlock
    cpus_read_lock [label="cpus_read_lock()"]
    hardware_disable_all_nolock [label="void hardware_disable_all_nolock (void)
virt/kvm/kvm_main.c:5233"]
    hardware_disable_all_nolock -> BUG_ON
    hardware_disable_all_nolock -> on_each_cpu
    hardware_disable_all_nolock -> hardware_disable_nolock
    cpus_read_unlock [label="cpus_read_unlock()"]
    mmdrop [label="mmdrop()"]
    kvm_clear_guest [label="int kvm_clear_guest (struct kvm *kvm, gpa_t gpa, unsigned long len)
virt/kvm/kvm_main.c:3323"]
    kvm_clear_guest -> page_to_phys
    kvm_clear_guest -> ZERO_PAGE
    kvm_clear_guest -> offset_in_page
    kvm_clear_guest -> next_segment
    kvm_clear_guest -> kvm_write_guest_page
    ZERO_PAGE [label="ZERO_PAGE()"]
    next_segment [label="int next_segment (unsigned long len, int offset)
virt/kvm/kvm_main.c:3013"]
    kvm_write_guest_page [label="int kvm_write_guest_page (struct kvm *kvm, gfn_t gfn, const void *data, int offset, int len)
virt/kvm/kvm_main.c:3139"]
    kvm_write_guest_page -> gfn_to_memslot
    kvm_clr_pmu_events [label="void kvm_clr_pmu_events (u32 clr)
arch/arm64/kvm/pmu.c:54"]
    kvm_clr_pmu_events -> kvm_get_pmu_events
    kvm_clr_pmu_events -> kvm_arm_support_pmu_v3
    kvm_compute_final_ctr_el0 [label="void kvm_compute_final_ctr_el0 (struct alt_instr *alt, __le32 *origptr, __le32 *updptr, int nr_inst)
arch/arm64/kvm/va_layout.c:293"]
    kvm_compute_final_ctr_el0 -> generate_mov_q
    kvm_compute_final_ctr_el0 -> read_sanitised_ftr_reg
    generate_mov_q [label="void generate_mov_q (u64 val, __le32 *origptr, __le32 *updptr, int nr_inst)
arch/arm64/kvm/va_layout.c:244"]
    generate_mov_q -> BUG_ON
    generate_mov_q -> le32_to_cpu
    generate_mov_q -> aarch64_insn_decode_register
    generate_mov_q -> aarch64_insn_gen_movewide
    generate_mov_q -> cpu_to_le32
    aarch64_insn_decode_register [label="aarch64_insn_decode_register()"]
    aarch64_insn_gen_movewide [label="aarch64_insn_gen_movewide()"]
    cpu_to_le32 [label="cpu_to_le32()"]
    kvm_compute_layout [label="__init void kvm_compute_layout (void)
arch/arm64/kvm/va_layout.c:60"]
    kvm_compute_layout -> BIT
    kvm_compute_layout -> fls64
    kvm_compute_layout -> phys_to_virt
    kvm_compute_layout -> memblock_start_of_DRAM
    kvm_compute_layout -> GENMASK_ULL
    kvm_compute_layout -> IS_ENABLED
    kvm_compute_layout -> get_random_long
    kvm_compute_layout -> init_hyp_physvirt_offset
    fls64 [label="fls64()"]
    memblock_start_of_DRAM [label="memblock_start_of_DRAM()"]
    init_hyp_physvirt_offset [label="void init_hyp_physvirt_offset (void)
arch/arm64/kvm/va_layout.c:39"]
    init_hyp_physvirt_offset -> lm_alias
    kvm_debugfs_release [label="int kvm_debugfs_release (struct inode *inode, struct file *file)
virt/kvm/kvm_main.c:5685"]
    kvm_debugfs_release -> simple_attr_release
    kvm_debugfs_release -> kvm_put_kvm
    simple_attr_release [label="simple_attr_release()"]
    kvm_dev_ioctl [label="long kvm_dev_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:5114"]
    kvm_dev_ioctl -> kvm_dev_ioctl_create_vm
    kvm_dev_ioctl -> kvm_vm_ioctl_check_extension_generic
    kvm_dev_ioctl -> kvm_arch_dev_ioctl
    kvm_dev_ioctl_create_vm [label="int kvm_dev_ioctl_create_vm (unsigned long type)
virt/kvm/kvm_main.c:5071"]
    kvm_dev_ioctl_create_vm -> get_unused_fd_flags
    kvm_dev_ioctl_create_vm -> snprintf
    kvm_dev_ioctl_create_vm -> kvm_create_vm
    kvm_dev_ioctl_create_vm -> IS_ERR
    kvm_dev_ioctl_create_vm -> PTR_ERR
    kvm_dev_ioctl_create_vm -> anon_inode_getfile
    kvm_dev_ioctl_create_vm -> kvm_uevent_notify_change
    kvm_dev_ioctl_create_vm -> fd_install
    kvm_dev_ioctl_create_vm -> kvm_put_kvm
    kvm_dev_ioctl_create_vm -> put_unused_fd
    get_unused_fd_flags [label="get_unused_fd_flags()"]
    snprintf [label="snprintf()"]
    kvm_create_vm [label="struct kvm *kvm_create_vm (unsigned long type, const char *fdname)
virt/kvm/kvm_main.c:1148"]
    kvm_create_vm -> kvm_arch_alloc_vm
    kvm_create_vm -> ERR_PTR
    kvm_create_vm -> KVM_MMU_LOCK_INIT
    kvm_create_vm -> mmgrab
    kvm_create_vm -> kvm_eventfd_init
    kvm_create_vm -> mutex_init
    kvm_create_vm -> spin_lock_init
    kvm_create_vm -> rcuwait_init
    kvm_create_vm -> xa_init
    kvm_create_vm -> INIT_LIST_HEAD
    kvm_create_vm -> BUILD_BUG_ON
    kvm_create_vm -> snprintf
    kvm_create_vm -> task_pid_nr
    kvm_create_vm -> init_srcu_struct
    kvm_create_vm -> refcount_set
    kvm_create_vm -> atomic_long_set
    kvm_create_vm -> hash_init
    kvm_create_vm -> rcu_assign_pointer
    kvm_create_vm -> kzalloc
    kvm_create_vm -> kvm_arch_init_vm
    kvm_create_vm -> hardware_enable_all
    kvm_create_vm -> INIT_HLIST_HEAD
    kvm_create_vm -> kvm_init_mmu_notifier
    kvm_create_vm -> kvm_coalesced_mmio_init
    kvm_create_vm -> kvm_create_vm_debugfs
    kvm_create_vm -> kvm_arch_post_init_vm
    kvm_create_vm -> mutex_lock
    kvm_create_vm -> list_add
    kvm_create_vm -> mutex_unlock
    kvm_create_vm -> preempt_notifier_inc
    kvm_create_vm -> kvm_init_pm_notifier
    kvm_create_vm -> kvm_destroy_vm_debugfs
    kvm_create_vm -> kvm_coalesced_mmio_free
    kvm_create_vm -> mmu_notifier_unregister
    kvm_create_vm -> hardware_disable_all
    kvm_create_vm -> kvm_arch_destroy_vm
    kvm_create_vm -> WARN_ON_ONCE
    kvm_create_vm -> refcount_dec_and_test
    kvm_create_vm -> kfree
    kvm_create_vm -> kvm_get_bus
    kvm_create_vm -> cleanup_srcu_struct
    kvm_create_vm -> kvm_arch_free_vm
    kvm_create_vm -> mmdrop
    kvm_arch_alloc_vm [label="struct kvm *kvm_arch_alloc_vm (void)
arch/arm64/kvm/arm.c:337"]
    kvm_arch_alloc_vm -> has_vhe
    kvm_arch_alloc_vm -> kzalloc
    ERR_PTR [label="ERR_PTR()"]
    KVM_MMU_LOCK_INIT [label="KVM_MMU_LOCK_INIT()"]
    mmgrab [label="mmgrab()"]
    kvm_eventfd_init [label="void kvm_eventfd_init (struct kvm *kvm)
virt/kvm/eventfd.c:532"]
    kvm_eventfd_init -> spin_lock_init
    kvm_eventfd_init -> INIT_LIST_HEAD
    kvm_eventfd_init -> mutex_init
    spin_lock_init [label="spin_lock_init()"]
    mutex_init [label="mutex_init()"]
    rcuwait_init [label="rcuwait_init()"]
    xa_init [label="xa_init()"]
    init_srcu_struct [label="init_srcu_struct()"]
    refcount_set [label="refcount_set()"]
    atomic_long_set [label="atomic_long_set()"]
    hash_init [label="hash_init()"]
    rcu_assign_pointer [label="rcu_assign_pointer()"]
    kvm_arch_init_vm [label="int kvm_arch_init_vm (struct kvm *kvm, unsigned long type)
arch/arm64/kvm/arm.c:136"]
    kvm_arch_init_vm -> mutex_init
    kvm_arch_init_vm -> mutex_lock
    kvm_arch_init_vm -> mutex_unlock
    kvm_arch_init_vm -> kvm_share_hyp
    kvm_arch_init_vm -> pkvm_init_host_vm
    kvm_arch_init_vm -> zalloc_cpumask_var
    kvm_arch_init_vm -> cpumask_copy
    kvm_arch_init_vm -> kvm_init_stage2_mmu
    kvm_arch_init_vm -> kvm_vgic_early_init
    kvm_arch_init_vm -> kvm_timer_init_vm
    kvm_arch_init_vm -> kvm_arm_default_max_vcpus
    kvm_arch_init_vm -> kvm_arm_init_hypercalls
    kvm_arch_init_vm -> bitmap_zero
    kvm_arch_init_vm -> free_cpumask_var
    kvm_arch_init_vm -> kvm_unshare_hyp
    kvm_share_hyp [label="int kvm_share_hyp (void *from, void *to)
arch/arm64/kvm/mmu.c:516"]
    kvm_share_hyp -> is_kernel_in_hyp_mode
    kvm_share_hyp -> is_vmalloc_or_module_addr
    kvm_share_hyp -> kvm_host_owns_hyp_mappings
    kvm_share_hyp -> create_hyp_mappings
    kvm_share_hyp -> ALIGN_DOWN
    kvm_share_hyp -> PAGE_ALIGN
    kvm_share_hyp -> share_pfn_hyp
    is_vmalloc_or_module_addr [label="is_vmalloc_or_module_addr()"]
    share_pfn_hyp [label="int share_pfn_hyp (u64 pfn)
arch/arm64/kvm/mmu.c:460"]
    share_pfn_hyp -> mutex_lock
    share_pfn_hyp -> find_shared_pfn
    share_pfn_hyp -> kzalloc
    share_pfn_hyp -> rb_link_node
    share_pfn_hyp -> rb_insert_color
    share_pfn_hyp -> kvm_call_hyp_nvhe
    share_pfn_hyp -> mutex_unlock
    rb_link_node [label="rb_link_node()"]
    rb_insert_color [label="rb_insert_color()"]
    pkvm_init_host_vm [label="int pkvm_init_host_vm (struct kvm *host_kvm)
arch/arm64/kvm/pkvm.c:223"]
    pkvm_init_host_vm -> mutex_init
    zalloc_cpumask_var [label="zalloc_cpumask_var()"]
    cpumask_copy [label="cpumask_copy()"]
    kvm_init_stage2_mmu [label="int kvm_init_stage2_mmu (struct kvm *kvm, struct kvm_s2_mmu *mmu, unsigned long type)
arch/arm64/kvm/mmu.c:866"]
    kvm_init_stage2_mmu -> get_kvm_ipa_limit
    kvm_init_stage2_mmu -> KVM_VM_TYPE_ARM_IPA_SIZE
    kvm_init_stage2_mmu -> is_protected_kvm_enabled
    kvm_init_stage2_mmu -> pr_warn_once
    kvm_init_stage2_mmu -> read_sanitised_ftr_reg
    kvm_init_stage2_mmu -> kvm_get_vtcr
    kvm_init_stage2_mmu -> kvm_err
    kvm_init_stage2_mmu -> kzalloc
    kvm_init_stage2_mmu -> kvm_pgtable_stage2_init
    kvm_init_stage2_mmu -> alloc_percpu
    kvm_init_stage2_mmu -> typeof
    kvm_init_stage2_mmu -> for_each_possible_cpu
    kvm_init_stage2_mmu -> per_cpu_ptr
    kvm_init_stage2_mmu -> kvm_pgtable_stage2_destroy
    kvm_init_stage2_mmu -> kfree
    get_kvm_ipa_limit [label="u32 get_kvm_ipa_limit (void)
arch/arm64/kvm/reset.c:269"]
    KVM_VM_TYPE_ARM_IPA_SIZE [label="KVM_VM_TYPE_ARM_IPA_SIZE()"]
    kvm_get_vtcr [label="kvm_get_vtcr()"]
    kvm_pgtable_stage2_init [label="kvm_pgtable_stage2_init()"]
    alloc_percpu [label="alloc_percpu()"]
    per_cpu_ptr [label="per_cpu_ptr()"]
    kvm_vgic_early_init [label="kvm_vgic_early_init()"]
    kvm_timer_init_vm [label="void kvm_timer_init_vm (struct kvm *kvm)
arch/arm64/kvm/arch_timer.c:1029"]
    kvm_arm_default_max_vcpus [label="int kvm_arm_default_max_vcpus (void)
arch/arm64/kvm/arm.c:127"]
    kvm_arm_default_max_vcpus -> kvm_vgic_get_max_vcpus
    kvm_vgic_get_max_vcpus [label="kvm_vgic_get_max_vcpus()"]
    kvm_arm_init_hypercalls [label="void kvm_arm_init_hypercalls (struct kvm *kvm)
arch/arm64/kvm/hypercalls.c:392"]
    kvm_arm_init_hypercalls -> mt_init
    mt_init [label="mt_init()"]
    bitmap_zero [label="bitmap_zero()"]
    hardware_enable_all [label="int hardware_enable_all (void)
virt/kvm/kvm_main.c:5349"]
    hardware_enable_all -> ATOMIC_INIT
    hardware_enable_all -> cpus_read_lock
    hardware_enable_all -> mutex_lock
    hardware_enable_all -> on_each_cpu
    hardware_enable_all -> hardware_enable_nolock
    hardware_enable_all -> atomic_read
    hardware_enable_all -> hardware_disable_all_nolock
    hardware_enable_all -> mutex_unlock
    hardware_enable_all -> cpus_read_unlock
    ATOMIC_INIT [label="ATOMIC_INIT()"]
    hardware_enable_nolock [label="void hardware_enable_nolock (void *failed)
virt/kvm/kvm_main.c:5188"]
    hardware_enable_nolock -> atomic_inc
    atomic_inc [label="atomic_inc()"]
    atomic_read [label="atomic_read()"]
    INIT_HLIST_HEAD [label="INIT_HLIST_HEAD()"]
    kvm_init_mmu_notifier [label="int kvm_init_mmu_notifier (struct kvm *kvm)
virt/kvm/kvm_main.c:937"]
    kvm_init_mmu_notifier -> mmu_notifier_register
    mmu_notifier_register [label="mmu_notifier_register()"]
    kvm_coalesced_mmio_init [label="int kvm_coalesced_mmio_init (struct kvm *kvm)
virt/kvm/coalesced_mmio.c:110"]
    kvm_coalesced_mmio_init -> alloc_page
    kvm_coalesced_mmio_init -> page_address
    kvm_coalesced_mmio_init -> spin_lock_init
    kvm_coalesced_mmio_init -> INIT_LIST_HEAD
    alloc_page [label="alloc_page()"]
    kvm_create_vm_debugfs [label="int kvm_create_vm_debugfs (struct kvm *kvm, const char *fdname)
virt/kvm/kvm_main.c:1045"]
    kvm_create_vm_debugfs -> debugfs_initialized
    kvm_create_vm_debugfs -> snprintf
    kvm_create_vm_debugfs -> task_pid_nr
    kvm_create_vm_debugfs -> mutex_lock
    kvm_create_vm_debugfs -> debugfs_lookup
    kvm_create_vm_debugfs -> pr_warn_ratelimited
    kvm_create_vm_debugfs -> dput
    kvm_create_vm_debugfs -> mutex_unlock
    kvm_create_vm_debugfs -> debugfs_create_dir
    kvm_create_vm_debugfs -> IS_ERR
    kvm_create_vm_debugfs -> kcalloc
    kvm_create_vm_debugfs -> kzalloc
    kvm_create_vm_debugfs -> debugfs_create_file
    kvm_create_vm_debugfs -> kvm_stats_debugfs_mode
    kvm_create_vm_debugfs -> kvm_arch_create_vm_debugfs
    kvm_create_vm_debugfs -> kvm_destroy_vm_debugfs
    debugfs_initialized [label="debugfs_initialized()"]
    debugfs_lookup [label="debugfs_lookup()"]
    pr_warn_ratelimited [label="pr_warn_ratelimited()"]
    dput [label="dput()"]
    kcalloc [label="kcalloc()"]
    kvm_arch_create_vm_debugfs [label="int __weak kvm_arch_create_vm_debugfs (struct kvm *kvm)
virt/kvm/kvm_main.c:1143"]
    kvm_arch_post_init_vm [label="int __weak kvm_arch_post_init_vm (struct kvm *kvm)
virt/kvm/kvm_main.c:1124"]
    list_add [label="list_add()"]
    preempt_notifier_inc [label="preempt_notifier_inc()"]
    kvm_init_pm_notifier [label="void kvm_init_pm_notifier (struct kvm *kvm)
virt/kvm/kvm_main.c:967"]
    kvm_init_pm_notifier -> kvm_pm_notifier_call
    kvm_init_pm_notifier -> register_pm_notifier
    kvm_pm_notifier_call [label="int kvm_pm_notifier_call (struct notifier_block *bl, unsigned long state, void *unused)
virt/kvm/kvm_main.c:945"]
    kvm_pm_notifier_call -> container_of
    kvm_pm_notifier_call -> kvm_arch_pm_notifier
    kvm_arch_pm_notifier [label="kvm_arch_pm_notifier()"]
    register_pm_notifier [label="register_pm_notifier()"]
    anon_inode_getfile [label="anon_inode_getfile()"]
    fd_install [label="fd_install()"]
    put_unused_fd [label="put_unused_fd()"]
    kvm_vm_ioctl_check_extension_generic [label="int kvm_vm_ioctl_check_extension_generic (struct kvm *kvm, long arg)
virt/kvm/kvm_main.c:4526"]
    kvm_vm_ioctl_check_extension_generic -> kvm_vm_ioctl_check_extension
    kvm_vm_ioctl_check_extension [label="int kvm_vm_ioctl_check_extension (struct kvm *kvm, long ext)
arch/arm64/kvm/arm.c:216"]
    kvm_vm_ioctl_check_extension -> min_t
    kvm_vm_ioctl_check_extension -> num_online_cpus
    kvm_vm_ioctl_check_extension -> kvm_arm_default_max_vcpus
    kvm_vm_ioctl_check_extension -> system_supports_mte
    kvm_vm_ioctl_check_extension -> kvm_arm_pvtime_supported
    kvm_vm_ioctl_check_extension -> cpus_have_final_cap
    kvm_vm_ioctl_check_extension -> get_num_brps
    kvm_vm_ioctl_check_extension -> get_num_wrps
    kvm_vm_ioctl_check_extension -> kvm_arm_support_pmu_v3
    kvm_vm_ioctl_check_extension -> get_kvm_ipa_limit
    kvm_vm_ioctl_check_extension -> system_supports_sve
    kvm_vm_ioctl_check_extension -> system_has_full_ptr_auth
    kvm_vm_ioctl_check_extension -> kvm_supported_block_sizes
    kvm_vm_ioctl_check_extension -> BIT
    min_t [label="min_t()"]
    num_online_cpus [label="num_online_cpus()"]
    system_supports_mte [label="system_supports_mte()"]
    kvm_arm_pvtime_supported [label="bool kvm_arm_pvtime_supported (void)
arch/arm64/kvm/pvtime.c:70"]
    kvm_arm_pvtime_supported -> sched_info_on
    sched_info_on [label="sched_info_on()"]
    get_num_brps [label="get_num_brps()"]
    get_num_wrps [label="get_num_wrps()"]
    system_has_full_ptr_auth [label="system_has_full_ptr_auth()"]
    kvm_supported_block_sizes [label="kvm_supported_block_sizes()"]
    kvm_arch_dev_ioctl [label="long kvm_arch_dev_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
arch/arm64/kvm/arm.c:331"]
    kvm_device_from_filp [label="struct kvm_device *kvm_device_from_filp (struct file *filp)
virt/kvm/kvm_main.c:4435"]
    kvm_device_ioctl [label="long kvm_device_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:4389"]
    kvm_device_ioctl -> kvm_device_ioctl_attr
    kvm_device_ioctl_attr [label="int kvm_device_ioctl_attr (struct kvm_device *dev, int (*accessor) (struct kvm_device *dev, struct kvm_device_attr *attr), unsigned long arg)
virt/kvm/kvm_main.c:4373"]
    kvm_device_ioctl_attr -> copy_from_user
    copy_from_user [label="copy_from_user()"]
    kvm_device_mmap [label="int kvm_device_mmap (struct file *filp, struct vm_area_struct *vma)
virt/kvm/kvm_main.c:4363"]
    kvm_device_release [label="int kvm_device_release (struct inode *inode, struct file *filp)
virt/kvm/kvm_main.c:4412"]
    kvm_device_release -> mutex_lock
    kvm_device_release -> list_del
    kvm_device_release -> mutex_unlock
    kvm_device_release -> kvm_put_kvm
    kvm_exit [label="void kvm_exit (void)
virt/kvm/kvm_main.c:6139"]
    kvm_exit -> misc_deregister
    kvm_exit -> debugfs_remove_recursive
    kvm_exit -> for_each_possible_cpu
    kvm_exit -> free_cpumask_var
    kvm_exit -> per_cpu
    kvm_exit -> kmem_cache_destroy
    kvm_exit -> kvm_vfio_ops_exit
    kvm_exit -> kvm_async_pf_deinit
    kvm_exit -> unregister_syscore_ops
    kvm_exit -> cpuhp_remove_state_nocalls
    kvm_exit -> kvm_irqfd_exit
    misc_deregister [label="misc_deregister()"]
    kvm_get_dirty_log [label="int kvm_get_dirty_log (struct kvm *kvm, struct kvm_dirty_log *log, int *is_dirty, struct kvm_memory_slot **memslot)
virt/kvm/kvm_main.c:2075"]
    kvm_get_dirty_log -> kvm_use_dirty_bitmap
    kvm_get_dirty_log -> id_to_memslot
    kvm_get_dirty_log -> kvm_arch_sync_dirty_log
    kvm_get_dirty_log -> kvm_dirty_bitmap_bytes
    kvm_get_dirty_log -> copy_to_user
    kvm_use_dirty_bitmap [label="bool kvm_use_dirty_bitmap (struct kvm *kvm)
virt/kvm/dirty_ring.c:24"]
    kvm_use_dirty_bitmap -> lockdep_assert_held
    lockdep_assert_held [label="lockdep_assert_held()"]
    id_to_memslot [label="id_to_memslot()"]
    kvm_arch_sync_dirty_log [label="void kvm_arch_sync_dirty_log (struct kvm *kvm, struct kvm_memory_slot *memslot)
arch/arm64/kvm/arm.c:1640"]
    kvm_dirty_bitmap_bytes [label="kvm_dirty_bitmap_bytes()"]
    copy_to_user [label="copy_to_user()"]
    kvm_get_kimage_voffset [label="void kvm_get_kimage_voffset (struct alt_instr *alt, __le32 *origptr, __le32 *updptr, int nr_inst)
arch/arm64/kvm/va_layout.c:287"]
    kvm_get_kimage_voffset -> generate_mov_q
    kvm_gfn_to_hva_cache_init [label="int kvm_gfn_to_hva_cache_init (struct kvm *kvm, struct gfn_to_hva_cache *ghc, gpa_t gpa, unsigned long len)
virt/kvm/kvm_main.c:3240"]
    kvm_gfn_to_hva_cache_init -> kvm_memslots
    kvm_gpc_activate [label="int kvm_gpc_activate (struct gfn_to_pfn_cache *gpc, gpa_t gpa, unsigned long len)
virt/kvm/pfncache.c:357"]
    kvm_gpc_activate -> KVM_BUG_ON
    kvm_gpc_activate -> spin_lock
    kvm_gpc_activate -> list_add
    kvm_gpc_activate -> spin_unlock
    kvm_gpc_activate -> write_lock_irq
    kvm_gpc_activate -> write_unlock_irq
    KVM_BUG_ON [label="KVM_BUG_ON()"]
    write_lock_irq [label="write_lock_irq()"]
    write_unlock_irq [label="write_unlock_irq()"]
    kvm_gpc_check [label="bool kvm_gpc_check (struct gfn_to_pfn_cache *gpc, unsigned long len)
virt/kvm/pfncache.c:79"]
    kvm_gpc_check -> kvm_memslots
    kvm_gpc_check -> kvm_is_error_hva
    kvm_gpc_deactivate [label="void kvm_gpc_deactivate (struct gfn_to_pfn_cache *gpc)
virt/kvm/pfncache.c:382"]
    kvm_gpc_deactivate -> write_lock_irq
    kvm_gpc_deactivate -> offset_in_page
    kvm_gpc_deactivate -> write_unlock_irq
    kvm_gpc_deactivate -> spin_lock
    kvm_gpc_deactivate -> list_del
    kvm_gpc_deactivate -> spin_unlock
    kvm_gpc_deactivate -> gpc_unmap_khva
    gpc_unmap_khva [label="void gpc_unmap_khva (kvm_pfn_t pfn, void *khva)
virt/kvm/pfncache.c:99"]
    gpc_unmap_khva -> is_error_noslot_pfn
    gpc_unmap_khva -> pfn_valid
    gpc_unmap_khva -> kunmap
    gpc_unmap_khva -> pfn_to_page
    gpc_unmap_khva -> memunmap
    kunmap [label="kunmap()"]
    memunmap [label="memunmap()"]
    kvm_gpc_init [label="void kvm_gpc_init (struct gfn_to_pfn_cache *gpc, struct kvm *kvm, struct kvm_vcpu *vcpu, enum pfn_cache_usage usage)
virt/kvm/pfncache.c:340"]
    kvm_gpc_init -> WARN_ON_ONCE
    kvm_gpc_init -> rwlock_init
    kvm_gpc_init -> mutex_init
    rwlock_init [label="rwlock_init()"]
    kvm_gpc_refresh [label="int kvm_gpc_refresh (struct gfn_to_pfn_cache *gpc, unsigned long len)
virt/kvm/pfncache.c:334"]
    kvm_guest_get_ip [label="unsigned long kvm_guest_get_ip (void)
virt/kvm/kvm_main.c:6020"]
    kvm_guest_get_ip -> kvm_get_running_vcpu
    kvm_guest_get_ip -> WARN_ON_ONCE
    kvm_guest_get_ip -> kvm_arch_pmi_in_guest
    kvm_guest_get_ip -> kvm_arch_vcpu_get_ip
    kvm_arch_pmi_in_guest [label="kvm_arch_pmi_in_guest()"]
    kvm_arch_vcpu_get_ip [label="unsigned long kvm_arch_vcpu_get_ip (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:573"]
    kvm_arch_vcpu_get_ip -> vcpu_pc
    kvm_guest_state [label="unsigned int kvm_guest_state (void)
virt/kvm/kvm_main.c:6005"]
    kvm_guest_state -> kvm_get_running_vcpu
    kvm_guest_state -> kvm_arch_pmi_in_guest
    kvm_guest_state -> kvm_arch_vcpu_in_kernel
    kvm_arch_vcpu_in_kernel [label="bool kvm_arch_vcpu_in_kernel (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:567"]
    kvm_arch_vcpu_in_kernel -> vcpu_mode_priv
    kvm_handle_cp10_id [label="int kvm_handle_cp10_id (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3125"]
    kvm_handle_cp10_id -> kvm_vcpu_sys_get_rt
    kvm_handle_cp10_id -> kvm_vcpu_get_esr
    kvm_handle_cp10_id -> kvm_esr_cp10_id_to_sys64
    kvm_handle_cp10_id -> kvm_inject_undefined
    kvm_handle_cp10_id -> emulate_sys_reg
    kvm_handle_cp10_id -> vcpu_set_reg
    kvm_esr_cp10_id_to_sys64 [label="bool kvm_esr_cp10_id_to_sys64 (u64 esr, struct sys_reg_params *params)
arch/arm64/kvm/sys_regs.c:3077"]
    kvm_esr_cp10_id_to_sys64 -> bool
    kvm_esr_cp10_id_to_sys64 -> kvm_pr_unimpl
    kvm_pr_unimpl [label="kvm_pr_unimpl()"]
    emulate_sys_reg [label="bool emulate_sys_reg (struct kvm_vcpu *vcpu, struct sys_reg_params *params)
arch/arm64/kvm/sys_regs.c:3261"]
    emulate_sys_reg -> find_reg
    emulate_sys_reg -> ARRAY_SIZE
    emulate_sys_reg -> likely
    emulate_sys_reg -> perform_access
    emulate_sys_reg -> is_imp_def_sys_reg
    emulate_sys_reg -> kvm_inject_undefined
    emulate_sys_reg -> print_sys_reg_msg
    emulate_sys_reg -> vcpu_pc
    emulate_sys_reg -> vcpu_cpsr
    perform_access [label="void perform_access (struct kvm_vcpu *vcpu, struct sys_reg_params *params, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:2940"]
    perform_access -> trace_kvm_sys_access
    perform_access -> vcpu_pc
    perform_access -> sysreg_hidden
    perform_access -> kvm_inject_undefined
    perform_access -> BUG_ON
    perform_access -> likely
    perform_access -> kvm_incr_pc
    trace_kvm_sys_access [label="trace_kvm_sys_access()"]
    sysreg_hidden [label="sysreg_hidden()"]
    is_imp_def_sys_reg [label="bool is_imp_def_sys_reg (struct sys_reg_params *params)
arch/arm64/kvm/sys_regs.c:3248"]
    kvm_handle_cp14_32 [label="int kvm_handle_cp14_32 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3239"]
    kvm_handle_cp14_32 -> esr_cp1x_32_to_params
    kvm_handle_cp14_32 -> kvm_vcpu_get_esr
    kvm_handle_cp14_32 -> kvm_handle_cp_32
    kvm_handle_cp14_32 -> ARRAY_SIZE
    esr_cp1x_32_to_params [label="esr_cp1x_32_to_params()"]
    kvm_handle_cp_32 [label="int kvm_handle_cp_32 (struct kvm_vcpu *vcpu, struct sys_reg_params *params, const struct sys_reg_desc *global, size_t nr_global)
arch/arm64/kvm/sys_regs.c:3192"]
    kvm_handle_cp_32 -> kvm_vcpu_sys_get_rt
    kvm_handle_cp_32 -> vcpu_get_reg
    kvm_handle_cp_32 -> emulate_cp
    kvm_handle_cp_32 -> vcpu_set_reg
    kvm_handle_cp_32 -> unhandled_cp_access
    emulate_cp [label="bool emulate_cp (struct kvm_vcpu *vcpu, struct sys_reg_params *params, const struct sys_reg_desc *table, size_t num)
arch/arm64/kvm/sys_regs.c:2974"]
    emulate_cp -> find_reg
    emulate_cp -> perform_access
    unhandled_cp_access [label="void unhandled_cp_access (struct kvm_vcpu *vcpu, struct sys_reg_params *params)
arch/arm64/kvm/sys_regs.c:2995"]
    unhandled_cp_access -> kvm_vcpu_trap_get_class
    unhandled_cp_access -> WARN_ON
    unhandled_cp_access -> print_sys_reg_msg
    unhandled_cp_access -> vcpu_pc
    unhandled_cp_access -> vcpu_cpsr
    unhandled_cp_access -> kvm_inject_undefined
    kvm_vcpu_trap_get_class [label="kvm_vcpu_trap_get_class()"]
    kvm_handle_cp14_64 [label="int kvm_handle_cp14_64 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3234"]
    kvm_handle_cp14_64 -> kvm_handle_cp_64
    kvm_handle_cp14_64 -> ARRAY_SIZE
    kvm_handle_cp_64 [label="int kvm_handle_cp_64 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *global, size_t nr_global)
arch/arm64/kvm/sys_regs.c:3025"]
    kvm_handle_cp_64 -> kvm_vcpu_get_esr
    kvm_handle_cp_64 -> kvm_vcpu_sys_get_rt
    kvm_handle_cp_64 -> vcpu_get_reg
    kvm_handle_cp_64 -> emulate_cp
    kvm_handle_cp_64 -> vcpu_set_reg
    kvm_handle_cp_64 -> lower_32_bits
    kvm_handle_cp_64 -> upper_32_bits
    kvm_handle_cp_64 -> unhandled_cp_access
    kvm_handle_cp14_load_store [label="int kvm_handle_cp14_load_store (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:2934"]
    kvm_handle_cp14_load_store -> kvm_inject_undefined
    kvm_handle_cp15_32 [label="int kvm_handle_cp15_32 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3216"]
    kvm_handle_cp15_32 -> esr_cp1x_32_to_params
    kvm_handle_cp15_32 -> kvm_vcpu_get_esr
    kvm_handle_cp15_32 -> kvm_emulate_cp15_id_reg
    kvm_handle_cp15_32 -> kvm_handle_cp_32
    kvm_handle_cp15_32 -> ARRAY_SIZE
    kvm_emulate_cp15_id_reg [label="int kvm_emulate_cp15_id_reg (struct kvm_vcpu *vcpu, struct sys_reg_params *params)
arch/arm64/kvm/sys_regs.c:3160"]
    kvm_emulate_cp15_id_reg -> kvm_vcpu_sys_get_rt
    kvm_emulate_cp15_id_reg -> unhandled_cp_access
    kvm_emulate_cp15_id_reg -> emulate_sys_reg
    kvm_emulate_cp15_id_reg -> vcpu_set_reg
    kvm_handle_cp15_64 [label="int kvm_handle_cp15_64 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3211"]
    kvm_handle_cp15_64 -> kvm_handle_cp_64
    kvm_handle_cp15_64 -> ARRAY_SIZE
    kvm_handle_eret [label="int kvm_handle_eret (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:220"]
    kvm_handle_eret -> kvm_vcpu_get_esr
    kvm_handle_eret -> kvm_handle_ptrauth
    kvm_handle_eret -> is_hyp_ctxt
    kvm_handle_eret -> kvm_emulate_nested_eret
    kvm_handle_eret -> kvm_inject_nested_sync
    kvm_handle_ptrauth [label="int kvm_handle_ptrauth (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:214"]
    kvm_handle_ptrauth -> kvm_inject_undefined
    kvm_emulate_nested_eret [label="void kvm_emulate_nested_eret (struct kvm_vcpu *vcpu)
arch/arm64/kvm/emulate-nested.c:1969"]
    kvm_emulate_nested_eret -> bool
    kvm_emulate_nested_eret -> vcpu_read_sys_reg
    kvm_emulate_nested_eret -> kvm_check_illegal_exception_return
    kvm_emulate_nested_eret -> vcpu_el2_e2h_is_set
    kvm_emulate_nested_eret -> vcpu_el2_tge_is_set
    kvm_emulate_nested_eret -> vcpu_pc
    kvm_emulate_nested_eret -> vcpu_cpsr
    kvm_emulate_nested_eret -> trace_kvm_nested_eret
    kvm_emulate_nested_eret -> preempt_disable
    kvm_emulate_nested_eret -> kvm_arch_vcpu_put
    kvm_emulate_nested_eret -> kvm_arch_vcpu_load
    kvm_emulate_nested_eret -> smp_processor_id
    kvm_emulate_nested_eret -> preempt_enable
    kvm_check_illegal_exception_return [label="u64 kvm_check_illegal_exception_return (struct kvm_vcpu *vcpu, u64 spsr)
arch/arm64/kvm/emulate-nested.c:1936"]
    kvm_check_illegal_exception_return -> BIT
    kvm_check_illegal_exception_return -> vcpu_el2_tge_is_set
    kvm_check_illegal_exception_return -> vcpu_cpsr
    trace_kvm_nested_eret [label="trace_kvm_nested_eret()"]
    kvm_handle_guest_abort [label="int kvm_handle_guest_abort (struct kvm_vcpu *vcpu)
arch/arm64/kvm/mmu.c:1619"]
    kvm_handle_guest_abort -> bool
    kvm_handle_guest_abort -> kvm_vcpu_trap_get_fault_type
    kvm_handle_guest_abort -> kvm_vcpu_get_fault_ipa
    kvm_handle_guest_abort -> kvm_vcpu_trap_is_iabt
    kvm_handle_guest_abort -> BIT_ULL
    kvm_handle_guest_abort -> get_kvm_ipa_limit
    kvm_handle_guest_abort -> kvm_inject_size_fault
    kvm_handle_guest_abort -> kvm_vcpu_get_hfar
    kvm_handle_guest_abort -> GENMASK
    kvm_handle_guest_abort -> kvm_inject_pabt
    kvm_handle_guest_abort -> kvm_inject_dabt
    kvm_handle_guest_abort -> kvm_vcpu_abt_issea
    kvm_handle_guest_abort -> kvm_handle_guest_sea
    kvm_handle_guest_abort -> kvm_vcpu_get_esr
    kvm_handle_guest_abort -> kvm_inject_vabt
    kvm_handle_guest_abort -> trace_kvm_guest_fault
    kvm_handle_guest_abort -> vcpu_pc
    kvm_handle_guest_abort -> kvm_err
    kvm_handle_guest_abort -> kvm_vcpu_trap_get_class
    kvm_handle_guest_abort -> kvm_vcpu_trap_get_fault
    kvm_handle_guest_abort -> srcu_read_lock
    kvm_handle_guest_abort -> gfn_to_memslot
    kvm_handle_guest_abort -> gfn_to_hva_memslot_prot
    kvm_handle_guest_abort -> kvm_is_write_fault
    kvm_handle_guest_abort -> kvm_is_error_hva
    kvm_handle_guest_abort -> kvm_vcpu_abt_iss1tw
    kvm_handle_guest_abort -> kvm_vcpu_dabt_is_cm
    kvm_handle_guest_abort -> kvm_incr_pc
    kvm_handle_guest_abort -> io_mem_abort
    kvm_handle_guest_abort -> VM_BUG_ON
    kvm_handle_guest_abort -> kvm_phys_size
    kvm_handle_guest_abort -> handle_access_fault
    kvm_handle_guest_abort -> user_mem_abort
    kvm_handle_guest_abort -> srcu_read_unlock
    kvm_vcpu_trap_get_fault_type [label="kvm_vcpu_trap_get_fault_type()"]
    kvm_vcpu_get_fault_ipa [label="kvm_vcpu_get_fault_ipa()"]
    kvm_vcpu_trap_is_iabt [label="kvm_vcpu_trap_is_iabt()"]
    kvm_inject_size_fault [label="void kvm_inject_size_fault (struct kvm_vcpu *vcpu)
arch/arm64/kvm/inject_fault.c:190"]
    kvm_inject_size_fault -> kvm_vcpu_get_fault_ipa
    kvm_inject_size_fault -> kvm_vcpu_get_hfar
    kvm_inject_size_fault -> GENMASK
    kvm_inject_size_fault -> kvm_vcpu_trap_is_iabt
    kvm_inject_size_fault -> kvm_inject_pabt
    kvm_inject_size_fault -> kvm_inject_dabt
    kvm_inject_size_fault -> vcpu_el1_is_32bit
    kvm_inject_size_fault -> vcpu_read_sys_reg
    kvm_inject_size_fault -> GENMASK_ULL
    kvm_inject_size_fault -> vcpu_write_sys_reg
    kvm_vcpu_get_hfar [label="kvm_vcpu_get_hfar()"]
    kvm_inject_pabt [label="void kvm_inject_pabt (struct kvm_vcpu *vcpu, unsigned long addr)
arch/arm64/kvm/inject_fault.c:182"]
    kvm_inject_pabt -> vcpu_el1_is_32bit
    kvm_inject_pabt -> inject_abt32
    kvm_inject_pabt -> inject_abt64
    inject_abt32 [label="void inject_abt32 (struct kvm_vcpu *vcpu, bool is_pabt, u32 addr)
arch/arm64/kvm/inject_fault.c:128"]
    inject_abt32 -> vcpu_read_sys_reg
    inject_abt32 -> kvm_pend_exception
    inject_abt32 -> GENMASK
    inject_abt32 -> vcpu_write_sys_reg
    inject_abt64 [label="void inject_abt64 (struct kvm_vcpu *vcpu, bool is_iabt, unsigned long addr)
arch/arm64/kvm/inject_fault.c:57"]
    inject_abt64 -> vcpu_cpsr
    inject_abt64 -> bool
    inject_abt64 -> vcpu_mode_is_32bit
    inject_abt64 -> pend_sync_exception
    inject_abt64 -> kvm_vcpu_trap_il_is32bit
    inject_abt64 -> match_target_el
    inject_abt64 -> unpack_vcpu_flag
    inject_abt64 -> vcpu_write_sys_reg
    kvm_inject_dabt [label="void kvm_inject_dabt (struct kvm_vcpu *vcpu, unsigned long addr)
arch/arm64/kvm/inject_fault.c:166"]
    kvm_inject_dabt -> vcpu_el1_is_32bit
    kvm_inject_dabt -> inject_abt32
    kvm_inject_dabt -> inject_abt64
    kvm_vcpu_abt_issea [label="kvm_vcpu_abt_issea()"]
    kvm_handle_guest_sea [label="kvm_handle_guest_sea()"]
    kvm_inject_vabt [label="void kvm_inject_vabt (struct kvm_vcpu *vcpu)
arch/arm64/kvm/inject_fault.c:251"]
    kvm_inject_vabt -> kvm_set_sei_esr
    kvm_set_sei_esr [label="void kvm_set_sei_esr (struct kvm_vcpu *vcpu, u64 esr)
arch/arm64/kvm/inject_fault.c:233"]
    kvm_set_sei_esr -> vcpu_set_vsesr
    kvm_set_sei_esr -> vcpu_hcr
    vcpu_set_vsesr [label="vcpu_set_vsesr()"]
    trace_kvm_guest_fault [label="trace_kvm_guest_fault()"]
    kvm_vcpu_trap_get_fault [label="kvm_vcpu_trap_get_fault()"]
    kvm_is_write_fault [label="kvm_is_write_fault()"]
    kvm_vcpu_abt_iss1tw [label="kvm_vcpu_abt_iss1tw()"]
    kvm_vcpu_dabt_is_cm [label="kvm_vcpu_dabt_is_cm()"]
    io_mem_abort [label="int io_mem_abort (struct kvm_vcpu *vcpu, phys_addr_t fault_ipa)
arch/arm64/kvm/mmio.c:123"]
    io_mem_abort -> bool
    io_mem_abort -> kvm_vcpu_dabt_isvalid
    io_mem_abort -> trace_kvm_mmio_nisv
    io_mem_abort -> vcpu_pc
    io_mem_abort -> kvm_vcpu_get_esr
    io_mem_abort -> kvm_vcpu_get_hfar
    io_mem_abort -> test_bit
    io_mem_abort -> kvm_vcpu_dabt_iss_nisv_sanitized
    io_mem_abort -> kvm_vcpu_dabt_iswrite
    io_mem_abort -> kvm_vcpu_dabt_get_as
    io_mem_abort -> kvm_vcpu_dabt_get_rd
    io_mem_abort -> vcpu_data_guest_to_host
    io_mem_abort -> vcpu_get_reg
    io_mem_abort -> trace_kvm_mmio
    io_mem_abort -> kvm_mmio_write_buf
    io_mem_abort -> kvm_io_bus_write
    io_mem_abort -> kvm_io_bus_read
    io_mem_abort -> memcpy
    io_mem_abort -> kvm_handle_mmio_return
    kvm_vcpu_dabt_isvalid [label="kvm_vcpu_dabt_isvalid()"]
    trace_kvm_mmio_nisv [label="trace_kvm_mmio_nisv()"]
    kvm_vcpu_dabt_iss_nisv_sanitized [label="kvm_vcpu_dabt_iss_nisv_sanitized()"]
    kvm_vcpu_dabt_iswrite [label="kvm_vcpu_dabt_iswrite()"]
    kvm_vcpu_dabt_get_as [label="kvm_vcpu_dabt_get_as()"]
    kvm_vcpu_dabt_get_rd [label="kvm_vcpu_dabt_get_rd()"]
    vcpu_data_guest_to_host [label="vcpu_data_guest_to_host()"]
    trace_kvm_mmio [label="trace_kvm_mmio()"]
    kvm_mmio_write_buf [label="void kvm_mmio_write_buf (void *buf, unsigned int len, unsigned long data)
arch/arm64/kvm/mmio.c:13"]
    kvm_mmio_write_buf -> memcpy
    kvm_io_bus_write [label="int kvm_io_bus_write (struct kvm_vcpu *vcpu, enum kvm_bus bus_idx, gpa_t addr, int len, const void *val)
virt/kvm/kvm_main.c:5453"]
    kvm_io_bus_write -> srcu_dereference
    srcu_dereference [label="srcu_dereference()"]
    kvm_io_bus_read [label="int kvm_io_bus_read (struct kvm_vcpu *vcpu, enum kvm_bus bus_idx, gpa_t addr, int len, void *val)
virt/kvm/kvm_main.c:5524"]
    kvm_io_bus_read -> srcu_dereference
    kvm_handle_mmio_return [label="int kvm_handle_mmio_return (struct kvm_vcpu *vcpu)
arch/arm64/kvm/mmio.c:81"]
    kvm_handle_mmio_return -> unlikely
    kvm_handle_mmio_return -> kvm_vcpu_dabt_iswrite
    kvm_handle_mmio_return -> kvm_vcpu_dabt_get_as
    kvm_handle_mmio_return -> kvm_mmio_read_buf
    kvm_handle_mmio_return -> kvm_vcpu_dabt_issext
    kvm_handle_mmio_return -> kvm_vcpu_dabt_issf
    kvm_handle_mmio_return -> trace_kvm_mmio
    kvm_handle_mmio_return -> vcpu_data_host_to_guest
    kvm_handle_mmio_return -> vcpu_set_reg
    kvm_handle_mmio_return -> kvm_vcpu_dabt_get_rd
    kvm_handle_mmio_return -> kvm_incr_pc
    kvm_mmio_read_buf [label="unsigned long kvm_mmio_read_buf (const void *buf, unsigned int len)
arch/arm64/kvm/mmio.c:45"]
    kvm_mmio_read_buf -> memcpy
    kvm_vcpu_dabt_issext [label="kvm_vcpu_dabt_issext()"]
    kvm_vcpu_dabt_issf [label="kvm_vcpu_dabt_issf()"]
    vcpu_data_host_to_guest [label="vcpu_data_host_to_guest()"]
    VM_BUG_ON [label="VM_BUG_ON()"]
    kvm_phys_size [label="kvm_phys_size()"]
    handle_access_fault [label="void handle_access_fault (struct kvm_vcpu *vcpu, phys_addr_t fault_ipa)
arch/arm64/kvm/mmu.c:1592"]
    handle_access_fault -> trace_kvm_access_fault
    handle_access_fault -> read_lock
    handle_access_fault -> kvm_pgtable_stage2_mkyoung
    handle_access_fault -> read_unlock
    handle_access_fault -> kvm_pte_valid
    handle_access_fault -> kvm_set_pfn_accessed
    handle_access_fault -> kvm_pte_to_pfn
    trace_kvm_access_fault [label="trace_kvm_access_fault()"]
    read_lock [label="read_lock()"]
    kvm_pgtable_stage2_mkyoung [label="kvm_pgtable_stage2_mkyoung()"]
    read_unlock [label="read_unlock()"]
    kvm_pte_valid [label="kvm_pte_valid()"]
    kvm_set_pfn_accessed [label="void kvm_set_pfn_accessed (kvm_pfn_t pfn)
virt/kvm/kvm_main.c:3003"]
    kvm_set_pfn_accessed -> WARN_ON
    kvm_set_pfn_accessed -> is_error_noslot_pfn
    kvm_set_pfn_accessed -> pfn_valid
    kvm_set_pfn_accessed -> kvm_set_page_accessed
    kvm_set_pfn_accessed -> pfn_to_page
    kvm_set_page_accessed [label="void kvm_set_page_accessed (struct page *page)
virt/kvm/kvm_main.c:2934"]
    kvm_set_page_accessed -> kvm_is_ad_tracked_page
    kvm_set_page_accessed -> mark_page_accessed
    kvm_is_ad_tracked_page [label="bool kvm_is_ad_tracked_page (struct page *page)
virt/kvm/kvm_main.c:2919"]
    kvm_is_ad_tracked_page -> PageReserved
    mark_page_accessed [label="mark_page_accessed()"]
    kvm_pte_to_pfn [label="kvm_pte_to_pfn()"]
    user_mem_abort [label="int user_mem_abort (struct kvm_vcpu *vcpu, phys_addr_t fault_ipa, struct kvm_memory_slot *memslot, unsigned long hva, unsigned long fault_status)
arch/arm64/kvm/mmu.c:1375"]
    user_mem_abort -> bool
    user_mem_abort -> memslot_is_logging
    user_mem_abort -> kvm_vcpu_trap_get_fault_level
    user_mem_abort -> ARM64_HW_PGTABLE_LEVEL_SHIFT
    user_mem_abort -> kvm_is_write_fault
    user_mem_abort -> kvm_vcpu_trap_is_exec_fault
    user_mem_abort -> VM_BUG_ON
    user_mem_abort -> kvm_err
    user_mem_abort -> kvm_mmu_topup_memory_cache
    user_mem_abort -> kvm_mmu_cache_min_pages
    user_mem_abort -> mmap_read_lock
    user_mem_abort -> vma_lookup
    user_mem_abort -> unlikely
    user_mem_abort -> mmap_read_unlock
    user_mem_abort -> get_vma_page_shift
    user_mem_abort -> fault_supports_stage2_huge_mapping
    user_mem_abort -> WARN_ONCE
    user_mem_abort -> kvm_vma_mte_allowed
    user_mem_abort -> kvm_send_hwpoison_signal
    user_mem_abort -> is_error_noslot_pfn
    user_mem_abort -> kvm_is_device_pfn
    user_mem_abort -> read_lock
    user_mem_abort -> mmu_invalidate_retry
    user_mem_abort -> transparent_hugepage_adjust
    user_mem_abort -> kvm_has_mte
    user_mem_abort -> sanitise_mte_tags
    user_mem_abort -> cpus_have_final_cap
    user_mem_abort -> kvm_pgtable_stage2_relax_perms
    user_mem_abort -> kvm_pgtable_stage2_map
    user_mem_abort -> kvm_set_pfn_dirty
    user_mem_abort -> mark_page_dirty_in_slot
    user_mem_abort -> read_unlock
    user_mem_abort -> kvm_release_pfn_clean
    memslot_is_logging [label="bool memslot_is_logging (struct kvm_memory_slot *memslot)
arch/arm64/kvm/mmu.c:158"]
    kvm_vcpu_trap_get_fault_level [label="kvm_vcpu_trap_get_fault_level()"]
    ARM64_HW_PGTABLE_LEVEL_SHIFT [label="ARM64_HW_PGTABLE_LEVEL_SHIFT()"]
    kvm_vcpu_trap_is_exec_fault [label="kvm_vcpu_trap_is_exec_fault()"]
    kvm_mmu_topup_memory_cache [label="int kvm_mmu_topup_memory_cache (struct kvm_mmu_memory_cache *mc, int min)
virt/kvm/kvm_main.c:444"]
    kvm_mmu_cache_min_pages [label="kvm_mmu_cache_min_pages()"]
    mmap_read_lock [label="mmap_read_lock()"]
    vma_lookup [label="vma_lookup()"]
    mmap_read_unlock [label="mmap_read_unlock()"]
    get_vma_page_shift [label="int get_vma_page_shift (struct vm_area_struct *vma, unsigned long hva)
arch/arm64/kvm/mmu.c:1313"]
    get_vma_page_shift -> is_vm_hugetlb_page
    get_vma_page_shift -> huge_page_shift
    get_vma_page_shift -> hstate_vma
    get_vma_page_shift -> VM_BUG_ON
    get_vma_page_shift -> ALIGN_DOWN
    get_vma_page_shift -> ALIGN
    is_vm_hugetlb_page [label="is_vm_hugetlb_page()"]
    huge_page_shift [label="huge_page_shift()"]
    hstate_vma [label="hstate_vma()"]
    fault_supports_stage2_huge_mapping [label="bool fault_supports_stage2_huge_mapping (struct kvm_memory_slot *memslot, unsigned long hva, unsigned long map_size)
arch/arm64/kvm/mmu.c:1212"]
    kvm_vma_mte_allowed [label="bool kvm_vma_mte_allowed (struct vm_area_struct *vma)
arch/arm64/kvm/mmu.c:1370"]
    kvm_send_hwpoison_signal [label="void kvm_send_hwpoison_signal (unsigned long address, short lsb)
arch/arm64/kvm/mmu.c:1207"]
    kvm_send_hwpoison_signal -> send_sig_mceerr
    send_sig_mceerr [label="send_sig_mceerr()"]
    kvm_is_device_pfn [label="bool kvm_is_device_pfn (unsigned long pfn)
arch/arm64/kvm/mmu.c:183"]
    kvm_is_device_pfn -> pfn_is_map_memory
    pfn_is_map_memory [label="pfn_is_map_memory()"]
    mmu_invalidate_retry [label="mmu_invalidate_retry()"]
    transparent_hugepage_adjust [label="long transparent_hugepage_adjust (struct kvm *kvm, struct kvm_memory_slot *memslot, unsigned long hva, kvm_pfn_t *pfnp, phys_addr_t *ipap)
arch/arm64/kvm/mmu.c:1282"]
    transparent_hugepage_adjust -> fault_supports_stage2_huge_mapping
    transparent_hugepage_adjust -> get_user_mapping_size
    get_user_mapping_size [label="int get_user_mapping_size (struct kvm *kvm, u64 addr)
arch/arm64/kvm/mmu.c:802"]
    get_user_mapping_size -> local_irq_save
    get_user_mapping_size -> kvm_pgtable_get_leaf
    get_user_mapping_size -> local_irq_restore
    get_user_mapping_size -> WARN_ON
    get_user_mapping_size -> kvm_pte_valid
    get_user_mapping_size -> BIT
    get_user_mapping_size -> ARM64_HW_PGTABLE_LEVEL_SHIFT
    kvm_pgtable_get_leaf [label="kvm_pgtable_get_leaf()"]
    sanitise_mte_tags [label="void sanitise_mte_tags (struct kvm *kvm, kvm_pfn_t pfn, unsigned long size)
arch/arm64/kvm/mmu.c:1353"]
    sanitise_mte_tags -> pfn_to_page
    sanitise_mte_tags -> kvm_has_mte
    sanitise_mte_tags -> try_page_mte_tagging
    sanitise_mte_tags -> mte_clear_page_tags
    sanitise_mte_tags -> page_address
    sanitise_mte_tags -> set_page_mte_tagged
    try_page_mte_tagging [label="try_page_mte_tagging()"]
    mte_clear_page_tags [label="mte_clear_page_tags()"]
    set_page_mte_tagged [label="set_page_mte_tagged()"]
    kvm_pgtable_stage2_relax_perms [label="kvm_pgtable_stage2_relax_perms()"]
    kvm_pgtable_stage2_map [label="kvm_pgtable_stage2_map()"]
    kvm_set_pfn_dirty [label="void kvm_set_pfn_dirty (kvm_pfn_t pfn)
virt/kvm/kvm_main.c:2993"]
    kvm_set_pfn_dirty -> WARN_ON
    kvm_set_pfn_dirty -> is_error_noslot_pfn
    kvm_set_pfn_dirty -> pfn_valid
    kvm_set_pfn_dirty -> kvm_set_page_dirty
    kvm_set_pfn_dirty -> pfn_to_page
    kvm_set_page_dirty [label="void kvm_set_page_dirty (struct page *page)
virt/kvm/kvm_main.c:2928"]
    kvm_set_page_dirty -> kvm_is_ad_tracked_page
    kvm_set_page_dirty -> SetPageDirty
    SetPageDirty [label="SetPageDirty()"]
    mark_page_dirty_in_slot [label="void mark_page_dirty_in_slot (struct kvm *kvm, const struct kvm_memory_slot *memslot, gfn_t gfn)
virt/kvm/kvm_main.c:3343"]
    mark_page_dirty_in_slot -> kvm_get_running_vcpu
    mark_page_dirty_in_slot -> WARN_ON_ONCE
    mark_page_dirty_in_slot -> kvm_arch_allow_write_without_running_vcpu
    mark_page_dirty_in_slot -> kvm_slot_dirty_track_enabled
    mark_page_dirty_in_slot -> kvm_dirty_ring_push
    mark_page_dirty_in_slot -> set_bit_le
    kvm_arch_allow_write_without_running_vcpu [label="bool kvm_arch_allow_write_without_running_vcpu (struct kvm *kvm)
virt/kvm/dirty_ring.c:32"]
    kvm_slot_dirty_track_enabled [label="kvm_slot_dirty_track_enabled()"]
    kvm_dirty_ring_push [label="void kvm_dirty_ring_push (struct kvm_vcpu *vcpu, u32 slot, u64 offset)
virt/kvm/dirty_ring.c:169"]
    kvm_dirty_ring_push -> WARN_ON_ONCE
    kvm_dirty_ring_push -> kvm_dirty_ring_full
    kvm_dirty_ring_push -> smp_wmb
    kvm_dirty_ring_push -> kvm_dirty_gfn_set_dirtied
    kvm_dirty_ring_push -> trace_kvm_dirty_ring_push
    kvm_dirty_ring_push -> kvm_dirty_ring_soft_full
    kvm_dirty_ring_push -> kvm_make_request
    kvm_dirty_ring_full [label="bool kvm_dirty_ring_full (struct kvm_dirty_ring *ring)
virt/kvm/dirty_ring.c:48"]
    kvm_dirty_ring_full -> kvm_dirty_ring_used
    kvm_dirty_ring_used [label="u32 kvm_dirty_ring_used (struct kvm_dirty_ring *ring)
virt/kvm/dirty_ring.c:38"]
    kvm_dirty_ring_used -> READ_ONCE
    kvm_dirty_gfn_set_dirtied [label="inline void kvm_dirty_gfn_set_dirtied (struct kvm_dirty_gfn *gfn)
virt/kvm/dirty_ring.c:94"]
    trace_kvm_dirty_ring_push [label="trace_kvm_dirty_ring_push()"]
    kvm_dirty_ring_soft_full [label="bool kvm_dirty_ring_soft_full (struct kvm_dirty_ring *ring)
virt/kvm/dirty_ring.c:43"]
    kvm_dirty_ring_soft_full -> kvm_dirty_ring_used
    set_bit_le [label="set_bit_le()"]
    kvm_release_pfn_clean [label="void kvm_release_pfn_clean (kvm_pfn_t pfn)
virt/kvm/kvm_main.c:2949"]
    kvm_release_pfn_clean -> is_error_noslot_pfn
    kvm_release_pfn_clean -> kvm_pfn_to_refcounted_page
    kvm_release_pfn_clean -> kvm_release_page_clean
    kvm_release_page_clean [label="void kvm_release_page_clean (struct page *page)
virt/kvm/kvm_main.c:2940"]
    kvm_release_page_clean -> WARN_ON
    kvm_release_page_clean -> is_error_page
    kvm_release_page_clean -> kvm_set_page_accessed
    kvm_release_page_clean -> put_page
    is_error_page [label="is_error_page()"]
    put_page [label="put_page()"]
    kvm_handle_guest_debug [label="int kvm_handle_guest_debug (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:166"]
    kvm_handle_guest_debug -> kvm_vcpu_get_esr
    kvm_handle_guest_debug -> lower_32_bits
    kvm_handle_guest_debug -> upper_32_bits
    kvm_handle_guest_debug -> ESR_ELx_EC
    kvm_handle_guest_debug -> vcpu_clear_flag
    kvm_handle_sys_reg [label="int kvm_handle_sys_reg (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3334"]
    kvm_handle_sys_reg -> kvm_vcpu_get_esr
    kvm_handle_sys_reg -> kvm_vcpu_sys_get_rt
    kvm_handle_sys_reg -> trace_kvm_handle_sys_reg
    kvm_handle_sys_reg -> esr_sys64_to_params
    kvm_handle_sys_reg -> vcpu_get_reg
    kvm_handle_sys_reg -> emulate_sys_reg
    kvm_handle_sys_reg -> vcpu_set_reg
    trace_kvm_handle_sys_reg [label="trace_kvm_handle_sys_reg()"]
    esr_sys64_to_params [label="esr_sys64_to_params()"]
    kvm_handle_unknown_ec [label="int kvm_handle_unknown_ec (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:188"]
    kvm_handle_unknown_ec -> kvm_vcpu_get_esr
    kvm_handle_unknown_ec -> kvm_pr_unimpl
    kvm_handle_unknown_ec -> esr_get_class_string
    kvm_handle_unknown_ec -> kvm_inject_undefined
    esr_get_class_string [label="esr_get_class_string()"]
    kvm_handle_wfx [label="int kvm_handle_wfx (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:114"]
    kvm_handle_wfx -> kvm_vcpu_get_esr
    kvm_handle_wfx -> trace_kvm_wfx_arm64
    kvm_handle_wfx -> vcpu_pc
    kvm_handle_wfx -> kvm_arm_timer_get_reg
    kvm_handle_wfx -> vcpu_get_reg
    kvm_handle_wfx -> kvm_vcpu_sys_get_rt
    kvm_handle_wfx -> kvm_vcpu_on_spin
    kvm_handle_wfx -> vcpu_mode_priv
    kvm_handle_wfx -> vcpu_set_flag
    kvm_handle_wfx -> kvm_vcpu_wfi
    kvm_handle_wfx -> kvm_incr_pc
    trace_kvm_wfx_arm64 [label="trace_kvm_wfx_arm64()"]
    kvm_arm_timer_get_reg [label="u64 kvm_arm_timer_get_reg (struct kvm_vcpu *vcpu, u64 regid)
arch/arm64/kvm/arch_timer.c:1108"]
    kvm_arm_timer_get_reg -> kvm_arm_timer_read
    kvm_arm_timer_get_reg -> vcpu_vtimer
    kvm_arm_timer_get_reg -> vcpu_ptimer
    kvm_vcpu_on_spin [label="void kvm_vcpu_on_spin (struct kvm_vcpu *me, bool yield_to_kernel_mode)
virt/kvm/kvm_main.c:3764"]
    kvm_vcpu_on_spin -> kvm_vcpu_set_in_spin_loop
    kvm_vcpu_on_spin -> kvm_for_each_vcpu
    kvm_vcpu_on_spin -> READ_ONCE
    kvm_vcpu_on_spin -> kvm_vcpu_is_blocking
    kvm_vcpu_on_spin -> vcpu_dy_runnable
    kvm_vcpu_on_spin -> kvm_arch_dy_has_pending_interrupt
    kvm_vcpu_on_spin -> kvm_arch_vcpu_in_kernel
    kvm_vcpu_on_spin -> kvm_vcpu_eligible_for_directed_yield
    kvm_vcpu_on_spin -> kvm_vcpu_yield_to
    kvm_vcpu_on_spin -> kvm_vcpu_set_dy_eligible
    kvm_vcpu_set_in_spin_loop [label="kvm_vcpu_set_in_spin_loop()"]
    vcpu_dy_runnable [label="bool vcpu_dy_runnable (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3746"]
    vcpu_dy_runnable -> kvm_arch_dy_runnable
    vcpu_dy_runnable -> list_empty_careful
    kvm_arch_dy_runnable [label="bool __weak kvm_arch_dy_runnable (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3741"]
    kvm_arch_dy_runnable -> kvm_arch_vcpu_runnable
    kvm_arch_dy_has_pending_interrupt [label="bool __weak kvm_arch_dy_has_pending_interrupt (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3759"]
    kvm_vcpu_eligible_for_directed_yield [label="bool kvm_vcpu_eligible_for_directed_yield (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3719"]
    kvm_vcpu_eligible_for_directed_yield -> kvm_vcpu_set_dy_eligible
    kvm_vcpu_set_dy_eligible [label="kvm_vcpu_set_dy_eligible()"]
    kvm_vcpu_yield_to [label="int kvm_vcpu_yield_to (struct kvm_vcpu *target)
virt/kvm/kvm_main.c:3677"]
    kvm_vcpu_yield_to -> rcu_read_lock
    kvm_vcpu_yield_to -> rcu_dereference
    kvm_vcpu_yield_to -> get_pid_task
    kvm_vcpu_yield_to -> rcu_read_unlock
    kvm_vcpu_yield_to -> yield_to
    kvm_vcpu_yield_to -> put_task_struct
    rcu_read_lock [label="rcu_read_lock()"]
    rcu_dereference [label="rcu_dereference()"]
    get_pid_task [label="get_pid_task()"]
    rcu_read_unlock [label="rcu_read_unlock()"]
    yield_to [label="yield_to()"]
    kvm_host_get_page [label="void kvm_host_get_page (void *addr)
arch/arm64/kvm/mmu.c:239"]
    kvm_host_get_page -> get_page
    kvm_host_get_page -> virt_to_page
    get_page [label="get_page()"]
    virt_to_page [label="virt_to_page()"]
    kvm_host_page_count [label="int kvm_host_page_count (void *addr)
arch/arm64/kvm/mmu.c:258"]
    kvm_host_page_count -> page_count
    kvm_host_page_count -> virt_to_page
    kvm_host_page_size [label="unsigned long kvm_host_page_size (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:2393"]
    kvm_host_page_size -> kvm_vcpu_gfn_to_hva_prot
    kvm_host_page_size -> kvm_is_error_hva
    kvm_host_page_size -> mmap_read_lock
    kvm_host_page_size -> find_vma
    kvm_host_page_size -> vma_kernel_pagesize
    kvm_host_page_size -> mmap_read_unlock
    kvm_vcpu_gfn_to_hva_prot [label="unsigned long kvm_vcpu_gfn_to_hva_prot (struct kvm_vcpu *vcpu, gfn_t gfn, bool *writable)
virt/kvm/kvm_main.c:2488"]
    kvm_vcpu_gfn_to_hva_prot -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_gfn_to_hva_prot -> gfn_to_hva_memslot_prot
    kvm_vcpu_gfn_to_memslot [label="struct kvm_memory_slot *kvm_vcpu_gfn_to_memslot (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:2344"]
    kvm_vcpu_gfn_to_memslot -> kvm_vcpu_memslots
    kvm_vcpu_gfn_to_memslot -> unlikely
    kvm_vcpu_gfn_to_memslot -> try_get_memslot
    kvm_vcpu_gfn_to_memslot -> search_memslots
    kvm_vcpu_memslots [label="kvm_vcpu_memslots()"]
    try_get_memslot [label="try_get_memslot()"]
    search_memslots [label="search_memslots()"]
    find_vma [label="find_vma()"]
    vma_kernel_pagesize [label="vma_kernel_pagesize()"]
    kvm_host_pmu_init [label="void kvm_host_pmu_init (struct arm_pmu *pmu)
arch/arm64/kvm/pmu-emul.c:694"]
    kvm_host_pmu_init -> pmuv3_implemented
    kvm_host_pmu_init -> kvm_arm_pmu_get_pmuver_limit
    kvm_host_pmu_init -> mutex_lock
    kvm_host_pmu_init -> kmalloc
    kvm_host_pmu_init -> list_add_tail
    kvm_host_pmu_init -> list_is_singular
    kvm_host_pmu_init -> static_branch_enable
    kvm_host_pmu_init -> mutex_unlock
    pmuv3_implemented [label="pmuv3_implemented()"]
    kvm_arm_pmu_get_pmuver_limit [label="u8 kvm_arm_pmu_get_pmuver_limit (void)
arch/arm64/kvm/pmu-emul.c:1122"]
    kvm_arm_pmu_get_pmuver_limit -> read_sanitised_ftr_reg
    kvm_arm_pmu_get_pmuver_limit -> cpuid_feature_cap_perfmon_field
    kvm_arm_pmu_get_pmuver_limit -> FIELD_GET
    kvm_arm_pmu_get_pmuver_limit -> ARM64_FEATURE_MASK
    cpuid_feature_cap_perfmon_field [label="cpuid_feature_cap_perfmon_field()"]
    list_is_singular [label="list_is_singular()"]
    kvm_host_put_page [label="void kvm_host_put_page (void *addr)
arch/arm64/kvm/mmu.c:244"]
    kvm_host_put_page -> put_page
    kvm_host_put_page -> virt_to_page
    kvm_hyp_reserve [label="void __init kvm_hyp_reserve (void)
arch/arm64/kvm/pkvm.c:59"]
    kvm_hyp_reserve -> is_hyp_mode_available
    kvm_hyp_reserve -> is_kernel_in_hyp_mode
    kvm_hyp_reserve -> kvm_get_mode
    kvm_hyp_reserve -> register_memblock_regions
    kvm_hyp_reserve -> kvm_err
    kvm_hyp_reserve -> hyp_s1_pgtable_pages
    kvm_hyp_reserve -> host_s2_pgtable_pages
    kvm_hyp_reserve -> hyp_vm_table_pages
    kvm_hyp_reserve -> hyp_vmemmap_pages
    kvm_hyp_reserve -> hyp_ffa_proxy_pages
    kvm_hyp_reserve -> memblock_phys_alloc
    kvm_hyp_reserve -> ALIGN
    kvm_hyp_reserve -> kvm_info
    register_memblock_regions [label="int __init register_memblock_regions (void)
arch/arm64/kvm/pkvm.c:43"]
    register_memblock_regions -> for_each_mem_region
    register_memblock_regions -> sort_memblock_regions
    for_each_mem_region [label="for_each_mem_region()"]
    sort_memblock_regions [label="void __init sort_memblock_regions (void)
arch/arm64/kvm/pkvm.c:34"]
    sort_memblock_regions -> sort
    sort_memblock_regions -> cmp_hyp_memblock
    sort [label="sort()"]
    cmp_hyp_memblock [label="int cmp_hyp_memblock (const void *p1, const void *p2)
arch/arm64/kvm/pkvm.c:26"]
    hyp_s1_pgtable_pages [label="hyp_s1_pgtable_pages()"]
    host_s2_pgtable_pages [label="host_s2_pgtable_pages()"]
    hyp_vm_table_pages [label="hyp_vm_table_pages()"]
    hyp_vmemmap_pages [label="hyp_vmemmap_pages()"]
    hyp_ffa_proxy_pages [label="hyp_ffa_proxy_pages()"]
    memblock_phys_alloc [label="memblock_phys_alloc()"]
    kvm_hyp_zalloc_page [label="void *kvm_hyp_zalloc_page (void *arg)
arch/arm64/kvm/mmu.c:1844"]
    kvm_hyp_zalloc_page -> get_zeroed_page
    get_zeroed_page [label="get_zeroed_page()"]
    kvm_inject_nested_irq [label="int kvm_inject_nested_irq (struct kvm_vcpu *vcpu)
arch/arm64/kvm/emulate-nested.c:2104"]
    kvm_inject_nested_irq -> vcpu_is_el2
    kvm_inject_nested_irq -> vcpu_el2_tge_is_set
    kvm_inject_nested_irq -> kvm_inject_nested
    vcpu_is_el2 [label="vcpu_is_el2()"]
    kvm_io_bus_get_dev [label="struct kvm_io_device *kvm_io_bus_get_dev (struct kvm *kvm, enum kvm_bus bus_idx, gpa_t addr)
virt/kvm/kvm_main.c:5635"]
    kvm_io_bus_get_dev -> srcu_read_lock
    kvm_io_bus_get_dev -> srcu_dereference
    kvm_io_bus_get_dev -> kvm_io_bus_get_first_dev
    kvm_io_bus_get_dev -> srcu_read_unlock
    kvm_io_bus_get_first_dev [label="int kvm_io_bus_get_first_dev (struct kvm_io_bus *bus, gpa_t addr, int len)
virt/kvm/kvm_main.c:5408"]
    kvm_io_bus_get_first_dev -> bsearch
    kvm_io_bus_get_first_dev -> kvm_io_bus_sort_cmp
    kvm_io_bus_get_first_dev -> kvm_io_bus_cmp
    bsearch [label="bsearch()"]
    kvm_io_bus_sort_cmp [label="int kvm_io_bus_sort_cmp (const void *p1, const void *p2)
virt/kvm/kvm_main.c:5403"]
    kvm_io_bus_sort_cmp -> kvm_io_bus_cmp
    kvm_io_bus_cmp [label="inline int kvm_io_bus_cmp (const struct kvm_io_range *r1, const struct kvm_io_range *r2)
virt/kvm/kvm_main.c:5378"]
    kvm_io_bus_write_cookie [label="int kvm_io_bus_write_cookie (struct kvm_vcpu *vcpu, enum kvm_bus bus_idx, gpa_t addr, int len, const void *val, long cookie)
virt/kvm/kvm_main.c:5474"]
    kvm_io_bus_write_cookie -> srcu_dereference
    kvm_io_bus_write_cookie -> kvm_io_bus_cmp
    kvm_io_bus_write_cookie -> kvm_iodevice_write
    kvm_iodevice_write [label="kvm_iodevice_write()"]
    kvm_irq_has_notifier [label="bool kvm_irq_has_notifier (struct kvm *kvm, unsigned irqchip, unsigned pin)
virt/kvm/eventfd.c:467"]
    kvm_irq_has_notifier -> srcu_read_lock
    kvm_irq_has_notifier -> kvm_irq_map_chip_pin
    kvm_irq_has_notifier -> hlist_for_each_entry_srcu
    kvm_irq_has_notifier -> srcu_read_lock_held
    kvm_irq_has_notifier -> srcu_read_unlock
    kvm_irq_map_chip_pin [label="int kvm_irq_map_chip_pin (struct kvm *kvm, unsigned irqchip, unsigned pin)
virt/kvm/irqchip.c:40"]
    kvm_irq_map_chip_pin -> srcu_dereference
    hlist_for_each_entry_srcu [label="hlist_for_each_entry_srcu()"]
    srcu_read_lock_held [label="srcu_read_lock_held()"]
    kvm_is_visible_gfn [label="bool kvm_is_visible_gfn (struct kvm *kvm, gfn_t gfn)
virt/kvm/kvm_main.c:2377"]
    kvm_is_visible_gfn -> gfn_to_memslot
    kvm_is_visible_gfn -> kvm_is_visible_memslot
    kvm_is_visible_memslot [label="kvm_is_visible_memslot()"]
    kvm_mmu_notifier_change_pte [label="void kvm_mmu_notifier_change_pte (struct mmu_notifier *mn, struct mm_struct *mm, unsigned long address, pte_t pte)
virt/kvm/kvm_main.c:714"]
    kvm_mmu_notifier_change_pte -> mmu_notifier_to_kvm
    kvm_mmu_notifier_change_pte -> trace_kvm_set_spte_hva
    kvm_mmu_notifier_change_pte -> WARN_ON_ONCE
    kvm_mmu_notifier_change_pte -> READ_ONCE
    kvm_mmu_notifier_change_pte -> kvm_handle_hva_range
    kvm_mmu_notifier_change_pte -> kvm_change_spte_gfn
    mmu_notifier_to_kvm [label="inline struct kvm *mmu_notifier_to_kvm (struct mmu_notifier *mn)
virt/kvm/kvm_main.c:537"]
    mmu_notifier_to_kvm -> container_of
    trace_kvm_set_spte_hva [label="trace_kvm_set_spte_hva()"]
    kvm_handle_hva_range [label="__always_inline int kvm_handle_hva_range (struct mmu_notifier *mn, unsigned long start, unsigned long end, union kvm_mmu_notifier_arg arg, hva_handler_t handler)
virt/kvm/kvm_main.c:657"]
    kvm_handle_hva_range -> mmu_notifier_to_kvm
    kvm_handle_hva_range -> kvm_null_fn
    kvm_null_fn [label="void kvm_null_fn (void)
virt/kvm/kvm_main.c:567"]
    kvm_change_spte_gfn [label="bool kvm_change_spte_gfn (struct kvm *kvm, struct kvm_gfn_range *range)
virt/kvm/kvm_main.c:697"]
    kvm_change_spte_gfn -> WARN_ON_ONCE
    kvm_change_spte_gfn -> READ_ONCE
    kvm_change_spte_gfn -> kvm_set_spte_gfn
    kvm_set_spte_gfn [label="bool kvm_set_spte_gfn (struct kvm *kvm, struct kvm_gfn_range *range)
arch/arm64/kvm/mmu.c:1764"]
    kvm_set_spte_gfn -> pte_pfn
    kvm_set_spte_gfn -> WARN_ON
    kvm_set_spte_gfn -> kvm_has_mte
    kvm_set_spte_gfn -> page_mte_tagged
    kvm_set_spte_gfn -> pfn_to_page
    kvm_set_spte_gfn -> kvm_pgtable_stage2_map
    pte_pfn [label="pte_pfn()"]
    page_mte_tagged [label="page_mte_tagged()"]
    kvm_mmu_notifier_clear_flush_young [label="int kvm_mmu_notifier_clear_flush_young (struct mmu_notifier *mn, struct mm_struct *mm, unsigned long start, unsigned long end)
virt/kvm/kvm_main.c:864"]
    kvm_mmu_notifier_clear_flush_young -> trace_kvm_age_hva
    kvm_mmu_notifier_clear_flush_young -> kvm_handle_hva_range
    kvm_mmu_notifier_clear_flush_young -> kvm_age_gfn
    trace_kvm_age_hva [label="trace_kvm_age_hva()"]
    kvm_age_gfn [label="bool kvm_age_gfn (struct kvm *kvm, struct kvm_gfn_range *range)
arch/arm64/kvm/mmu.c:1798"]
    kvm_age_gfn -> kvm_pgtable_stage2_test_clear_young
    kvm_pgtable_stage2_test_clear_young [label="kvm_pgtable_stage2_test_clear_young()"]
    kvm_mmu_notifier_clear_young [label="int kvm_mmu_notifier_clear_young (struct mmu_notifier *mn, struct mm_struct *mm, unsigned long start, unsigned long end)
virt/kvm/kvm_main.c:875"]
    kvm_mmu_notifier_clear_young -> trace_kvm_age_hva
    kvm_mmu_notifier_clear_young -> kvm_handle_hva_range_no_flush
    kvm_mmu_notifier_clear_young -> kvm_age_gfn
    kvm_handle_hva_range_no_flush [label="__always_inline int kvm_handle_hva_range_no_flush (struct mmu_notifier *mn, unsigned long start, unsigned long end, hva_handler_t handler)
virt/kvm/kvm_main.c:678"]
    kvm_handle_hva_range_no_flush -> mmu_notifier_to_kvm
    kvm_handle_hva_range_no_flush -> kvm_null_fn
    kvm_mmu_notifier_invalidate_range_end [label="void kvm_mmu_notifier_invalidate_range_end (struct mmu_notifier *mn, const struct mmu_notifier_range *range)
virt/kvm/kvm_main.c:832"]
    kvm_mmu_notifier_invalidate_range_end -> mmu_notifier_to_kvm
    kvm_mmu_notifier_invalidate_range_end -> kvm_null_fn
    kvm_mmu_notifier_invalidate_range_end -> kvm_mmu_invalidate_end
    kvm_mmu_notifier_invalidate_range_end -> mmu_notifier_range_blockable
    kvm_mmu_notifier_invalidate_range_end -> spin_lock
    kvm_mmu_notifier_invalidate_range_end -> spin_unlock
    kvm_mmu_notifier_invalidate_range_end -> rcuwait_wake_up
    kvm_mmu_notifier_invalidate_range_end -> BUG_ON
    kvm_mmu_invalidate_end [label="void kvm_mmu_invalidate_end (struct kvm *kvm, unsigned long start, unsigned long end)
virt/kvm/kvm_main.c:814"]
    kvm_mmu_invalidate_end -> smp_wmb
    mmu_notifier_range_blockable [label="mmu_notifier_range_blockable()"]
    rcuwait_wake_up [label="rcuwait_wake_up()"]
    kvm_mmu_notifier_invalidate_range_start [label="int kvm_mmu_notifier_invalidate_range_start (struct mmu_notifier *mn, const struct mmu_notifier_range *range)
virt/kvm/kvm_main.c:768"]
    kvm_mmu_notifier_invalidate_range_start -> mmu_notifier_to_kvm
    kvm_mmu_notifier_invalidate_range_start -> kvm_unmap_gfn_range
    kvm_mmu_notifier_invalidate_range_start -> kvm_mmu_invalidate_begin
    kvm_mmu_notifier_invalidate_range_start -> kvm_arch_guest_memory_reclaimed
    kvm_mmu_notifier_invalidate_range_start -> mmu_notifier_range_blockable
    kvm_mmu_notifier_invalidate_range_start -> trace_kvm_unmap_hva_range
    kvm_mmu_notifier_invalidate_range_start -> spin_lock
    kvm_mmu_notifier_invalidate_range_start -> spin_unlock
    kvm_mmu_notifier_invalidate_range_start -> gfn_to_pfn_cache_invalidate_start
    kvm_unmap_gfn_range [label="bool kvm_unmap_gfn_range (struct kvm *kvm, struct kvm_gfn_range *range)
arch/arm64/kvm/mmu.c:1752"]
    kvm_mmu_invalidate_begin [label="void kvm_mmu_invalidate_begin (struct kvm *kvm, unsigned long start, unsigned long end)
virt/kvm/kvm_main.c:739"]
    kvm_mmu_invalidate_begin -> likely
    kvm_mmu_invalidate_begin -> min
    kvm_mmu_invalidate_begin -> max
    trace_kvm_unmap_hva_range [label="trace_kvm_unmap_hva_range()"]
    gfn_to_pfn_cache_invalidate_start [label="void gfn_to_pfn_cache_invalidate_start (struct kvm *kvm, unsigned long start, unsigned long end, bool may_block)
virt/kvm/pfncache.c:25"]
    gfn_to_pfn_cache_invalidate_start -> DECLARE_BITMAP
    gfn_to_pfn_cache_invalidate_start -> bool
    gfn_to_pfn_cache_invalidate_start -> spin_lock
    gfn_to_pfn_cache_invalidate_start -> list_for_each_entry
    gfn_to_pfn_cache_invalidate_start -> write_lock_irq
    gfn_to_pfn_cache_invalidate_start -> is_error_noslot_pfn
    gfn_to_pfn_cache_invalidate_start -> bitmap_zero
    gfn_to_pfn_cache_invalidate_start -> write_unlock_irq
    gfn_to_pfn_cache_invalidate_start -> spin_unlock
    gfn_to_pfn_cache_invalidate_start -> kvm_make_vcpus_request_mask
    gfn_to_pfn_cache_invalidate_start -> WARN_ON_ONCE
    list_for_each_entry [label="list_for_each_entry()"]
    kvm_make_vcpus_request_mask [label="bool kvm_make_vcpus_request_mask (struct kvm *kvm, unsigned int req, unsigned long *vcpu_bitmap)
virt/kvm/kvm_main.c:288"]
    kvm_make_vcpus_request_mask -> bool
    kvm_make_vcpus_request_mask -> get_cpu
    kvm_make_vcpus_request_mask -> this_cpu_cpumask_var_ptr
    kvm_make_vcpus_request_mask -> cpumask_clear
    kvm_make_vcpus_request_mask -> for_each_set_bit
    kvm_make_vcpus_request_mask -> kvm_get_vcpu
    kvm_make_vcpus_request_mask -> kvm_make_vcpu_request
    kvm_make_vcpus_request_mask -> kvm_kick_many_cpus
    kvm_make_vcpus_request_mask -> put_cpu
    kvm_mmu_notifier_release [label="void kvm_mmu_notifier_release (struct mmu_notifier *mn, struct mm_struct *mm)
virt/kvm/kvm_main.c:908"]
    kvm_mmu_notifier_release -> mmu_notifier_to_kvm
    kvm_mmu_notifier_release -> srcu_read_lock
    kvm_mmu_notifier_release -> kvm_flush_shadow_all
    kvm_mmu_notifier_release -> srcu_read_unlock
    kvm_mmu_notifier_test_young [label="int kvm_mmu_notifier_test_young (struct mmu_notifier *mn, struct mm_struct *mm, unsigned long address)
virt/kvm/kvm_main.c:898"]
    kvm_mmu_notifier_test_young -> trace_kvm_test_age_hva
    kvm_mmu_notifier_test_young -> kvm_handle_hva_range_no_flush
    kvm_mmu_notifier_test_young -> kvm_test_age_gfn
    trace_kvm_test_age_hva [label="trace_kvm_test_age_hva()"]
    kvm_test_age_gfn [label="bool kvm_test_age_gfn (struct kvm *kvm, struct kvm_gfn_range *range)
arch/arm64/kvm/mmu.c:1810"]
    kvm_test_age_gfn -> kvm_pgtable_stage2_test_clear_young
    kvm_no_compat_ioctl [label="long kvm_no_compat_ioctl (struct file *file, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:132"]
    kvm_no_compat_open [label="int kvm_no_compat_open (struct inode *inode, struct file *file)
virt/kvm/kvm_main.c:135"]
    kvm_no_compat_open -> is_compat_task
    is_compat_task [label="is_compat_task()"]
    kvm_notify_acked_irq [label="void kvm_notify_acked_irq (struct kvm *kvm, unsigned irqchip, unsigned pin)
virt/kvm/eventfd.c:498"]
    kvm_notify_acked_irq -> trace_kvm_ack_irq
    kvm_notify_acked_irq -> srcu_read_lock
    kvm_notify_acked_irq -> kvm_irq_map_chip_pin
    kvm_notify_acked_irq -> kvm_notify_acked_gsi
    kvm_notify_acked_irq -> srcu_read_unlock
    trace_kvm_ack_irq [label="trace_kvm_ack_irq()"]
    kvm_notify_acked_gsi [label="void kvm_notify_acked_gsi (struct kvm *kvm, int gsi)
virt/kvm/eventfd.c:488"]
    kvm_notify_acked_gsi -> hlist_for_each_entry_srcu
    kvm_notify_acked_gsi -> srcu_read_lock_held
    kvm_notify_irqfd_resampler [label="bool kvm_notify_irqfd_resampler (struct kvm *kvm, unsigned int irqchip, unsigned int pin)
virt/kvm/eventfd.c:655"]
    kvm_notify_irqfd_resampler -> srcu_read_lock
    kvm_notify_irqfd_resampler -> kvm_irq_map_chip_pin
    kvm_notify_irqfd_resampler -> list_for_each_entry_srcu
    kvm_notify_irqfd_resampler -> srcu_read_lock_held
    kvm_notify_irqfd_resampler -> irqfd_resampler_notify
    kvm_notify_irqfd_resampler -> srcu_read_unlock
    list_for_each_entry_srcu [label="list_for_each_entry_srcu()"]
    irqfd_resampler_notify [label="void irqfd_resampler_notify (struct kvm_kernel_irqfd_resampler *resampler)
virt/kvm/eventfd.c:58"]
    irqfd_resampler_notify -> list_for_each_entry_srcu
    irqfd_resampler_notify -> srcu_read_lock_held
    irqfd_resampler_notify -> eventfd_signal
    kvm_patch_vector_branch [label="void kvm_patch_vector_branch (struct alt_instr *alt, __le32 *origptr, __le32 *updptr, int nr_inst)
arch/arm64/kvm/va_layout.c:188"]
    kvm_patch_vector_branch -> BUG_ON
    kvm_patch_vector_branch -> cpus_have_cap
    kvm_patch_vector_branch -> WARN_ON_ONCE
    kvm_patch_vector_branch -> kvm_ksym_ref
    kvm_patch_vector_branch -> GENMASK_ULL
    kvm_patch_vector_branch -> aarch64_insn_gen_movewide
    kvm_patch_vector_branch -> cpu_to_le32
    kvm_patch_vector_branch -> aarch64_insn_gen_branch_reg
    cpus_have_cap [label="cpus_have_cap()"]
    aarch64_insn_gen_branch_reg [label="aarch64_insn_gen_branch_reg()"]
    kvm_phys_addr_ioremap [label="int kvm_phys_addr_ioremap (struct kvm *kvm, phys_addr_t guest_ipa, phys_addr_t pa, unsigned long size, bool writable)
arch/arm64/kvm/mmu.c:1064"]
    kvm_phys_addr_ioremap -> is_protected_kvm_enabled
    kvm_phys_addr_ioremap -> offset_in_page
    kvm_phys_addr_ioremap -> kvm_mmu_topup_memory_cache
    kvm_phys_addr_ioremap -> kvm_mmu_cache_min_pages
    kvm_phys_addr_ioremap -> write_lock
    kvm_phys_addr_ioremap -> kvm_pgtable_stage2_map
    kvm_phys_addr_ioremap -> write_unlock
    kvm_phys_addr_ioremap -> kvm_mmu_free_memory_cache
    kvm_read_guest_cached [label="int kvm_read_guest_cached (struct kvm *kvm, struct gfn_to_hva_cache *ghc, void *data, unsigned long len)
virt/kvm/kvm_main.c:3316"]
    kvm_read_guest_cached -> kvm_read_guest_offset_cached
    kvm_read_guest_offset_cached [label="int kvm_read_guest_offset_cached (struct kvm *kvm, struct gfn_to_hva_cache *ghc, void *data, unsigned int offset, unsigned long len)
virt/kvm/kvm_main.c:3286"]
    kvm_read_guest_offset_cached -> kvm_memslots
    kvm_read_guest_offset_cached -> WARN_ON_ONCE
    kvm_read_guest_offset_cached -> kvm_is_error_hva
    kvm_read_guest_offset_cached -> unlikely
    kvm_read_guest_offset_cached -> kvm_read_guest
    kvm_read_guest [label="int kvm_read_guest (struct kvm *kvm, gpa_t gpa, void *data, unsigned long len)
virt/kvm/kvm_main.c:3054"]
    kvm_read_guest -> offset_in_page
    kvm_read_guest -> next_segment
    kvm_read_guest -> kvm_read_guest_page
    kvm_read_guest_page [label="int kvm_read_guest_page (struct kvm *kvm, gfn_t gfn, void *data, int offset, int len)
virt/kvm/kvm_main.c:3036"]
    kvm_read_guest_page -> gfn_to_memslot
    kvm_read_sanitised_id_reg [label="u64 kvm_read_sanitised_id_reg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1434"]
    kvm_resume [label="void kvm_resume (void)
virt/kvm/kvm_main.c:5334"]
    kvm_resume -> lockdep_assert_not_held
    kvm_resume -> lockdep_assert_irqs_disabled
    kvm_resume -> WARN_ON_ONCE
    lockdep_assert_not_held [label="lockdep_assert_not_held()"]
    lockdep_assert_irqs_disabled [label="lockdep_assert_irqs_disabled()"]
    kvm_s2_free_pages_exact [label="void kvm_s2_free_pages_exact (void *virt, size_t size)
arch/arm64/kvm/mmu.c:214"]
    kvm_s2_free_pages_exact -> kvm_account_pgtable_pages
    kvm_s2_free_pages_exact -> free_pages_exact
    kvm_account_pgtable_pages [label="kvm_account_pgtable_pages()"]
    free_pages_exact [label="free_pages_exact()"]
    kvm_s2_put_page [label="void kvm_s2_put_page (void *addr)
arch/arm64/kvm/mmu.c:249"]
    kvm_s2_put_page -> virt_to_page
    kvm_s2_put_page -> page_count
    kvm_s2_put_page -> kvm_account_pgtable_pages
    kvm_s2_put_page -> put_page
    kvm_s2_zalloc_pages_exact [label="void *kvm_s2_zalloc_pages_exact (size_t size)
arch/arm64/kvm/mmu.c:205"]
    kvm_s2_zalloc_pages_exact -> kvm_host_zalloc_pages_exact
    kvm_s2_zalloc_pages_exact -> kvm_account_pgtable_pages
    kvm_host_zalloc_pages_exact [label="void *kvm_host_zalloc_pages_exact (size_t size)
arch/arm64/kvm/mmu.c:200"]
    kvm_host_zalloc_pages_exact -> alloc_pages_exact
    alloc_pages_exact [label="alloc_pages_exact()"]
    kvm_set_pmu_events [label="void kvm_set_pmu_events (u32 set, struct perf_event_attr *attr)
arch/arm64/kvm/pmu.c:38"]
    kvm_set_pmu_events -> kvm_get_pmu_events
    kvm_set_pmu_events -> kvm_arm_support_pmu_v3
    kvm_set_pmu_events -> kvm_pmu_switch_needed
    kvm_pmu_switch_needed [label="bool kvm_pmu_switch_needed (struct perf_event_attr *attr)
arch/arm64/kvm/pmu.c:15"]
    kvm_pmu_switch_needed -> has_vhe
    kvm_set_pmuserenr [label="bool kvm_set_pmuserenr (u64 val)
arch/arm64/kvm/pmu.c:223"]
    kvm_set_pmuserenr -> kvm_arm_support_pmu_v3
    kvm_set_pmuserenr -> has_vhe
    kvm_set_pmuserenr -> kvm_get_running_vcpu
    kvm_set_pmuserenr -> vcpu_get_flag
    kvm_set_pmuserenr -> this_cpu_ptr
    kvm_set_pmuserenr -> ctxt_sys_reg
    ctxt_sys_reg [label="ctxt_sys_reg()"]
    kvm_setup_async_pf [label="bool kvm_setup_async_pf (struct kvm_vcpu *vcpu, gpa_t cr2_or_gpa, unsigned long hva, struct kvm_arch_async_pf *arch)
virt/kvm/async_pf.c:162"]
    kvm_setup_async_pf -> unlikely
    kvm_setup_async_pf -> kvm_is_error_hva
    kvm_setup_async_pf -> kmem_cache_zalloc
    kvm_setup_async_pf -> mmget
    kvm_setup_async_pf -> kvm_get_kvm
    kvm_setup_async_pf -> INIT_WORK
    kvm_setup_async_pf -> async_pf_execute
    kvm_setup_async_pf -> list_add_tail
    kvm_setup_async_pf -> kvm_arch_async_page_not_present
    kvm_setup_async_pf -> schedule_work
    mmget [label="mmget()"]
    kvm_get_kvm [label="void kvm_get_kvm (struct kvm *kvm)
virt/kvm/kvm_main.c:1347"]
    kvm_get_kvm -> refcount_inc
    refcount_inc [label="refcount_inc()"]
    INIT_WORK [label="INIT_WORK()"]
    async_pf_execute [label="void async_pf_execute (struct work_struct *work)
virt/kvm/async_pf.c:45"]
    async_pf_execute -> container_of
    async_pf_execute -> bool
    async_pf_execute -> might_sleep
    async_pf_execute -> mmap_read_lock
    async_pf_execute -> get_user_pages_remote
    async_pf_execute -> mmap_read_unlock
    async_pf_execute -> IS_ENABLED
    async_pf_execute -> kvm_arch_async_page_present
    async_pf_execute -> spin_lock
    async_pf_execute -> list_empty
    async_pf_execute -> list_add_tail
    async_pf_execute -> spin_unlock
    async_pf_execute -> kvm_arch_async_page_present_queued
    async_pf_execute -> trace_kvm_async_pf_completed
    async_pf_execute -> mmput
    async_pf_execute -> kvm_put_kvm
    might_sleep [label="might_sleep()"]
    get_user_pages_remote [label="get_user_pages_remote()"]
    trace_kvm_async_pf_completed [label="trace_kvm_async_pf_completed()"]
    kvm_arch_async_page_not_present [label="kvm_arch_async_page_not_present()"]
    schedule_work [label="schedule_work()"]
    kvm_shutdown [label="void kvm_shutdown (void)
virt/kvm/kvm_main.c:5298"]
    kvm_shutdown -> pr_info
    kvm_shutdown -> on_each_cpu
    kvm_shutdown -> hardware_disable_nolock
    pr_info [label="pr_info()"]
    kvm_stat_data_open [label="int kvm_stat_data_open (struct inode *inode, struct file *file)
virt/kvm/kvm_main.c:5774"]
    kvm_stat_data_open -> kvm_debugfs_open
    kvm_stat_data_open -> kvm_stat_data_get
    kvm_stat_data_open -> kvm_stat_data_clear
    kvm_debugfs_open [label="int kvm_debugfs_open (struct inode *inode, struct file *file, int (*get) (void *, u64 *), int (*set) (void *, u64), const char *fmt)
virt/kvm/kvm_main.c:5661"]
    kvm_debugfs_open -> kvm_get_kvm_safe
    kvm_debugfs_open -> simple_attr_open
    kvm_debugfs_open -> kvm_stats_debugfs_mode
    kvm_debugfs_open -> kvm_put_kvm
    kvm_get_kvm_safe [label="bool kvm_get_kvm_safe (struct kvm *kvm)
virt/kvm/kvm_main.c:1357"]
    kvm_get_kvm_safe -> refcount_inc_not_zero
    refcount_inc_not_zero [label="refcount_inc_not_zero()"]
    simple_attr_open [label="simple_attr_open()"]
    kvm_stat_data_get [label="int kvm_stat_data_get (void *data, u64 *val)
virt/kvm/kvm_main.c:5733"]
    kvm_stat_data_get -> kvm_get_stat_per_vm
    kvm_stat_data_get -> kvm_get_stat_per_vcpu
    kvm_get_stat_per_vm [label="int kvm_get_stat_per_vm (struct kvm *kvm, size_t offset, u64 *val)
virt/kvm/kvm_main.c:5695"]
    kvm_get_stat_per_vcpu [label="int kvm_get_stat_per_vcpu (struct kvm *kvm, size_t offset, u64 *val)
virt/kvm/kvm_main.c:5709"]
    kvm_get_stat_per_vcpu -> kvm_for_each_vcpu
    kvm_stat_data_clear [label="int kvm_stat_data_clear (void *data, u64 val)
virt/kvm/kvm_main.c:5752"]
    kvm_stat_data_clear -> kvm_clear_stat_per_vm
    kvm_stat_data_clear -> kvm_clear_stat_per_vcpu
    kvm_clear_stat_per_vm [label="int kvm_clear_stat_per_vm (struct kvm *kvm, size_t offset)
virt/kvm/kvm_main.c:5702"]
    kvm_clear_stat_per_vcpu [label="int kvm_clear_stat_per_vcpu (struct kvm *kvm, size_t offset)
virt/kvm/kvm_main.c:5722"]
    kvm_clear_stat_per_vcpu -> kvm_for_each_vcpu
    kvm_suspend [label="int kvm_suspend (void)
virt/kvm/kvm_main.c:5316"]
    kvm_suspend -> lockdep_assert_not_held
    kvm_suspend -> lockdep_assert_irqs_disabled
    kvm_suspend -> hardware_disable_nolock
    kvm_update_va_mask [label="void __init kvm_update_va_mask (struct alt_instr *alt, __le32 *origptr, __le32 *updptr, int nr_inst)
arch/arm64/kvm/va_layout.c:154"]
    kvm_update_va_mask -> BUG_ON
    kvm_update_va_mask -> cpus_have_cap
    kvm_update_va_mask -> cpu_to_le32
    kvm_update_va_mask -> aarch64_insn_gen_nop
    kvm_update_va_mask -> le32_to_cpu
    kvm_update_va_mask -> aarch64_insn_decode_register
    kvm_update_va_mask -> compute_instruction
    aarch64_insn_gen_nop [label="aarch64_insn_gen_nop()"]
    compute_instruction [label="u32 compute_instruction (int n, u32 rd, u32 rn)
arch/arm64/kvm/va_layout.c:112"]
    compute_instruction -> aarch64_insn_gen_logical_immediate
    compute_instruction -> aarch64_insn_gen_extr
    compute_instruction -> aarch64_insn_gen_add_sub_imm
    compute_instruction -> GENMASK
    aarch64_insn_gen_logical_immediate [label="aarch64_insn_gen_logical_immediate()"]
    aarch64_insn_gen_extr [label="aarch64_insn_gen_extr()"]
    aarch64_insn_gen_add_sub_imm [label="aarch64_insn_gen_add_sub_imm()"]
    kvm_vcpu_compat_ioctl [label="long kvm_vcpu_compat_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:4321"]
    kvm_vcpu_compat_ioctl -> compat_ptr
    kvm_vcpu_compat_ioctl -> copy_from_user
    kvm_vcpu_compat_ioctl -> get_compat_sigset
    kvm_vcpu_compat_ioctl -> kvm_vcpu_ioctl_set_sigmask
    kvm_vcpu_compat_ioctl -> kvm_vcpu_ioctl
    compat_ptr [label="compat_ptr()"]
    get_compat_sigset [label="get_compat_sigset()"]
    kvm_vcpu_ioctl_set_sigmask [label="int kvm_vcpu_ioctl_set_sigmask (struct kvm_vcpu *vcpu, sigset_t *sigset)
virt/kvm/kvm_main.c:4047"]
    kvm_vcpu_ioctl_set_sigmask -> sigdelsetmask
    kvm_vcpu_ioctl_set_sigmask -> sigmask
    sigdelsetmask [label="sigdelsetmask()"]
    sigmask [label="sigmask()"]
    kvm_vcpu_ioctl [label="long kvm_vcpu_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:4109"]
    kvm_vcpu_ioctl -> unlikely
    kvm_vcpu_ioctl -> kvm_arch_vcpu_async_ioctl
    kvm_vcpu_ioctl -> mutex_lock_killable
    kvm_vcpu_ioctl -> rcu_access_pointer
    kvm_vcpu_ioctl -> task_pid
    kvm_vcpu_ioctl -> kvm_arch_vcpu_run_pid_change
    kvm_vcpu_ioctl -> get_task_pid
    kvm_vcpu_ioctl -> rcu_assign_pointer
    kvm_vcpu_ioctl -> synchronize_rcu
    kvm_vcpu_ioctl -> put_pid
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_run
    kvm_vcpu_ioctl -> trace_kvm_userspace_exit
    kvm_vcpu_ioctl -> kzalloc
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_get_regs
    kvm_vcpu_ioctl -> copy_to_user
    kvm_vcpu_ioctl -> kfree
    kvm_vcpu_ioctl -> memdup_user
    kvm_vcpu_ioctl -> IS_ERR
    kvm_vcpu_ioctl -> PTR_ERR
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_set_regs
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_get_sregs
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_set_sregs
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_get_mpstate
    kvm_vcpu_ioctl -> copy_from_user
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_set_mpstate
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_translate
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_set_guest_debug
    kvm_vcpu_ioctl -> kvm_vcpu_ioctl_set_sigmask
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_get_fpu
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl_set_fpu
    kvm_vcpu_ioctl -> kvm_vcpu_ioctl_get_stats_fd
    kvm_vcpu_ioctl -> kvm_arch_vcpu_ioctl
    kvm_vcpu_ioctl -> mutex_unlock
    kvm_arch_vcpu_async_ioctl [label="kvm_arch_vcpu_async_ioctl()"]
    mutex_lock_killable [label="mutex_lock_killable()"]
    task_pid [label="task_pid()"]
    kvm_arch_vcpu_run_pid_change [label="int kvm_arch_vcpu_run_pid_change (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:640"]
    kvm_arch_vcpu_run_pid_change -> kvm_vcpu_initialized
    kvm_arch_vcpu_run_pid_change -> kvm_arm_vcpu_is_finalized
    kvm_arch_vcpu_run_pid_change -> kvm_arch_vcpu_run_map_fp
    kvm_arch_vcpu_run_pid_change -> likely
    kvm_arch_vcpu_run_pid_change -> vcpu_has_run_once
    kvm_arch_vcpu_run_pid_change -> kvm_init_mpidr_data
    kvm_arch_vcpu_run_pid_change -> kvm_arm_vcpu_init_debug
    kvm_arch_vcpu_run_pid_change -> irqchip_in_kernel
    kvm_arch_vcpu_run_pid_change -> kvm_vgic_map_resources
    kvm_arch_vcpu_run_pid_change -> kvm_timer_enable
    kvm_arch_vcpu_run_pid_change -> kvm_arm_pmu_v3_enable
    kvm_arch_vcpu_run_pid_change -> is_protected_kvm_enabled
    kvm_arch_vcpu_run_pid_change -> pkvm_create_hyp_vm
    kvm_arch_vcpu_run_pid_change -> static_branch_inc
    kvm_arch_vcpu_run_pid_change -> kvm_vm_is_protected
    kvm_arch_vcpu_run_pid_change -> kvm_call_hyp_nvhe
    kvm_arch_vcpu_run_pid_change -> mutex_lock
    kvm_arch_vcpu_run_pid_change -> set_bit
    kvm_arch_vcpu_run_pid_change -> mutex_unlock
    kvm_vcpu_initialized [label="int kvm_vcpu_initialized (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:579"]
    kvm_vcpu_initialized -> vcpu_get_flag
    kvm_arm_vcpu_is_finalized [label="bool kvm_arm_vcpu_is_finalized (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:142"]
    kvm_arm_vcpu_is_finalized -> vcpu_has_sve
    kvm_arm_vcpu_is_finalized -> kvm_arm_vcpu_sve_finalized
    kvm_arm_vcpu_sve_finalized [label="kvm_arm_vcpu_sve_finalized()"]
    kvm_arch_vcpu_run_map_fp [label="int kvm_arch_vcpu_run_map_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:39"]
    kvm_arch_vcpu_run_map_fp -> kvm_vcpu_unshare_task_fp
    kvm_arch_vcpu_run_map_fp -> kvm_share_hyp
    kvm_arch_vcpu_run_map_fp -> kern_hyp_va
    kvm_arch_vcpu_run_map_fp -> is_protected_kvm_enabled
    kvm_arch_vcpu_run_map_fp -> get_task_struct
    get_task_struct [label="get_task_struct()"]
    kvm_init_mpidr_data [label="void kvm_init_mpidr_data (struct kvm *kvm)
arch/arm64/kvm/arm.c:584"]
    kvm_init_mpidr_data -> mutex_lock
    kvm_init_mpidr_data -> atomic_read
    kvm_init_mpidr_data -> kvm_for_each_vcpu
    kvm_init_mpidr_data -> kvm_vcpu_get_mpidr_aff
    kvm_init_mpidr_data -> BIT_ULL
    kvm_init_mpidr_data -> hweight_long
    kvm_init_mpidr_data -> struct_size
    kvm_init_mpidr_data -> kzalloc
    kvm_init_mpidr_data -> kvm_mpidr_index
    kvm_init_mpidr_data -> mutex_unlock
    hweight_long [label="hweight_long()"]
    struct_size [label="struct_size()"]
    kvm_arm_vcpu_init_debug [label="void kvm_arm_vcpu_init_debug (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:137"]
    kvm_arm_vcpu_init_debug -> preempt_disable
    kvm_arm_vcpu_init_debug -> kvm_arm_setup_mdcr_el2
    kvm_arm_vcpu_init_debug -> preempt_enable
    kvm_arm_setup_mdcr_el2 [label="void kvm_arm_setup_mdcr_el2 (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:96"]
    kvm_arm_setup_mdcr_el2 -> vcpu_get_flag
    kvm_arm_setup_mdcr_el2 -> kvm_vcpu_os_lock_enabled
    kvm_arm_setup_mdcr_el2 -> trace_kvm_arm_set_dreg32
    kvm_vcpu_os_lock_enabled [label="kvm_vcpu_os_lock_enabled()"]
    trace_kvm_arm_set_dreg32 [label="trace_kvm_arm_set_dreg32()"]
    kvm_vgic_map_resources [label="kvm_vgic_map_resources()"]
    kvm_timer_enable [label="int kvm_timer_enable (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:1507"]
    kvm_timer_enable -> vcpu_timer
    kvm_timer_enable -> irqchip_in_kernel
    kvm_timer_enable -> timer_irqs_are_valid
    kvm_timer_enable -> kvm_debug
    kvm_timer_enable -> get_timer_map
    kvm_timer_enable -> kvm_vgic_map_phys_irq
    kvm_timer_enable -> timer_irq
    timer_irqs_are_valid [label="bool timer_irqs_are_valid (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:1453"]
    timer_irqs_are_valid -> bool
    timer_irqs_are_valid -> mutex_lock
    timer_irqs_are_valid -> hweight32
    timer_irqs_are_valid -> nr_timers
    timer_irqs_are_valid -> set_bit
    timer_irqs_are_valid -> mutex_unlock
    hweight32 [label="hweight32()"]
    set_bit [label="set_bit()"]
    kvm_arm_pmu_v3_enable [label="int kvm_arm_pmu_v3_enable (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:817"]
    kvm_arm_pmu_v3_enable -> kvm_vcpu_has_pmu
    kvm_arm_pmu_v3_enable -> irqchip_in_kernel
    kvm_arm_pmu_v3_enable -> irq_is_ppi
    kvm_arm_pmu_v3_enable -> vgic_valid_spi
    kvm_arm_pmu_v3_enable -> kvm_arm_pmu_irq_initialized
    kvm_arm_pmu_v3_enable -> kvm_make_request
    irq_is_ppi [label="irq_is_ppi()"]
    vgic_valid_spi [label="vgic_valid_spi()"]
    kvm_arm_pmu_irq_initialized [label="kvm_arm_pmu_irq_initialized()"]
    pkvm_create_hyp_vm [label="int pkvm_create_hyp_vm (struct kvm *host_kvm)
arch/arm64/kvm/pkvm.c:204"]
    pkvm_create_hyp_vm -> mutex_lock
    pkvm_create_hyp_vm -> mutex_unlock
    static_branch_inc [label="static_branch_inc()"]
    kvm_vm_is_protected [label="kvm_vm_is_protected()"]
    get_task_pid [label="get_task_pid()"]
    synchronize_rcu [label="synchronize_rcu()"]
    kvm_arch_vcpu_ioctl_run [label="int kvm_arch_vcpu_ioctl_run (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:960"]
    kvm_arch_vcpu_ioctl_run -> kvm_handle_mmio_return
    kvm_arch_vcpu_ioctl_run -> vcpu_load
    kvm_arch_vcpu_ioctl_run -> kvm_sigset_activate
    kvm_arch_vcpu_ioctl_run -> xfer_to_guest_mode_handle_work
    kvm_arch_vcpu_ioctl_run -> check_vcpu_requests
    kvm_arch_vcpu_ioctl_run -> preempt_disable
    kvm_arch_vcpu_ioctl_run -> kvm_arm_vmid_update
    kvm_arch_vcpu_ioctl_run -> has_vhe
    kvm_arch_vcpu_ioctl_run -> kvm_pmu_flush_hwstate
    kvm_arch_vcpu_ioctl_run -> local_irq_disable
    kvm_arch_vcpu_ioctl_run -> kvm_vgic_flush_hwstate
    kvm_arch_vcpu_ioctl_run -> kvm_pmu_update_vcpu_events
    kvm_arch_vcpu_ioctl_run -> smp_store_mb
    kvm_arch_vcpu_ioctl_run -> kvm_vcpu_exit_request
    kvm_arch_vcpu_ioctl_run -> isb
    kvm_arch_vcpu_ioctl_run -> kvm_pmu_sync_hwstate
    kvm_arch_vcpu_ioctl_run -> static_branch_unlikely
    kvm_arch_vcpu_ioctl_run -> kvm_timer_sync_user
    kvm_arch_vcpu_ioctl_run -> kvm_vgic_sync_hwstate
    kvm_arch_vcpu_ioctl_run -> local_irq_enable
    kvm_arch_vcpu_ioctl_run -> preempt_enable
    kvm_arch_vcpu_ioctl_run -> kvm_arm_setup_debug
    kvm_arch_vcpu_ioctl_run -> kvm_arch_vcpu_ctxflush_fp
    kvm_arch_vcpu_ioctl_run -> trace_kvm_entry
    kvm_arch_vcpu_ioctl_run -> vcpu_pc
    kvm_arch_vcpu_ioctl_run -> guest_timing_enter_irqoff
    kvm_arch_vcpu_ioctl_run -> kvm_arm_vcpu_enter_exit
    kvm_arch_vcpu_ioctl_run -> kvm_arm_clear_debug
    kvm_arch_vcpu_ioctl_run -> kvm_arch_vcpu_ctxsync_fp
    kvm_arch_vcpu_ioctl_run -> ARM_EXCEPTION_CODE
    kvm_arch_vcpu_ioctl_run -> guest_timing_exit_irqoff
    kvm_arch_vcpu_ioctl_run -> trace_kvm_exit
    kvm_arch_vcpu_ioctl_run -> kvm_vcpu_trap_get_class
    kvm_arch_vcpu_ioctl_run -> handle_exit_early
    kvm_arch_vcpu_ioctl_run -> vcpu_mode_is_bad_32bit
    kvm_arch_vcpu_ioctl_run -> vcpu_clear_flag
    kvm_arch_vcpu_ioctl_run -> handle_exit
    kvm_arch_vcpu_ioctl_run -> unlikely
    kvm_arch_vcpu_ioctl_run -> irqchip_in_kernel
    kvm_arch_vcpu_ioctl_run -> kvm_timer_update_run
    kvm_arch_vcpu_ioctl_run -> kvm_pmu_update_run
    kvm_arch_vcpu_ioctl_run -> kvm_sigset_deactivate
    kvm_arch_vcpu_ioctl_run -> vcpu_get_flag
    kvm_arch_vcpu_ioctl_run -> kvm_call_hyp
    kvm_arch_vcpu_ioctl_run -> vcpu_put
    vcpu_load [label="void vcpu_load (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:208"]
    vcpu_load -> get_cpu
    vcpu_load -> preempt_notifier_register
    vcpu_load -> kvm_arch_vcpu_load
    vcpu_load -> put_cpu
    preempt_notifier_register [label="preempt_notifier_register()"]
    kvm_sigset_activate [label="void kvm_sigset_activate (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3386"]
    kvm_sigset_activate -> sigprocmask
    sigprocmask [label="sigprocmask()"]
    xfer_to_guest_mode_handle_work [label="xfer_to_guest_mode_handle_work()"]
    check_vcpu_requests [label="int check_vcpu_requests (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:833"]
    check_vcpu_requests -> kvm_request_pending
    check_vcpu_requests -> kvm_check_request
    check_vcpu_requests -> kvm_vcpu_sleep
    check_vcpu_requests -> kvm_reset_vcpu
    check_vcpu_requests -> kvm_update_stolen_time
    check_vcpu_requests -> preempt_disable
    check_vcpu_requests -> vgic_v4_put
    check_vcpu_requests -> vgic_v4_load
    check_vcpu_requests -> preempt_enable
    check_vcpu_requests -> kvm_vcpu_reload_pmu
    check_vcpu_requests -> kvm_vcpu_pmu_restore_guest
    check_vcpu_requests -> kvm_vcpu_suspend
    check_vcpu_requests -> kvm_dirty_ring_check_request
    kvm_request_pending [label="kvm_request_pending()"]
    kvm_vcpu_sleep [label="void kvm_vcpu_sleep (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:735"]
    kvm_vcpu_sleep -> kvm_arch_vcpu_get_wait
    kvm_vcpu_sleep -> rcuwait_wait_event
    kvm_vcpu_sleep -> kvm_arm_vcpu_stopped
    kvm_vcpu_sleep -> kvm_make_request
    kvm_vcpu_sleep -> smp_rmb
    rcuwait_wait_event [label="rcuwait_wait_event()"]
    kvm_reset_vcpu [label="void kvm_reset_vcpu (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:191"]
    kvm_reset_vcpu -> bool
    kvm_reset_vcpu -> spin_lock
    kvm_reset_vcpu -> spin_unlock
    kvm_reset_vcpu -> kvm_pmu_vcpu_reset
    kvm_reset_vcpu -> preempt_disable
    kvm_reset_vcpu -> kvm_arch_vcpu_put
    kvm_reset_vcpu -> kvm_arm_vcpu_sve_finalized
    kvm_reset_vcpu -> vcpu_has_feature
    kvm_reset_vcpu -> kvm_vcpu_enable_sve
    kvm_reset_vcpu -> kvm_vcpu_reset_sve
    kvm_reset_vcpu -> kvm_vcpu_enable_ptrauth
    kvm_reset_vcpu -> vcpu_el1_is_32bit
    kvm_reset_vcpu -> vcpu_has_nv
    kvm_reset_vcpu -> memset
    kvm_reset_vcpu -> vcpu_gp_regs
    kvm_reset_vcpu -> kvm_reset_sys_regs
    kvm_reset_vcpu -> vcpu_mode_is_32bit
    kvm_reset_vcpu -> vcpu_set_thumb
    kvm_reset_vcpu -> kvm_vcpu_set_be
    kvm_reset_vcpu -> vcpu_pc
    kvm_reset_vcpu -> vcpu_set_reg
    kvm_reset_vcpu -> kvm_timer_vcpu_reset
    kvm_reset_vcpu -> kvm_arch_vcpu_load
    kvm_reset_vcpu -> smp_processor_id
    kvm_reset_vcpu -> preempt_enable
    kvm_pmu_vcpu_reset [label="void kvm_pmu_vcpu_reset (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:245"]
    kvm_pmu_vcpu_reset -> kvm_pmu_valid_counter_mask
    kvm_pmu_vcpu_reset -> for_each_set_bit
    kvm_pmu_vcpu_reset -> kvm_pmu_stop_counter
    kvm_pmu_vcpu_reset -> kvm_vcpu_idx_to_pmc
    vcpu_has_feature [label="vcpu_has_feature()"]
    kvm_vcpu_enable_sve [label="void kvm_vcpu_enable_sve (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:76"]
    kvm_vcpu_enable_sve -> vcpu_set_flag
    kvm_vcpu_reset_sve [label="void kvm_vcpu_reset_sve (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:162"]
    kvm_vcpu_reset_sve -> vcpu_has_sve
    kvm_vcpu_reset_sve -> memset
    kvm_vcpu_reset_sve -> vcpu_sve_state_size
    kvm_vcpu_enable_ptrauth [label="void kvm_vcpu_enable_ptrauth (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:168"]
    kvm_vcpu_enable_ptrauth -> vcpu_set_flag
    vcpu_gp_regs [label="vcpu_gp_regs()"]
    kvm_reset_sys_regs [label="void kvm_reset_sys_regs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3313"]
    kvm_reset_sys_regs -> kvm_reset_id_regs
    kvm_reset_sys_regs -> ARRAY_SIZE
    kvm_reset_sys_regs -> is_id_reg
    kvm_reset_sys_regs -> reg_to_encoding
    kvm_reset_id_regs [label="void kvm_reset_id_regs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3284"]
    kvm_reset_id_regs -> reg_to_encoding
    kvm_reset_id_regs -> test_bit
    kvm_reset_id_regs -> lockdep_assert_held
    kvm_reset_id_regs -> is_id_reg
    kvm_reset_id_regs -> IDREG
    kvm_reset_id_regs -> set_bit
    is_id_reg [label="inline bool is_id_reg (u32 id)
arch/arm64/kvm/sys_regs.c:1449"]
    is_id_reg -> sys_reg_Op0
    is_id_reg -> sys_reg_Op1
    is_id_reg -> sys_reg_CRn
    is_id_reg -> sys_reg_CRm
    vcpu_set_thumb [label="vcpu_set_thumb()"]
    kvm_vcpu_set_be [label="kvm_vcpu_set_be()"]
    kvm_timer_vcpu_reset [label="void kvm_timer_vcpu_reset (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:939"]
    kvm_timer_vcpu_reset -> vcpu_timer
    kvm_timer_vcpu_reset -> get_timer_map
    kvm_timer_vcpu_reset -> timer_set_ctl
    kvm_timer_vcpu_reset -> vcpu_get_timer
    kvm_timer_vcpu_reset -> vcpu_has_nv
    kvm_timer_vcpu_reset -> vcpu_vtimer
    kvm_timer_vcpu_reset -> kvm_timer_update_irq
    kvm_timer_vcpu_reset -> irqchip_in_kernel
    kvm_timer_vcpu_reset -> kvm_vgic_reset_mapped_irq
    kvm_timer_vcpu_reset -> timer_irq
    kvm_timer_vcpu_reset -> soft_timer_cancel
    kvm_vgic_reset_mapped_irq [label="kvm_vgic_reset_mapped_irq()"]
    kvm_update_stolen_time [label="void kvm_update_stolen_time (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pvtime.c:13"]
    kvm_update_stolen_time -> offsetof
    kvm_update_stolen_time -> srcu_read_lock
    kvm_update_stolen_time -> kvm_get_guest
    kvm_update_stolen_time -> le64_to_cpu
    kvm_update_stolen_time -> READ_ONCE
    kvm_update_stolen_time -> kvm_put_guest
    kvm_update_stolen_time -> cpu_to_le64
    kvm_update_stolen_time -> srcu_read_unlock
    kvm_get_guest [label="kvm_get_guest()"]
    le64_to_cpu [label="le64_to_cpu()"]
    kvm_put_guest [label="kvm_put_guest()"]
    cpu_to_le64 [label="cpu_to_le64()"]
    kvm_vcpu_reload_pmu [label="void kvm_vcpu_reload_pmu (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:806"]
    kvm_vcpu_reload_pmu -> kvm_pmu_valid_counter_mask
    kvm_vcpu_reload_pmu -> kvm_pmu_handle_pmcr
    kvm_vcpu_reload_pmu -> kvm_vcpu_read_pmcr
    kvm_vcpu_suspend [label="int kvm_vcpu_suspend (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:791"]
    kvm_vcpu_suspend -> kvm_arm_vcpu_suspended
    kvm_vcpu_suspend -> kvm_vcpu_wfi
    kvm_vcpu_suspend -> kvm_make_request
    kvm_vcpu_suspend -> kvm_arch_vcpu_runnable
    kvm_vcpu_suspend -> memset
    kvm_arm_vcpu_suspended [label="bool kvm_arm_vcpu_suspended (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:514"]
    kvm_arm_vcpu_suspended -> READ_ONCE
    kvm_dirty_ring_check_request [label="bool kvm_dirty_ring_check_request (struct kvm_vcpu *vcpu)
virt/kvm/dirty_ring.c:194"]
    kvm_dirty_ring_check_request -> kvm_check_request
    kvm_dirty_ring_check_request -> kvm_dirty_ring_soft_full
    kvm_dirty_ring_check_request -> kvm_make_request
    kvm_dirty_ring_check_request -> trace_kvm_dirty_ring_exit
    trace_kvm_dirty_ring_exit [label="trace_kvm_dirty_ring_exit()"]
    kvm_arm_vmid_update [label="bool kvm_arm_vmid_update (struct kvm_vmid *kvm_vmid)
arch/arm64/kvm/vmid.c:138"]
    kvm_arm_vmid_update -> bool
    kvm_arm_vmid_update -> atomic64_read
    kvm_arm_vmid_update -> this_cpu_ptr
    kvm_arm_vmid_update -> vmid_gen_match
    kvm_arm_vmid_update -> atomic64_cmpxchg_relaxed
    kvm_arm_vmid_update -> raw_spin_lock_irqsave
    kvm_arm_vmid_update -> new_vmid
    kvm_arm_vmid_update -> atomic64_set
    kvm_arm_vmid_update -> raw_spin_unlock_irqrestore
    atomic64_read [label="atomic64_read()"]
    vmid_gen_match [label="vmid_gen_match()"]
    atomic64_cmpxchg_relaxed [label="atomic64_cmpxchg_relaxed()"]
    raw_spin_lock_irqsave [label="raw_spin_lock_irqsave()"]
    new_vmid [label="u64 new_vmid (struct kvm_vmid *kvm_vmid)
arch/arm64/kvm/vmid.c:92"]
    new_vmid -> atomic64_read
    new_vmid -> check_update_reserved_vmid
    new_vmid -> atomic64_set
    new_vmid -> vmid2idx
    new_vmid -> find_next_zero_bit
    new_vmid -> atomic64_add_return_relaxed
    new_vmid -> flush_context
    new_vmid -> idx2vmid
    check_update_reserved_vmid [label="bool check_update_reserved_vmid (u64 vmid, u64 newvmid)
arch/arm64/kvm/vmid.c:72"]
    check_update_reserved_vmid -> bool
    check_update_reserved_vmid -> for_each_possible_cpu
    check_update_reserved_vmid -> per_cpu
    vmid2idx [label="vmid2idx()"]
    find_next_zero_bit [label="find_next_zero_bit()"]
    atomic64_add_return_relaxed [label="atomic64_add_return_relaxed()"]
    flush_context [label="void flush_context (void)
arch/arm64/kvm/vmid.c:45"]
    flush_context -> bitmap_zero
    flush_context -> for_each_possible_cpu
    flush_context -> atomic64_xchg_relaxed
    flush_context -> per_cpu
    flush_context -> vmid2idx
    flush_context -> kvm_call_hyp
    atomic64_xchg_relaxed [label="atomic64_xchg_relaxed()"]
    idx2vmid [label="idx2vmid()"]
    raw_spin_unlock_irqrestore [label="raw_spin_unlock_irqrestore()"]
    kvm_pmu_flush_hwstate [label="void kvm_pmu_flush_hwstate (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:406"]
    kvm_pmu_flush_hwstate -> kvm_pmu_update_state
    kvm_pmu_update_state [label="void kvm_pmu_update_state (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:353"]
    kvm_pmu_update_state -> bool
    kvm_pmu_update_state -> kvm_vcpu_has_pmu
    kvm_pmu_update_state -> kvm_pmu_overflow_status
    kvm_pmu_update_state -> likely
    kvm_pmu_update_state -> irqchip_in_kernel
    kvm_pmu_update_state -> kvm_vgic_inject_irq
    kvm_pmu_update_state -> WARN_ON
    local_irq_disable [label="local_irq_disable()"]
    kvm_vgic_flush_hwstate [label="kvm_vgic_flush_hwstate()"]
    kvm_pmu_update_vcpu_events [label="kvm_pmu_update_vcpu_events()"]
    smp_store_mb [label="smp_store_mb()"]
    kvm_vcpu_exit_request [label="bool kvm_vcpu_exit_request (struct kvm_vcpu *vcpu, int *ret)
arch/arm64/kvm/arm.c:900"]
    kvm_vcpu_exit_request -> static_branch_unlikely
    kvm_vcpu_exit_request -> kvm_timer_should_notify_user
    kvm_vcpu_exit_request -> kvm_pmu_should_notify_user
    kvm_vcpu_exit_request -> unlikely
    kvm_vcpu_exit_request -> vcpu_on_unsupported_cpu
    kvm_vcpu_exit_request -> smp_processor_id
    kvm_vcpu_exit_request -> kvm_request_pending
    kvm_vcpu_exit_request -> xfer_to_guest_mode_work_pending
    kvm_timer_should_notify_user [label="bool kvm_timer_should_notify_user (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:861"]
    kvm_timer_should_notify_user -> vcpu_vtimer
    kvm_timer_should_notify_user -> vcpu_ptimer
    kvm_timer_should_notify_user -> bool
    kvm_timer_should_notify_user -> likely
    kvm_timer_should_notify_user -> irqchip_in_kernel
    kvm_timer_should_notify_user -> kvm_timer_should_fire
    kvm_pmu_should_notify_user [label="bool kvm_pmu_should_notify_user (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:374"]
    kvm_pmu_should_notify_user -> bool
    kvm_pmu_should_notify_user -> likely
    kvm_pmu_should_notify_user -> irqchip_in_kernel
    vcpu_on_unsupported_cpu [label="vcpu_on_unsupported_cpu()"]
    xfer_to_guest_mode_work_pending [label="xfer_to_guest_mode_work_pending()"]
    kvm_pmu_sync_hwstate [label="void kvm_pmu_sync_hwstate (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:418"]
    kvm_pmu_sync_hwstate -> kvm_pmu_update_state
    kvm_timer_sync_user [label="void kvm_timer_sync_user (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:928"]
    kvm_timer_sync_user -> vcpu_timer
    kvm_timer_sync_user -> unlikely
    kvm_timer_sync_user -> irqchip_in_kernel
    kvm_timer_sync_user -> unmask_vtimer_irq_user
    unmask_vtimer_irq_user [label="void unmask_vtimer_irq_user (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:915"]
    unmask_vtimer_irq_user -> vcpu_vtimer
    unmask_vtimer_irq_user -> kvm_timer_should_fire
    unmask_vtimer_irq_user -> kvm_timer_update_irq
    unmask_vtimer_irq_user -> static_branch_likely
    unmask_vtimer_irq_user -> set_timer_irq_phys_active
    unmask_vtimer_irq_user -> enable_percpu_irq
    kvm_vgic_sync_hwstate [label="kvm_vgic_sync_hwstate()"]
    local_irq_enable [label="local_irq_enable()"]
    kvm_arm_setup_debug [label="void kvm_arm_setup_debug (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:169"]
    kvm_arm_setup_debug -> trace_kvm_arm_setup_debug
    kvm_arm_setup_debug -> kvm_arm_setup_mdcr_el2
    kvm_arm_setup_debug -> kvm_vcpu_os_lock_enabled
    kvm_arm_setup_debug -> save_guest_debug_regs
    kvm_arm_setup_debug -> vcpu_get_flag
    kvm_arm_setup_debug -> vcpu_cpsr
    kvm_arm_setup_debug -> vcpu_read_sys_reg
    kvm_arm_setup_debug -> vcpu_write_sys_reg
    kvm_arm_setup_debug -> trace_kvm_arm_set_dreg32
    kvm_arm_setup_debug -> vcpu_set_flag
    kvm_arm_setup_debug -> trace_kvm_arm_set_regset
    kvm_arm_setup_debug -> get_num_brps
    kvm_arm_setup_debug -> get_num_wrps
    kvm_arm_setup_debug -> BUG_ON
    kvm_arm_setup_debug -> has_vhe
    kvm_arm_setup_debug -> write_sysreg
    trace_kvm_arm_setup_debug [label="trace_kvm_arm_setup_debug()"]
    save_guest_debug_regs [label="void save_guest_debug_regs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:40"]
    save_guest_debug_regs -> vcpu_read_sys_reg
    save_guest_debug_regs -> trace_kvm_arm_set_dreg32
    save_guest_debug_regs -> vcpu_cpsr
    trace_kvm_arm_set_regset [label="trace_kvm_arm_set_regset()"]
    kvm_arch_vcpu_ctxflush_fp [label="void kvm_arch_vcpu_ctxflush_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:126"]
    kvm_arch_vcpu_ctxflush_fp -> test_thread_flag
    test_thread_flag [label="test_thread_flag()"]
    trace_kvm_entry [label="trace_kvm_entry()"]
    guest_timing_enter_irqoff [label="guest_timing_enter_irqoff()"]
    kvm_arm_vcpu_enter_exit [label="int noinstr kvm_arm_vcpu_enter_exit (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:939"]
    kvm_arm_vcpu_enter_exit -> guest_state_enter_irqoff
    kvm_arm_vcpu_enter_exit -> kvm_call_hyp_ret
    kvm_arm_vcpu_enter_exit -> guest_state_exit_irqoff
    guest_state_enter_irqoff [label="guest_state_enter_irqoff()"]
    guest_state_exit_irqoff [label="guest_state_exit_irqoff()"]
    kvm_arm_clear_debug [label="void kvm_arm_clear_debug (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:280"]
    kvm_arm_clear_debug -> trace_kvm_arm_clear_debug
    kvm_arm_clear_debug -> kvm_vcpu_os_lock_enabled
    kvm_arm_clear_debug -> vcpu_cpsr
    kvm_arm_clear_debug -> vcpu_set_flag
    kvm_arm_clear_debug -> restore_guest_debug_regs
    kvm_arm_clear_debug -> kvm_arm_reset_debug_ptr
    kvm_arm_clear_debug -> trace_kvm_arm_set_regset
    kvm_arm_clear_debug -> get_num_brps
    kvm_arm_clear_debug -> get_num_wrps
    trace_kvm_arm_clear_debug [label="trace_kvm_arm_clear_debug()"]
    restore_guest_debug_regs [label="void restore_guest_debug_regs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:53"]
    restore_guest_debug_regs -> vcpu_write_sys_reg
    restore_guest_debug_regs -> trace_kvm_arm_set_dreg32
    restore_guest_debug_regs -> vcpu_read_sys_reg
    restore_guest_debug_regs -> vcpu_cpsr
    kvm_arm_reset_debug_ptr [label="void kvm_arm_reset_debug_ptr (struct kvm_vcpu *vcpu)
arch/arm64/kvm/debug.c:148"]
    kvm_arch_vcpu_ctxsync_fp [label="void kvm_arch_vcpu_ctxsync_fp (struct kvm_vcpu *vcpu)
arch/arm64/kvm/fpsimd.c:139"]
    kvm_arch_vcpu_ctxsync_fp -> WARN_ON_ONCE
    kvm_arch_vcpu_ctxsync_fp -> irqs_disabled
    kvm_arch_vcpu_ctxsync_fp -> vcpu_has_sve
    kvm_arch_vcpu_ctxsync_fp -> fpsimd_bind_state_to_cpu
    kvm_arch_vcpu_ctxsync_fp -> clear_thread_flag
    irqs_disabled [label="irqs_disabled()"]
    fpsimd_bind_state_to_cpu [label="fpsimd_bind_state_to_cpu()"]
    clear_thread_flag [label="clear_thread_flag()"]
    ARM_EXCEPTION_CODE [label="ARM_EXCEPTION_CODE()"]
    guest_timing_exit_irqoff [label="guest_timing_exit_irqoff()"]
    trace_kvm_exit [label="trace_kvm_exit()"]
    handle_exit_early [label="void handle_exit_early (struct kvm_vcpu *vcpu, int exception_index)
arch/arm64/kvm/handle_exit.c:366"]
    handle_exit_early -> ARM_SERROR_PENDING
    handle_exit_early -> this_cpu_has_cap
    handle_exit_early -> kvm_vcpu_get_disr
    handle_exit_early -> kvm_handle_guest_serror
    handle_exit_early -> disr_to_esr
    handle_exit_early -> kvm_inject_vabt
    handle_exit_early -> ARM_EXCEPTION_CODE
    handle_exit_early -> kvm_vcpu_get_esr
    ARM_SERROR_PENDING [label="ARM_SERROR_PENDING()"]
    kvm_vcpu_get_disr [label="kvm_vcpu_get_disr()"]
    kvm_handle_guest_serror [label="void kvm_handle_guest_serror (struct kvm_vcpu *vcpu, u64 esr)
arch/arm64/kvm/handle_exit.c:31"]
    kvm_handle_guest_serror -> arm64_is_ras_serror
    kvm_handle_guest_serror -> arm64_is_fatal_ras_serror
    kvm_handle_guest_serror -> kvm_inject_vabt
    arm64_is_ras_serror [label="arm64_is_ras_serror()"]
    arm64_is_fatal_ras_serror [label="arm64_is_fatal_ras_serror()"]
    disr_to_esr [label="disr_to_esr()"]
    vcpu_mode_is_bad_32bit [label="bool vcpu_mode_is_bad_32bit (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:875"]
    vcpu_mode_is_bad_32bit -> likely
    vcpu_mode_is_bad_32bit -> vcpu_mode_is_32bit
    vcpu_mode_is_bad_32bit -> vcpu_has_nv
    vcpu_mode_is_bad_32bit -> kvm_supports_32bit_el0
    handle_exit [label="int handle_exit (struct kvm_vcpu *vcpu, int exception_index)
arch/arm64/kvm/handle_exit.c:322"]
    handle_exit -> ARM_SERROR_PENDING
    handle_exit -> ARM_EXCEPTION_CODE
    handle_exit -> handle_trap_exceptions
    handle_exit -> kvm_pr_unimpl
    handle_trap_exceptions [label="int handle_trap_exceptions (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:297"]
    handle_trap_exceptions -> kvm_condition_valid
    handle_trap_exceptions -> kvm_incr_pc
    handle_trap_exceptions -> kvm_get_exit_handler
    kvm_condition_valid [label="kvm_condition_valid()"]
    kvm_get_exit_handler [label="exit_handle_fn kvm_get_exit_handler (struct kvm_vcpu *vcpu)
arch/arm64/kvm/handle_exit.c:283"]
    kvm_get_exit_handler -> kvm_vcpu_get_esr
    kvm_get_exit_handler -> ESR_ELx_EC
    kvm_timer_update_run [label="void kvm_timer_update_run (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:431"]
    kvm_timer_update_run -> vcpu_vtimer
    kvm_timer_update_run -> vcpu_ptimer
    kvm_timer_update_run -> kvm_timer_should_fire
    kvm_pmu_update_run [label="void kvm_pmu_update_run (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:389"]
    kvm_sigset_deactivate [label="void kvm_sigset_deactivate (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3400"]
    kvm_sigset_deactivate -> sigprocmask
    kvm_sigset_deactivate -> sigemptyset
    sigemptyset [label="sigemptyset()"]
    vcpu_put [label="void vcpu_put (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:219"]
    vcpu_put -> preempt_disable
    vcpu_put -> kvm_arch_vcpu_put
    vcpu_put -> preempt_notifier_unregister
    vcpu_put -> preempt_enable
    preempt_notifier_unregister [label="preempt_notifier_unregister()"]
    trace_kvm_userspace_exit [label="trace_kvm_userspace_exit()"]
    kvm_arch_vcpu_ioctl_get_regs [label="int kvm_arch_vcpu_ioctl_get_regs (struct kvm_vcpu *vcpu, struct kvm_regs *regs)
arch/arm64/kvm/guest.c:535"]
    memdup_user [label="memdup_user()"]
    kvm_arch_vcpu_ioctl_set_regs [label="int kvm_arch_vcpu_ioctl_set_regs (struct kvm_vcpu *vcpu, struct kvm_regs *regs)
arch/arm64/kvm/guest.c:540"]
    kvm_arch_vcpu_ioctl_get_sregs [label="int kvm_arch_vcpu_ioctl_get_sregs (struct kvm_vcpu *vcpu, struct kvm_sregs *sregs)
arch/arm64/kvm/guest.c:802"]
    kvm_arch_vcpu_ioctl_set_sregs [label="int kvm_arch_vcpu_ioctl_set_sregs (struct kvm_vcpu *vcpu, struct kvm_sregs *sregs)
arch/arm64/kvm/guest.c:808"]
    kvm_arch_vcpu_ioctl_get_mpstate [label="int kvm_arch_vcpu_ioctl_get_mpstate (struct kvm_vcpu *vcpu, struct kvm_mp_state *mp_state)
arch/arm64/kvm/arm.c:519"]
    kvm_arch_vcpu_ioctl_get_mpstate -> READ_ONCE
    kvm_arch_vcpu_ioctl_set_mpstate [label="int kvm_arch_vcpu_ioctl_set_mpstate (struct kvm_vcpu *vcpu, struct kvm_mp_state *mp_state)
arch/arm64/kvm/arm.c:527"]
    kvm_arch_vcpu_ioctl_set_mpstate -> spin_lock
    kvm_arch_vcpu_ioctl_set_mpstate -> WRITE_ONCE
    kvm_arch_vcpu_ioctl_set_mpstate -> kvm_arm_vcpu_suspend
    kvm_arch_vcpu_ioctl_set_mpstate -> spin_unlock
    kvm_arm_vcpu_suspend [label="void kvm_arm_vcpu_suspend (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:507"]
    kvm_arm_vcpu_suspend -> WRITE_ONCE
    kvm_arm_vcpu_suspend -> kvm_make_request
    kvm_arm_vcpu_suspend -> kvm_vcpu_kick
    kvm_arch_vcpu_ioctl_translate [label="int kvm_arch_vcpu_ioctl_translate (struct kvm_vcpu *vcpu, struct kvm_translation *tr)
arch/arm64/kvm/guest.c:897"]
    kvm_arch_vcpu_ioctl_set_guest_debug [label="int kvm_arch_vcpu_ioctl_set_guest_debug (struct kvm_vcpu *vcpu, struct kvm_guest_debug *dbg)
arch/arm64/kvm/guest.c:913"]
    kvm_arch_vcpu_ioctl_set_guest_debug -> trace_kvm_set_guest_debug
    kvm_arch_vcpu_ioctl_set_guest_debug -> vcpu_clear_flag
    trace_kvm_set_guest_debug [label="trace_kvm_set_guest_debug()"]
    kvm_arch_vcpu_ioctl_get_fpu [label="int kvm_arch_vcpu_ioctl_get_fpu (struct kvm_vcpu *vcpu, struct kvm_fpu *fpu)
arch/arm64/kvm/guest.c:887"]
    kvm_arch_vcpu_ioctl_set_fpu [label="int kvm_arch_vcpu_ioctl_set_fpu (struct kvm_vcpu *vcpu, struct kvm_fpu *fpu)
arch/arm64/kvm/guest.c:892"]
    kvm_vcpu_ioctl_get_stats_fd [label="int kvm_vcpu_ioctl_get_stats_fd (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:4083"]
    kvm_vcpu_ioctl_get_stats_fd -> snprintf
    kvm_vcpu_ioctl_get_stats_fd -> get_unused_fd_flags
    kvm_vcpu_ioctl_get_stats_fd -> anon_inode_getfile
    kvm_vcpu_ioctl_get_stats_fd -> IS_ERR
    kvm_vcpu_ioctl_get_stats_fd -> put_unused_fd
    kvm_vcpu_ioctl_get_stats_fd -> PTR_ERR
    kvm_vcpu_ioctl_get_stats_fd -> kvm_get_kvm
    kvm_vcpu_ioctl_get_stats_fd -> fd_install
    kvm_arch_vcpu_ioctl [label="long kvm_arch_vcpu_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
arch/arm64/kvm/arm.c:1511"]
    kvm_arch_vcpu_ioctl -> copy_from_user
    kvm_arch_vcpu_ioctl -> kvm_arch_vcpu_ioctl_vcpu_init
    kvm_arch_vcpu_ioctl -> unlikely
    kvm_arch_vcpu_ioctl -> kvm_vcpu_initialized
    kvm_arch_vcpu_ioctl -> kvm_check_request
    kvm_arch_vcpu_ioctl -> kvm_reset_vcpu
    kvm_arch_vcpu_ioctl -> kvm_arm_set_reg
    kvm_arch_vcpu_ioctl -> kvm_arm_get_reg
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_is_finalized
    kvm_arch_vcpu_ioctl -> kvm_arm_num_regs
    kvm_arch_vcpu_ioctl -> copy_to_user
    kvm_arch_vcpu_ioctl -> kvm_arm_copy_reg_indices
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_set_attr
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_get_attr
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_has_attr
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_get_events
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_set_events
    kvm_arch_vcpu_ioctl -> get_user
    kvm_arch_vcpu_ioctl -> kvm_arm_vcpu_finalize
    kvm_arch_vcpu_ioctl_vcpu_init [label="int kvm_arch_vcpu_ioctl_vcpu_init (struct kvm_vcpu *vcpu, struct kvm_vcpu_init *init)
arch/arm64/kvm/arm.c:1389"]
    kvm_arch_vcpu_ioctl_vcpu_init -> bool
    kvm_arch_vcpu_ioctl_vcpu_init -> BIT
    kvm_arch_vcpu_ioctl_vcpu_init -> kvm_vcpu_set_target
    kvm_arch_vcpu_ioctl_vcpu_init -> vcpu_has_run_once
    kvm_arch_vcpu_ioctl_vcpu_init -> cpus_have_final_cap
    kvm_arch_vcpu_ioctl_vcpu_init -> stage2_unmap_vm
    kvm_arch_vcpu_ioctl_vcpu_init -> icache_inval_all_pou
    kvm_arch_vcpu_ioctl_vcpu_init -> vcpu_reset_hcr
    kvm_arch_vcpu_ioctl_vcpu_init -> kvm_get_reset_cptr_el2
    kvm_arch_vcpu_ioctl_vcpu_init -> spin_lock
    kvm_arch_vcpu_ioctl_vcpu_init -> WRITE_ONCE
    kvm_arch_vcpu_ioctl_vcpu_init -> spin_unlock
    kvm_vcpu_set_target [label="int kvm_vcpu_set_target (struct kvm_vcpu *vcpu, const struct kvm_vcpu_init *init)
arch/arm64/kvm/arm.c:1366"]
    kvm_vcpu_set_target -> kvm_target_cpu
    kvm_vcpu_set_target -> kvm_vcpu_init_check_features
    kvm_vcpu_set_target -> kvm_vcpu_initialized
    kvm_vcpu_set_target -> kvm_vcpu_init_changed
    kvm_vcpu_set_target -> kvm_reset_vcpu
    kvm_target_cpu [label="u32 __attribute_const__ kvm_target_cpu (void)
arch/arm64/kvm/guest.c:857"]
    kvm_target_cpu -> read_cpuid_implementor
    kvm_target_cpu -> read_cpuid_part_number
    read_cpuid_implementor [label="read_cpuid_implementor()"]
    read_cpuid_part_number [label="read_cpuid_part_number()"]
    kvm_vcpu_init_check_features [label="int kvm_vcpu_init_check_features (struct kvm_vcpu *vcpu, const struct kvm_vcpu_init *init)
arch/arm64/kvm/arm.c:1268"]
    kvm_vcpu_init_check_features -> ARRAY_SIZE
    kvm_vcpu_init_check_features -> system_supported_vcpu_features
    kvm_vcpu_init_check_features -> test_bit
    kvm_vcpu_init_check_features -> kvm_has_mte
    system_supported_vcpu_features [label="unsigned long system_supported_vcpu_features (void)
arch/arm64/kvm/arm.c:1244"]
    system_supported_vcpu_features -> cpus_have_final_cap
    system_supported_vcpu_features -> clear_bit
    system_supported_vcpu_features -> kvm_arm_support_pmu_v3
    system_supported_vcpu_features -> system_supports_sve
    system_supported_vcpu_features -> system_has_full_ptr_auth
    clear_bit [label="clear_bit()"]
    kvm_vcpu_init_changed [label="bool kvm_vcpu_init_changed (struct kvm_vcpu *vcpu, const struct kvm_vcpu_init *init)
arch/arm64/kvm/arm.c:1312"]
    kvm_vcpu_init_changed -> bitmap_equal
    bitmap_equal [label="bitmap_equal()"]
    stage2_unmap_vm [label="void stage2_unmap_vm (struct kvm *kvm)
arch/arm64/kvm/mmu.c:990"]
    stage2_unmap_vm -> srcu_read_lock
    stage2_unmap_vm -> mmap_read_lock
    stage2_unmap_vm -> write_lock
    stage2_unmap_vm -> kvm_memslots
    stage2_unmap_vm -> kvm_for_each_memslot
    stage2_unmap_vm -> stage2_unmap_memslot
    stage2_unmap_vm -> write_unlock
    stage2_unmap_vm -> mmap_read_unlock
    stage2_unmap_vm -> srcu_read_unlock
    stage2_unmap_memslot [label="void stage2_unmap_memslot (struct kvm *kvm, struct kvm_memory_slot *memslot)
arch/arm64/kvm/mmu.c:941"]
    stage2_unmap_memslot -> find_vma_intersection
    stage2_unmap_memslot -> max
    stage2_unmap_memslot -> min
    stage2_unmap_memslot -> unmap_stage2_range
    find_vma_intersection [label="find_vma_intersection()"]
    unmap_stage2_range [label="void unmap_stage2_range (struct kvm_s2_mmu *mmu, phys_addr_t start, u64 size)
arch/arm64/kvm/mmu.c:331"]
    icache_inval_all_pou [label="icache_inval_all_pou()"]
    vcpu_reset_hcr [label="vcpu_reset_hcr()"]
    kvm_get_reset_cptr_el2 [label="kvm_get_reset_cptr_el2()"]
    kvm_arm_set_reg [label="int kvm_arm_set_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:782"]
    kvm_arm_set_reg -> set_core_reg
    kvm_arm_set_reg -> kvm_arm_set_fw_reg
    kvm_arm_set_reg -> set_sve_reg
    kvm_arm_set_reg -> is_timer_reg
    kvm_arm_set_reg -> set_timer_reg
    kvm_arm_set_reg -> kvm_arm_sys_reg_set_reg
    set_core_reg [label="int set_core_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:215"]
    set_core_reg -> core_reg_offset_from_id
    set_core_reg -> KVM_REG_SIZE
    set_core_reg -> core_reg_addr
    set_core_reg -> copy_from_user
    set_core_reg -> KVM_REG_ARM_CORE_REG
    set_core_reg -> kvm_supports_32bit_el0
    set_core_reg -> vcpu_el1_is_32bit
    set_core_reg -> vcpu_has_nv
    set_core_reg -> memcpy
    set_core_reg -> vcpu_cpsr
    set_core_reg -> vcpu_set_reg
    set_core_reg -> vcpu_get_reg
    set_core_reg -> vcpu_pc
    core_reg_offset_from_id [label="u64 core_reg_offset_from_id (u64 id)
arch/arm64/kvm/guest.c:71"]
    KVM_REG_SIZE [label="KVM_REG_SIZE()"]
    core_reg_addr [label="void *core_reg_addr (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:121"]
    core_reg_addr -> core_reg_offset_from_id
    core_reg_addr -> core_reg_size_from_offset
    core_reg_addr -> KVM_REG_SIZE
    core_reg_addr -> KVM_REG_ARM_CORE_REG
    core_reg_size_from_offset [label="int core_reg_size_from_offset (const struct kvm_vcpu *vcpu, u64 off)
arch/arm64/kvm/guest.c:76"]
    core_reg_size_from_offset -> KVM_REG_ARM_CORE_REG
    core_reg_size_from_offset -> IS_ALIGNED
    core_reg_size_from_offset -> vcpu_has_sve
    core_reg_size_from_offset -> core_reg_offset_is_vreg
    KVM_REG_ARM_CORE_REG [label="KVM_REG_ARM_CORE_REG()"]
    core_reg_offset_is_vreg [label="bool core_reg_offset_is_vreg (u64 off)
arch/arm64/kvm/guest.c:65"]
    core_reg_offset_is_vreg -> KVM_REG_ARM_CORE_REG
    kvm_arm_set_fw_reg [label="int kvm_arm_set_fw_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/hypercalls.c:551"]
    kvm_arm_set_fw_reg -> KVM_REG_SIZE
    kvm_arm_set_fw_reg -> copy_from_user
    kvm_arm_set_fw_reg -> bool
    kvm_arm_set_fw_reg -> vcpu_has_feature
    kvm_arm_set_fw_reg -> get_kernel_wa_level
    kvm_arm_set_fw_reg -> kvm_arm_set_fw_reg_bmap
    get_kernel_wa_level [label="int get_kernel_wa_level (u64 regid)
arch/arm64/kvm/hypercalls.c:431"]
    get_kernel_wa_level -> arm64_get_spectre_v2_state
    get_kernel_wa_level -> arm64_get_spectre_v4_state
    get_kernel_wa_level -> cpus_have_final_cap
    get_kernel_wa_level -> arm64_get_spectre_bhb_state
    kvm_arm_set_fw_reg_bmap [label="int kvm_arm_set_fw_reg_bmap (struct kvm_vcpu *vcpu, u64 reg_id, u64 val)
arch/arm64/kvm/hypercalls.c:510"]
    kvm_arm_set_fw_reg_bmap -> mutex_lock
    kvm_arm_set_fw_reg_bmap -> kvm_vm_has_ran_once
    kvm_arm_set_fw_reg_bmap -> WRITE_ONCE
    kvm_arm_set_fw_reg_bmap -> mutex_unlock
    set_sve_reg [label="int set_sve_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:510"]
    set_sve_reg -> set_sve_vls
    set_sve_reg -> sve_reg_to_region
    set_sve_reg -> kvm_arm_vcpu_sve_finalized
    set_sve_reg -> copy_from_user
    set_sve_vls [label="int set_sve_vls (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:336"]
    set_sve_vls -> vcpu_has_sve
    set_sve_vls -> kvm_arm_vcpu_sve_finalized
    set_sve_vls -> WARN_ON
    set_sve_vls -> copy_from_user
    set_sve_vls -> vq_present
    set_sve_vls -> sve_vq_from_vl
    set_sve_vls -> sve_vq_available
    set_sve_vls -> sve_vl_from_vq
    vq_present [label="vq_present()"]
    sve_vq_from_vl [label="sve_vq_from_vl()"]
    sve_vq_available [label="sve_vq_available()"]
    sve_vl_from_vq [label="sve_vl_from_vq()"]
    sve_reg_to_region [label="int sve_reg_to_region (struct sve_state_reg_region *region, struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:417"]
    sve_reg_to_region -> KVM_REG_ARM64_SVE_ZREG
    sve_reg_to_region -> KVM_REG_ARM64_SVE_PREG
    sve_reg_to_region -> KVM_REG_ARM64_SVE_FFR
    sve_reg_to_region -> BUILD_BUG_ON
    sve_reg_to_region -> vcpu_has_sve
    sve_reg_to_region -> vcpu_sve_max_vq
    sve_reg_to_region -> SVE_SIG_ZREG_OFFSET
    sve_reg_to_region -> SVE_SIG_ZREG_SIZE
    sve_reg_to_region -> SVE_SIG_PREG_OFFSET
    sve_reg_to_region -> SVE_SIG_PREG_SIZE
    sve_reg_to_region -> vcpu_sve_state_size
    sve_reg_to_region -> WARN_ON
    sve_reg_to_region -> array_index_nospec
    sve_reg_to_region -> min
    KVM_REG_ARM64_SVE_ZREG [label="KVM_REG_ARM64_SVE_ZREG()"]
    KVM_REG_ARM64_SVE_PREG [label="KVM_REG_ARM64_SVE_PREG()"]
    KVM_REG_ARM64_SVE_FFR [label="KVM_REG_ARM64_SVE_FFR()"]
    SVE_SIG_ZREG_OFFSET [label="SVE_SIG_ZREG_OFFSET()"]
    SVE_SIG_ZREG_SIZE [label="SVE_SIG_ZREG_SIZE()"]
    SVE_SIG_PREG_OFFSET [label="SVE_SIG_PREG_OFFSET()"]
    SVE_SIG_PREG_SIZE [label="SVE_SIG_PREG_SIZE()"]
    array_index_nospec [label="array_index_nospec()"]
    is_timer_reg [label="bool is_timer_reg (u64 index)
arch/arm64/kvm/guest.c:604"]
    set_timer_reg [label="int set_timer_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:629"]
    set_timer_reg -> copy_from_user
    set_timer_reg -> KVM_REG_SIZE
    set_timer_reg -> kvm_arm_timer_set_reg
    kvm_arm_timer_set_reg [label="int kvm_arm_timer_set_reg (struct kvm_vcpu *vcpu, u64 regid, u64 value)
arch/arm64/kvm/arch_timer.c:1049"]
    kvm_arm_timer_set_reg -> vcpu_vtimer
    kvm_arm_timer_set_reg -> kvm_arm_timer_write
    kvm_arm_timer_set_reg -> test_bit
    kvm_arm_timer_set_reg -> timer_set_offset
    kvm_arm_timer_set_reg -> kvm_phys_timer_read
    kvm_arm_timer_set_reg -> vcpu_ptimer
    timer_set_offset [label="void timer_set_offset (struct arch_timer_context *ctxt, u64 offset)
arch/arm64/kvm/arch_timer.c:163"]
    timer_set_offset -> WARN
    timer_set_offset -> arch_timer_ctx_index
    timer_set_offset -> WRITE_ONCE
    kvm_arm_sys_reg_set_reg [label="int kvm_arm_sys_reg_set_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/sys_regs.c:3610"]
    kvm_arm_sys_reg_set_reg -> demux_c15_set
    kvm_arm_sys_reg_set_reg -> set_invariant_sys_reg
    kvm_arm_sys_reg_set_reg -> kvm_sys_reg_set_user
    kvm_arm_sys_reg_set_reg -> ARRAY_SIZE
    demux_c15_set [label="int demux_c15_set (struct kvm_vcpu *vcpu, u64 id, void __user *uaddr)
arch/arm64/kvm/sys_regs.c:3513"]
    demux_c15_set -> KVM_REG_SIZE
    demux_c15_set -> get_user
    demux_c15_set -> set_ccsidr
    get_user [label="get_user()"]
    set_ccsidr [label="int set_ccsidr (struct kvm_vcpu *vcpu, u32 csselr, u32 val)
arch/arm64/kvm/sys_regs.c:152"]
    set_ccsidr -> FIELD_GET
    set_ccsidr -> get_min_cache_line_size
    set_ccsidr -> get_ccsidr
    set_ccsidr -> kmalloc_array
    kmalloc_array [label="kmalloc_array()"]
    set_invariant_sys_reg [label="int set_invariant_sys_reg (u64 id, u64 __user *uaddr)
arch/arm64/kvm/sys_regs.c:3468"]
    set_invariant_sys_reg -> get_reg_by_id
    set_invariant_sys_reg -> ARRAY_SIZE
    set_invariant_sys_reg -> get_user
    get_reg_by_id [label="const struct sys_reg_desc *get_reg_by_id (u64 id, const struct sys_reg_desc table[], unsigned int num)
arch/arm64/kvm/sys_regs.c:3389"]
    get_reg_by_id -> index_to_params
    get_reg_by_id -> find_reg
    index_to_params [label="bool index_to_params (u64 id, struct sys_reg_params *params)
arch/arm64/kvm/sys_regs.c:3360"]
    kvm_sys_reg_set_user [label="int kvm_sys_reg_set_user (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg, const struct sys_reg_desc table[], unsigned int num)
arch/arm64/kvm/sys_regs.c:3582"]
    kvm_sys_reg_set_user -> get_user
    kvm_sys_reg_set_user -> id_to_sys_reg_desc
    kvm_sys_reg_set_user -> sysreg_hidden_user
    kvm_sys_reg_set_user -> sysreg_user_write_ignore
    id_to_sys_reg_desc [label="const struct sys_reg_desc *id_to_sys_reg_desc (struct kvm_vcpu *vcpu, u64 id, const struct sys_reg_desc table[], unsigned int num)
arch/arm64/kvm/sys_regs.c:3403"]
    id_to_sys_reg_desc -> get_reg_by_id
    id_to_sys_reg_desc -> sysreg_hidden
    sysreg_hidden_user [label="sysreg_hidden_user()"]
    sysreg_user_write_ignore [label="sysreg_user_write_ignore()"]
    kvm_arm_get_reg [label="int kvm_arm_get_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:762"]
    kvm_arm_get_reg -> get_core_reg
    kvm_arm_get_reg -> kvm_arm_get_fw_reg
    kvm_arm_get_reg -> get_sve_reg
    kvm_arm_get_reg -> is_timer_reg
    kvm_arm_get_reg -> get_timer_reg
    kvm_arm_get_reg -> kvm_arm_sys_reg_get_reg
    get_core_reg [label="int get_core_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:186"]
    get_core_reg -> core_reg_offset_from_id
    get_core_reg -> KVM_REG_SIZE
    get_core_reg -> core_reg_addr
    get_core_reg -> copy_to_user
    kvm_arm_get_fw_reg [label="int kvm_arm_get_fw_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/hypercalls.c:476"]
    kvm_arm_get_fw_reg -> kvm_psci_version
    kvm_arm_get_fw_reg -> get_kernel_wa_level
    kvm_arm_get_fw_reg -> READ_ONCE
    kvm_arm_get_fw_reg -> copy_to_user
    kvm_arm_get_fw_reg -> KVM_REG_SIZE
    get_sve_reg [label="int get_sve_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:484"]
    get_sve_reg -> get_sve_vls
    get_sve_reg -> sve_reg_to_region
    get_sve_reg -> kvm_arm_vcpu_sve_finalized
    get_sve_reg -> copy_to_user
    get_sve_reg -> clear_user
    get_sve_vls [label="int get_sve_vls (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:312"]
    get_sve_vls -> vcpu_has_sve
    get_sve_vls -> WARN_ON
    get_sve_vls -> sve_vl_valid
    get_sve_vls -> memset
    get_sve_vls -> vcpu_sve_max_vq
    get_sve_vls -> sve_vq_available
    get_sve_vls -> vq_word
    get_sve_vls -> vq_mask
    get_sve_vls -> copy_to_user
    sve_vl_valid [label="sve_vl_valid()"]
    vq_word [label="vq_word()"]
    vq_mask [label="vq_mask()"]
    clear_user [label="clear_user()"]
    get_timer_reg [label="int get_timer_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/guest.c:642"]
    get_timer_reg -> kvm_arm_timer_get_reg
    get_timer_reg -> copy_to_user
    get_timer_reg -> KVM_REG_SIZE
    kvm_arm_sys_reg_get_reg [label="int kvm_arm_sys_reg_get_reg (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg)
arch/arm64/kvm/sys_regs.c:3566"]
    kvm_arm_sys_reg_get_reg -> demux_c15_get
    kvm_arm_sys_reg_get_reg -> get_invariant_sys_reg
    kvm_arm_sys_reg_get_reg -> kvm_sys_reg_get_user
    kvm_arm_sys_reg_get_reg -> ARRAY_SIZE
    demux_c15_get [label="int demux_c15_get (struct kvm_vcpu *vcpu, u64 id, void __user *uaddr)
arch/arm64/kvm/sys_regs.c:3488"]
    demux_c15_get -> KVM_REG_SIZE
    demux_c15_get -> put_user
    demux_c15_get -> get_ccsidr
    put_user [label="put_user()"]
    get_invariant_sys_reg [label="int get_invariant_sys_reg (u64 id, u64 __user *uaddr)
arch/arm64/kvm/sys_regs.c:3456"]
    get_invariant_sys_reg -> get_reg_by_id
    get_invariant_sys_reg -> ARRAY_SIZE
    get_invariant_sys_reg -> put_user
    kvm_sys_reg_get_user [label="int kvm_sys_reg_get_user (struct kvm_vcpu *vcpu, const struct kvm_one_reg *reg, const struct sys_reg_desc table[], unsigned int num)
arch/arm64/kvm/sys_regs.c:3541"]
    kvm_sys_reg_get_user -> id_to_sys_reg_desc
    kvm_sys_reg_get_user -> sysreg_hidden_user
    kvm_sys_reg_get_user -> put_user
    kvm_arm_num_regs [label="unsigned long kvm_arm_num_regs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/guest.c:717"]
    kvm_arm_num_regs -> num_core_regs
    kvm_arm_num_regs -> num_sve_regs
    kvm_arm_num_regs -> kvm_arm_num_sys_reg_descs
    kvm_arm_num_regs -> kvm_arm_get_fw_num_regs
    num_core_regs [label="unsigned long num_core_regs (const struct kvm_vcpu *vcpu)
arch/arm64/kvm/guest.c:588"]
    num_core_regs -> copy_core_reg_indices
    copy_core_reg_indices [label="int copy_core_reg_indices (const struct kvm_vcpu *vcpu, u64 __user *uindices)
arch/arm64/kvm/guest.c:545"]
    copy_core_reg_indices -> core_reg_size_from_offset
    copy_core_reg_indices -> WARN_ON
    copy_core_reg_indices -> put_user
    num_sve_regs [label="unsigned long num_sve_regs (const struct kvm_vcpu *vcpu)
arch/arm64/kvm/guest.c:651"]
    num_sve_regs -> vcpu_sve_slices
    num_sve_regs -> vcpu_has_sve
    num_sve_regs -> WARN_ON
    num_sve_regs -> kvm_arm_vcpu_sve_finalized
    vcpu_sve_slices [label="vcpu_sve_slices()"]
    kvm_arm_num_sys_reg_descs [label="unsigned long kvm_arm_num_sys_reg_descs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/sys_regs.c:3708"]
    kvm_arm_num_sys_reg_descs -> ARRAY_SIZE
    kvm_arm_num_sys_reg_descs -> num_demux_regs
    kvm_arm_num_sys_reg_descs -> walk_sys_regs
    num_demux_regs [label="unsigned int num_demux_regs (void)
arch/arm64/kvm/sys_regs.c:3626"]
    walk_sys_regs [label="int walk_sys_regs (struct kvm_vcpu *vcpu, u64 __user *uind)
arch/arm64/kvm/sys_regs.c:3691"]
    walk_sys_regs -> ARRAY_SIZE
    walk_sys_regs -> walk_one_sys_reg
    walk_one_sys_reg [label="int walk_one_sys_reg (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 __user **uind, unsigned int *total)
arch/arm64/kvm/sys_regs.c:3668"]
    walk_one_sys_reg -> sysreg_hidden_user
    walk_one_sys_reg -> copy_reg_to_user
    copy_reg_to_user [label="bool copy_reg_to_user (const struct sys_reg_desc *reg, u64 __user **uind)
arch/arm64/kvm/sys_regs.c:3656"]
    copy_reg_to_user -> put_user
    copy_reg_to_user -> sys_reg_to_index
    sys_reg_to_index [label="u64 sys_reg_to_index (const struct sys_reg_desc *reg)
arch/arm64/kvm/sys_regs.c:3645"]
    kvm_arm_get_fw_num_regs [label="int kvm_arm_get_fw_num_regs (struct kvm_vcpu *vcpu)
arch/arm64/kvm/hypercalls.c:408"]
    kvm_arm_get_fw_num_regs -> ARRAY_SIZE
    kvm_arm_copy_reg_indices [label="int kvm_arm_copy_reg_indices (struct kvm_vcpu *vcpu, u64 __user *uindices)
arch/arm64/kvm/guest.c:735"]
    kvm_arm_copy_reg_indices -> copy_core_reg_indices
    kvm_arm_copy_reg_indices -> copy_sve_reg_indices
    kvm_arm_copy_reg_indices -> kvm_arm_copy_fw_reg_indices
    kvm_arm_copy_reg_indices -> kvm_arm_get_fw_num_regs
    kvm_arm_copy_reg_indices -> copy_timer_indices
    kvm_arm_copy_reg_indices -> kvm_arm_copy_sys_reg_indices
    copy_sve_reg_indices [label="int copy_sve_reg_indices (const struct kvm_vcpu *vcpu, u64 __user *uindices)
arch/arm64/kvm/guest.c:665"]
    copy_sve_reg_indices -> vcpu_sve_slices
    copy_sve_reg_indices -> vcpu_has_sve
    copy_sve_reg_indices -> WARN_ON
    copy_sve_reg_indices -> kvm_arm_vcpu_sve_finalized
    copy_sve_reg_indices -> put_user
    copy_sve_reg_indices -> KVM_REG_ARM64_SVE_ZREG
    copy_sve_reg_indices -> KVM_REG_ARM64_SVE_PREG
    copy_sve_reg_indices -> KVM_REG_ARM64_SVE_FFR
    kvm_arm_copy_fw_reg_indices [label="int kvm_arm_copy_fw_reg_indices (struct kvm_vcpu *vcpu, u64 __user *uindices)
arch/arm64/kvm/hypercalls.c:413"]
    kvm_arm_copy_fw_reg_indices -> ARRAY_SIZE
    kvm_arm_copy_fw_reg_indices -> put_user
    copy_timer_indices [label="int copy_timer_indices (struct kvm_vcpu *vcpu, u64 __user *uindices)
arch/arm64/kvm/guest.c:618"]
    kvm_arm_copy_sys_reg_indices [label="int kvm_arm_copy_sys_reg_indices (struct kvm_vcpu *vcpu, u64 __user *uindices)
arch/arm64/kvm/sys_regs.c:3715"]
    kvm_arm_copy_sys_reg_indices -> ARRAY_SIZE
    kvm_arm_copy_sys_reg_indices -> put_user
    kvm_arm_copy_sys_reg_indices -> sys_reg_to_index
    kvm_arm_copy_sys_reg_indices -> walk_sys_regs
    kvm_arm_copy_sys_reg_indices -> write_demux_regids
    write_demux_regids [label="int write_demux_regids (u64 __user *uindices)
arch/arm64/kvm/sys_regs.c:3631"]
    write_demux_regids -> put_user
    kvm_arm_vcpu_set_attr [label="int kvm_arm_vcpu_set_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/arm.c:1443"]
    kvm_arm_vcpu_set_attr -> kvm_arm_vcpu_arch_set_attr
    kvm_arm_vcpu_arch_set_attr [label="int kvm_arm_vcpu_arch_set_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/guest.c:943"]
    kvm_arm_vcpu_arch_set_attr -> mutex_lock
    kvm_arm_vcpu_arch_set_attr -> kvm_arm_pmu_v3_set_attr
    kvm_arm_vcpu_arch_set_attr -> mutex_unlock
    kvm_arm_vcpu_arch_set_attr -> kvm_arm_timer_set_attr
    kvm_arm_vcpu_arch_set_attr -> kvm_arm_pvtime_set_attr
    kvm_arm_pmu_v3_set_attr [label="int kvm_arm_pmu_v3_set_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/pmu-emul.c:981"]
    kvm_arm_pmu_v3_set_attr -> lockdep_assert_held
    kvm_arm_pmu_v3_set_attr -> kvm_vcpu_has_pmu
    kvm_arm_pmu_v3_set_attr -> irqchip_in_kernel
    kvm_arm_pmu_v3_set_attr -> get_user
    kvm_arm_pmu_v3_set_attr -> irq_is_ppi
    kvm_arm_pmu_v3_set_attr -> irq_is_spi
    kvm_arm_pmu_v3_set_attr -> pmu_irq_is_valid
    kvm_arm_pmu_v3_set_attr -> kvm_arm_pmu_irq_initialized
    kvm_arm_pmu_v3_set_attr -> kvm_debug
    kvm_arm_pmu_v3_set_attr -> kvm_arm_pmu_get_pmuver_limit
    kvm_arm_pmu_v3_set_attr -> copy_from_user
    kvm_arm_pmu_v3_set_attr -> kvm_vm_has_ran_once
    kvm_arm_pmu_v3_set_attr -> bitmap_alloc
    kvm_arm_pmu_v3_set_attr -> bitmap_zero
    kvm_arm_pmu_v3_set_attr -> bitmap_fill
    kvm_arm_pmu_v3_set_attr -> bitmap_set
    kvm_arm_pmu_v3_set_attr -> bitmap_clear
    kvm_arm_pmu_v3_set_attr -> kvm_arm_pmu_v3_set_pmu
    kvm_arm_pmu_v3_set_attr -> kvm_arm_pmu_v3_init
    irq_is_spi [label="irq_is_spi()"]
    pmu_irq_is_valid [label="bool pmu_irq_is_valid (struct kvm *kvm, int irq)
arch/arm64/kvm/pmu-emul.c:884"]
    pmu_irq_is_valid -> kvm_for_each_vcpu
    pmu_irq_is_valid -> kvm_arm_pmu_irq_initialized
    pmu_irq_is_valid -> irq_is_ppi
    bitmap_alloc [label="bitmap_alloc()"]
    bitmap_fill [label="bitmap_fill()"]
    bitmap_set [label="bitmap_set()"]
    kvm_arm_pmu_v3_set_pmu [label="int kvm_arm_pmu_v3_set_pmu (struct kvm_vcpu *vcpu, int pmu_id)
arch/arm64/kvm/pmu-emul.c:951"]
    kvm_arm_pmu_v3_set_pmu -> lockdep_assert_held
    kvm_arm_pmu_v3_set_pmu -> mutex_lock
    kvm_arm_pmu_v3_set_pmu -> list_for_each_entry
    kvm_arm_pmu_v3_set_pmu -> kvm_vm_has_ran_once
    kvm_arm_pmu_v3_set_pmu -> kvm_arm_set_pmu
    kvm_arm_pmu_v3_set_pmu -> cpumask_copy
    kvm_arm_pmu_v3_set_pmu -> mutex_unlock
    kvm_arm_set_pmu [label="void kvm_arm_set_pmu (struct kvm *kvm, struct arm_pmu *arm_pmu)
arch/arm64/kvm/pmu-emul.c:920"]
    kvm_arm_set_pmu -> lockdep_assert_held
    kvm_arm_set_pmu -> kvm_arm_pmu_get_max_counters
    kvm_arm_pmu_get_max_counters [label="u8 kvm_arm_pmu_get_max_counters (struct kvm *kvm)
arch/arm64/kvm/pmu-emul.c:909"]
    kvm_arm_pmu_v3_init [label="int kvm_arm_pmu_v3_init (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:850"]
    kvm_arm_pmu_v3_init -> irqchip_in_kernel
    kvm_arm_pmu_v3_init -> vgic_initialized
    kvm_arm_pmu_v3_init -> kvm_arm_pmu_irq_initialized
    kvm_arm_pmu_v3_init -> kvm_vgic_set_owner
    kvm_arm_pmu_v3_init -> init_irq_work
    kvm_arm_pmu_v3_init -> kvm_pmu_perf_overflow_notify_vcpu
    vgic_initialized [label="vgic_initialized()"]
    kvm_vgic_set_owner [label="kvm_vgic_set_owner()"]
    init_irq_work [label="init_irq_work()"]
    kvm_pmu_perf_overflow_notify_vcpu [label="void kvm_pmu_perf_overflow_notify_vcpu (struct irq_work *work)
arch/arm64/kvm/pmu-emul.c:428"]
    kvm_pmu_perf_overflow_notify_vcpu -> container_of
    kvm_pmu_perf_overflow_notify_vcpu -> kvm_vcpu_kick
    kvm_arm_timer_set_attr [label="int kvm_arm_timer_set_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/arch_timer.c:1560"]
    kvm_arm_timer_set_attr -> irqchip_in_kernel
    kvm_arm_timer_set_attr -> get_user
    kvm_arm_timer_set_attr -> irq_is_ppi
    kvm_arm_timer_set_attr -> mutex_lock
    kvm_arm_timer_set_attr -> test_bit
    kvm_arm_timer_set_attr -> mutex_unlock
    kvm_arm_pvtime_set_attr [label="int kvm_arm_pvtime_set_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/pvtime.c:75"]
    kvm_arm_pvtime_set_attr -> kvm_arm_pvtime_supported
    kvm_arm_pvtime_set_attr -> get_user
    kvm_arm_pvtime_set_attr -> IS_ALIGNED
    kvm_arm_pvtime_set_attr -> srcu_read_lock
    kvm_arm_pvtime_set_attr -> kvm_is_error_hva
    kvm_arm_pvtime_set_attr -> gfn_to_hva
    kvm_arm_pvtime_set_attr -> srcu_read_unlock
    gfn_to_hva [label="unsigned long gfn_to_hva (struct kvm *kvm, gfn_t gfn)
virt/kvm/kvm_main.c:2450"]
    gfn_to_hva -> gfn_to_hva_many
    gfn_to_hva -> gfn_to_memslot
    kvm_arm_vcpu_get_attr [label="int kvm_arm_vcpu_get_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/arm.c:1457"]
    kvm_arm_vcpu_get_attr -> kvm_arm_vcpu_arch_get_attr
    kvm_arm_vcpu_arch_get_attr [label="int kvm_arm_vcpu_arch_get_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/guest.c:968"]
    kvm_arm_vcpu_arch_get_attr -> kvm_arm_pmu_v3_get_attr
    kvm_arm_vcpu_arch_get_attr -> kvm_arm_timer_get_attr
    kvm_arm_vcpu_arch_get_attr -> kvm_arm_pvtime_get_attr
    kvm_arm_pmu_v3_get_attr [label="int kvm_arm_pmu_v3_get_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/pmu-emul.c:1084"]
    kvm_arm_pmu_v3_get_attr -> irqchip_in_kernel
    kvm_arm_pmu_v3_get_attr -> kvm_vcpu_has_pmu
    kvm_arm_pmu_v3_get_attr -> kvm_arm_pmu_irq_initialized
    kvm_arm_pmu_v3_get_attr -> put_user
    kvm_arm_timer_get_attr [label="int kvm_arm_timer_get_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/arch_timer.c:1612"]
    kvm_arm_timer_get_attr -> vcpu_vtimer
    kvm_arm_timer_get_attr -> vcpu_ptimer
    kvm_arm_timer_get_attr -> vcpu_hvtimer
    kvm_arm_timer_get_attr -> vcpu_hptimer
    kvm_arm_timer_get_attr -> timer_irq
    kvm_arm_timer_get_attr -> put_user
    kvm_arm_pvtime_get_attr [label="int kvm_arm_pvtime_get_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/pvtime.c:107"]
    kvm_arm_pvtime_get_attr -> kvm_arm_pvtime_supported
    kvm_arm_pvtime_get_attr -> put_user
    kvm_arm_vcpu_has_attr [label="int kvm_arm_vcpu_has_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/arm.c:1471"]
    kvm_arm_vcpu_has_attr -> kvm_arm_vcpu_arch_has_attr
    kvm_arm_vcpu_arch_has_attr [label="int kvm_arm_vcpu_arch_has_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/guest.c:991"]
    kvm_arm_vcpu_arch_has_attr -> kvm_arm_pmu_v3_has_attr
    kvm_arm_vcpu_arch_has_attr -> kvm_arm_timer_has_attr
    kvm_arm_vcpu_arch_has_attr -> kvm_arm_pvtime_has_attr
    kvm_arm_pmu_v3_has_attr [label="int kvm_arm_pmu_v3_has_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/pmu-emul.c:1108"]
    kvm_arm_pmu_v3_has_attr -> kvm_vcpu_has_pmu
    kvm_arm_timer_has_attr [label="int kvm_arm_timer_has_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/arch_timer.c:1639"]
    kvm_arm_pvtime_has_attr [label="int kvm_arm_pvtime_has_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/pvtime.c:124"]
    kvm_arm_pvtime_has_attr -> kvm_arm_pvtime_supported
    kvm_arm_vcpu_get_events [label="int kvm_arm_vcpu_get_events (struct kvm_vcpu *vcpu, struct kvm_vcpu_events *events)
arch/arm64/kvm/arm.c:1485"]
    kvm_arm_vcpu_get_events -> memset
    kvm_arm_vcpu_set_events [label="int kvm_arm_vcpu_set_events (struct kvm_vcpu *vcpu, struct kvm_vcpu_events *events)
arch/arm64/kvm/arm.c:1493"]
    kvm_arm_vcpu_set_events -> ARRAY_SIZE
    kvm_arm_vcpu_finalize [label="int kvm_arm_vcpu_finalize (struct kvm_vcpu *vcpu, int feature)
arch/arm64/kvm/reset.c:126"]
    kvm_arm_vcpu_finalize -> vcpu_has_sve
    kvm_arm_vcpu_finalize -> kvm_arm_vcpu_sve_finalized
    kvm_arm_vcpu_finalize -> kvm_vcpu_finalize_sve
    kvm_vcpu_finalize_sve [label="int kvm_vcpu_finalize_sve (struct kvm_vcpu *vcpu)
arch/arm64/kvm/reset.c:92"]
    kvm_vcpu_finalize_sve -> WARN_ON
    kvm_vcpu_finalize_sve -> sve_vl_valid
    kvm_vcpu_finalize_sve -> sve_max_virtualisable_vl
    kvm_vcpu_finalize_sve -> vcpu_sve_state_size
    kvm_vcpu_finalize_sve -> kzalloc
    kvm_vcpu_finalize_sve -> kvm_share_hyp
    kvm_vcpu_finalize_sve -> kfree
    kvm_vcpu_finalize_sve -> vcpu_set_flag
    kvm_vcpu_fault [label="vm_fault_t kvm_vcpu_fault (struct vm_fault *vmf)
virt/kvm/kvm_main.c:3831"]
    kvm_vcpu_fault -> virt_to_page
    kvm_vcpu_fault -> kvm_page_in_dirty_ring
    kvm_vcpu_fault -> kvm_dirty_ring_get_page
    kvm_vcpu_fault -> kvm_arch_vcpu_fault
    kvm_vcpu_fault -> get_page
    kvm_page_in_dirty_ring [label="bool kvm_page_in_dirty_ring (struct kvm *kvm, unsigned long pgoff)
virt/kvm/kvm_main.c:3820"]
    kvm_dirty_ring_get_page [label="struct page *kvm_dirty_ring_get_page (struct kvm_dirty_ring *ring, u32 offset)
virt/kvm/dirty_ring.c:213"]
    kvm_dirty_ring_get_page -> vmalloc_to_page
    kvm_arch_vcpu_fault [label="vm_fault_t kvm_arch_vcpu_fault (struct kvm_vcpu *vcpu, struct vm_fault *vmf)
arch/arm64/kvm/arm.c:188"]
    kvm_vcpu_gfn_to_hva [label="unsigned long kvm_vcpu_gfn_to_hva (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:2456"]
    kvm_vcpu_gfn_to_hva -> gfn_to_hva_many
    kvm_vcpu_gfn_to_hva -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_gfn_to_pfn [label="kvm_pfn_t kvm_vcpu_gfn_to_pfn (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:2805"]
    kvm_vcpu_gfn_to_pfn -> gfn_to_pfn_memslot
    kvm_vcpu_gfn_to_pfn -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_gfn_to_pfn_atomic [label="kvm_pfn_t kvm_vcpu_gfn_to_pfn_atomic (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:2793"]
    kvm_vcpu_gfn_to_pfn_atomic -> gfn_to_pfn_memslot_atomic
    kvm_vcpu_gfn_to_pfn_atomic -> kvm_vcpu_gfn_to_memslot
    gfn_to_pfn_memslot_atomic [label="kvm_pfn_t gfn_to_pfn_memslot_atomic (const struct kvm_memory_slot *slot, gfn_t gfn)
virt/kvm/kvm_main.c:2786"]
    kvm_vcpu_is_visible_gfn [label="bool kvm_vcpu_is_visible_gfn (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:2385"]
    kvm_vcpu_is_visible_gfn -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_is_visible_gfn -> kvm_is_visible_memslot
    kvm_vcpu_map [label="int kvm_vcpu_map (struct kvm_vcpu *vcpu, gfn_t gfn, struct kvm_host_map *map)
virt/kvm/kvm_main.c:2860"]
    kvm_vcpu_map -> gfn_to_pfn
    kvm_vcpu_map -> is_error_noslot_pfn
    kvm_vcpu_map -> pfn_valid
    kvm_vcpu_map -> pfn_to_page
    kvm_vcpu_map -> kmap
    kvm_vcpu_map -> memremap
    kvm_vcpu_map -> pfn_to_hpa
    kmap [label="kmap()"]
    memremap [label="memremap()"]
    pfn_to_hpa [label="pfn_to_hpa()"]
    kvm_vcpu_mmap [label="int kvm_vcpu_mmap (struct file *file, struct vm_area_struct *vma)
virt/kvm/kvm_main.c:3861"]
    kvm_vcpu_mmap -> vma_pages
    kvm_vcpu_mmap -> kvm_page_in_dirty_ring
    vma_pages [label="vma_pages()"]
    kvm_vcpu_pmu_resync_el0 [label="void kvm_vcpu_pmu_resync_el0 (void)
arch/arm64/kvm/pmu.c:244"]
    kvm_vcpu_pmu_resync_el0 -> has_vhe
    kvm_vcpu_pmu_resync_el0 -> in_interrupt
    kvm_vcpu_pmu_resync_el0 -> kvm_get_running_vcpu
    kvm_vcpu_pmu_resync_el0 -> kvm_make_request
    in_interrupt [label="in_interrupt()"]
    kvm_vcpu_read_guest [label="int kvm_vcpu_read_guest (struct kvm_vcpu *vcpu, gpa_t gpa, void *data, unsigned long len)
virt/kvm/kvm_main.c:3074"]
    kvm_vcpu_read_guest -> offset_in_page
    kvm_vcpu_read_guest -> next_segment
    kvm_vcpu_read_guest -> kvm_vcpu_read_guest_page
    kvm_vcpu_read_guest_page [label="int kvm_vcpu_read_guest_page (struct kvm_vcpu *vcpu, gfn_t gfn, void *data, int offset, int len)
virt/kvm/kvm_main.c:3045"]
    kvm_vcpu_read_guest_page -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_read_guest_atomic [label="int kvm_vcpu_read_guest_atomic (struct kvm_vcpu *vcpu, gpa_t gpa, void *data, unsigned long len)
virt/kvm/kvm_main.c:3111"]
    kvm_vcpu_read_guest_atomic -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_read_guest_atomic -> offset_in_page
    kvm_vcpu_release [label="int kvm_vcpu_release (struct inode *inode, struct file *filp)
virt/kvm/kvm_main.c:3875"]
    kvm_vcpu_release -> kvm_put_kvm
    kvm_vcpu_stats_read [label="ssize_t kvm_vcpu_stats_read (struct file *file, char __user *user_buffer, size_t size, loff_t *offset)
virt/kvm/kvm_main.c:4058"]
    kvm_vcpu_stats_read -> kvm_stats_read
    kvm_stats_read [label="ssize_t kvm_stats_read (char *id, const struct kvm_stats_header *header, const struct _kvm_stats_desc *desc, void *stats, size_t size_stats, char __user *user_buffer, size_t size, loff_t *offset)
virt/kvm/binary_stats.c:52"]
    kvm_stats_read -> min
    kvm_stats_read -> copy_to_user
    kvm_vcpu_stats_release [label="int kvm_vcpu_stats_release (struct inode *inode, struct file *file)
virt/kvm/kvm_main.c:4068"]
    kvm_vcpu_stats_release -> kvm_put_kvm
    kvm_vcpu_unmap [label="void kvm_vcpu_unmap (struct kvm_vcpu *vcpu, struct kvm_host_map *map, bool dirty)
virt/kvm/kvm_main.c:2894"]
    kvm_vcpu_unmap -> kunmap
    kvm_vcpu_unmap -> memunmap
    kvm_vcpu_unmap -> kvm_vcpu_mark_page_dirty
    kvm_vcpu_unmap -> kvm_release_pfn
    kvm_vcpu_mark_page_dirty [label="void kvm_vcpu_mark_page_dirty (struct kvm_vcpu *vcpu, gfn_t gfn)
virt/kvm/kvm_main.c:3377"]
    kvm_vcpu_mark_page_dirty -> kvm_vcpu_gfn_to_memslot
    kvm_vcpu_mark_page_dirty -> mark_page_dirty_in_slot
    kvm_release_pfn [label="void kvm_release_pfn (kvm_pfn_t pfn, bool dirty)
virt/kvm/kvm_main.c:2852"]
    kvm_release_pfn -> kvm_release_pfn_dirty
    kvm_release_pfn -> kvm_release_pfn_clean
    kvm_release_pfn_dirty [label="void kvm_release_pfn_dirty (kvm_pfn_t pfn)
virt/kvm/kvm_main.c:2973"]
    kvm_release_pfn_dirty -> is_error_noslot_pfn
    kvm_release_pfn_dirty -> kvm_pfn_to_refcounted_page
    kvm_release_pfn_dirty -> kvm_release_page_dirty
    kvm_release_page_dirty [label="void kvm_release_page_dirty (struct page *page)
virt/kvm/kvm_main.c:2964"]
    kvm_release_page_dirty -> WARN_ON
    kvm_release_page_dirty -> is_error_page
    kvm_release_page_dirty -> kvm_set_page_dirty
    kvm_release_page_dirty -> kvm_release_page_clean
    kvm_vcpu_write_guest [label="int kvm_vcpu_write_guest (struct kvm_vcpu *vcpu, gpa_t gpa, const void *data, unsigned long len)
virt/kvm/kvm_main.c:3178"]
    kvm_vcpu_write_guest -> offset_in_page
    kvm_vcpu_write_guest -> next_segment
    kvm_vcpu_write_guest -> kvm_vcpu_write_guest_page
    kvm_vcpu_write_guest_page [label="int kvm_vcpu_write_guest_page (struct kvm_vcpu *vcpu, gfn_t gfn, const void *data, int offset, int len)
virt/kvm/kvm_main.c:3148"]
    kvm_vcpu_write_guest_page -> kvm_vcpu_gfn_to_memslot
    kvm_vfio_create [label="int kvm_vfio_create (struct kvm_device *dev, u32 type)
virt/kvm/vfio.c:364"]
    kvm_vfio_create -> list_for_each_entry
    kvm_vfio_create -> kzalloc
    kvm_vfio_create -> INIT_LIST_HEAD
    kvm_vfio_create -> mutex_init
    kvm_vfio_has_attr [label="int kvm_vfio_has_attr (struct kvm_device *dev, struct kvm_device_attr *attr)
virt/kvm/vfio.c:312"]
    kvm_vfio_release [label="void kvm_vfio_release (struct kvm_device *dev)
virt/kvm/vfio.c:332"]
    kvm_vfio_release -> list_for_each_entry_safe
    kvm_vfio_release -> kvm_spapr_tce_release_vfio_group
    kvm_vfio_release -> kvm_vfio_file_set_kvm
    kvm_vfio_release -> fput
    kvm_vfio_release -> list_del
    kvm_vfio_release -> kfree
    kvm_vfio_release -> kvm_arch_end_assignment
    kvm_vfio_release -> kvm_vfio_update_coherency
    kvm_spapr_tce_release_vfio_group [label="void kvm_spapr_tce_release_vfio_group (struct kvm *kvm, struct kvm_vfio_file *kvf)
virt/kvm/vfio.c:100"]
    kvm_spapr_tce_release_vfio_group -> WARN_ON_ONCE
    kvm_spapr_tce_release_vfio_group -> kvm_spapr_tce_release_iommu_group
    kvm_spapr_tce_release_vfio_group -> iommu_group_put
    kvm_spapr_tce_release_iommu_group [label="kvm_spapr_tce_release_iommu_group()"]
    iommu_group_put [label="iommu_group_put()"]
    kvm_vfio_file_set_kvm [label="void kvm_vfio_file_set_kvm (struct file *file, struct kvm *kvm)
virt/kvm/vfio.c:38"]
    kvm_vfio_file_set_kvm -> symbol_get
    kvm_vfio_file_set_kvm -> symbol_put
    symbol_get [label="symbol_get()"]
    symbol_put [label="symbol_put()"]
    fput [label="fput()"]
    kvm_arch_end_assignment [label="kvm_arch_end_assignment()"]
    kvm_vfio_update_coherency [label="void kvm_vfio_update_coherency (struct kvm_device *dev)
virt/kvm/vfio.c:120"]
    kvm_vfio_update_coherency -> bool
    kvm_vfio_update_coherency -> list_for_each_entry
    kvm_vfio_update_coherency -> kvm_vfio_file_enforced_coherent
    kvm_vfio_update_coherency -> kvm_arch_register_noncoherent_dma
    kvm_vfio_update_coherency -> kvm_arch_unregister_noncoherent_dma
    kvm_vfio_file_enforced_coherent [label="bool kvm_vfio_file_enforced_coherent (struct file *file)
virt/kvm/vfio.c:51"]
    kvm_vfio_file_enforced_coherent -> bool
    kvm_vfio_file_enforced_coherent -> fn
    kvm_vfio_file_enforced_coherent -> symbol_get
    kvm_vfio_file_enforced_coherent -> symbol_put
    fn [label="fn()"]
    kvm_arch_register_noncoherent_dma [label="kvm_arch_register_noncoherent_dma()"]
    kvm_arch_unregister_noncoherent_dma [label="kvm_arch_unregister_noncoherent_dma()"]
    kvm_vfio_set_attr [label="int kvm_vfio_set_attr (struct kvm_device *dev, struct kvm_device_attr *attr)
virt/kvm/vfio.c:300"]
    kvm_vfio_set_attr -> kvm_vfio_set_file
    kvm_vfio_set_attr -> u64_to_user_ptr
    kvm_vfio_set_file [label="int kvm_vfio_set_file (struct kvm_device *dev, long attr, void __user *arg)
virt/kvm/vfio.c:274"]
    kvm_vfio_set_file -> get_user
    kvm_vfio_set_file -> kvm_vfio_file_add
    kvm_vfio_set_file -> kvm_vfio_file_del
    kvm_vfio_set_file -> kvm_vfio_file_set_spapr_tce
    kvm_vfio_file_add [label="int kvm_vfio_file_add (struct kvm_device *dev, unsigned int fd)
virt/kvm/vfio.c:143"]
    kvm_vfio_file_add -> fget
    kvm_vfio_file_add -> kvm_vfio_file_is_valid
    kvm_vfio_file_add -> mutex_lock
    kvm_vfio_file_add -> list_for_each_entry
    kvm_vfio_file_add -> kzalloc
    kvm_vfio_file_add -> get_file
    kvm_vfio_file_add -> list_add_tail
    kvm_vfio_file_add -> kvm_arch_start_assignment
    kvm_vfio_file_add -> kvm_vfio_file_set_kvm
    kvm_vfio_file_add -> kvm_vfio_update_coherency
    kvm_vfio_file_add -> mutex_unlock
    kvm_vfio_file_add -> fput
    fget [label="fget()"]
    kvm_vfio_file_is_valid [label="bool kvm_vfio_file_is_valid (struct file *file)
virt/kvm/vfio.c:67"]
    kvm_vfio_file_is_valid -> bool
    kvm_vfio_file_is_valid -> fn
    kvm_vfio_file_is_valid -> symbol_get
    kvm_vfio_file_is_valid -> symbol_put
    get_file [label="get_file()"]
    kvm_arch_start_assignment [label="kvm_arch_start_assignment()"]
    kvm_vfio_file_del [label="int kvm_vfio_file_del (struct kvm_device *dev, unsigned int fd)
virt/kvm/vfio.c:189"]
    kvm_vfio_file_del -> fdget
    kvm_vfio_file_del -> mutex_lock
    kvm_vfio_file_del -> list_for_each_entry
    kvm_vfio_file_del -> list_del
    kvm_vfio_file_del -> kvm_arch_end_assignment
    kvm_vfio_file_del -> kvm_spapr_tce_release_vfio_group
    kvm_vfio_file_del -> kvm_vfio_file_set_kvm
    kvm_vfio_file_del -> fput
    kvm_vfio_file_del -> kfree
    kvm_vfio_file_del -> kvm_vfio_update_coherency
    kvm_vfio_file_del -> mutex_unlock
    kvm_vfio_file_del -> fdput
    fdget [label="fdget()"]
    fdput [label="fdput()"]
    kvm_vfio_file_set_spapr_tce [label="int kvm_vfio_file_set_spapr_tce (struct kvm_device *dev, void __user *arg)
virt/kvm/vfio.c:230"]
    kvm_vfio_file_set_spapr_tce -> copy_from_user
    kvm_vfio_file_set_spapr_tce -> fdget
    kvm_vfio_file_set_spapr_tce -> mutex_lock
    kvm_vfio_file_set_spapr_tce -> list_for_each_entry
    kvm_vfio_file_set_spapr_tce -> kvm_vfio_file_iommu_group
    kvm_vfio_file_set_spapr_tce -> WARN_ON_ONCE
    kvm_vfio_file_set_spapr_tce -> kvm_spapr_tce_attach_iommu_group
    kvm_vfio_file_set_spapr_tce -> mutex_unlock
    kvm_vfio_file_set_spapr_tce -> fdput
    kvm_vfio_file_iommu_group [label="struct iommu_group *kvm_vfio_file_iommu_group (struct file *file)
virt/kvm/vfio.c:84"]
    kvm_vfio_file_iommu_group -> symbol_get
    kvm_vfio_file_iommu_group -> symbol_put
    kvm_spapr_tce_attach_iommu_group [label="kvm_spapr_tce_attach_iommu_group()"]
    u64_to_user_ptr [label="u64_to_user_ptr()"]
    kvm_vm_compat_ioctl [label="long kvm_vm_compat_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:5004"]
    kvm_vm_compat_ioctl -> kvm_arch_vm_compat_ioctl
    kvm_vm_compat_ioctl -> copy_from_user
    kvm_vm_compat_ioctl -> compat_ptr
    kvm_vm_compat_ioctl -> kvm_vm_ioctl_clear_dirty_log
    kvm_vm_compat_ioctl -> kvm_vm_ioctl_get_dirty_log
    kvm_vm_compat_ioctl -> kvm_vm_ioctl
    kvm_arch_vm_compat_ioctl [label="long __weak kvm_arch_vm_compat_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:4998"]
    kvm_vm_ioctl_clear_dirty_log [label="int kvm_vm_ioctl_clear_dirty_log (struct kvm *kvm, struct kvm_clear_dirty_log *log)
virt/kvm/kvm_main.c:2324"]
    kvm_vm_ioctl_clear_dirty_log -> mutex_lock
    kvm_vm_ioctl_clear_dirty_log -> kvm_clear_dirty_log_protect
    kvm_vm_ioctl_clear_dirty_log -> mutex_unlock
    kvm_clear_dirty_log_protect [label="int kvm_clear_dirty_log_protect (struct kvm *kvm, struct kvm_clear_dirty_log *log)
virt/kvm/kvm_main.c:2248"]
    kvm_clear_dirty_log_protect -> kvm_use_dirty_bitmap
    kvm_clear_dirty_log_protect -> id_to_memslot
    kvm_clear_dirty_log_protect -> ALIGN
    kvm_clear_dirty_log_protect -> kvm_arch_sync_dirty_log
    kvm_clear_dirty_log_protect -> kvm_second_dirty_bitmap
    kvm_clear_dirty_log_protect -> copy_from_user
    kvm_clear_dirty_log_protect -> KVM_MMU_LOCK
    kvm_clear_dirty_log_protect -> DIV_ROUND_UP
    kvm_clear_dirty_log_protect -> atomic_long_fetch_andnot
    kvm_clear_dirty_log_protect -> kvm_arch_mmu_enable_log_dirty_pt_masked
    kvm_clear_dirty_log_protect -> KVM_MMU_UNLOCK
    kvm_clear_dirty_log_protect -> kvm_flush_remote_tlbs_memslot
    kvm_second_dirty_bitmap [label="kvm_second_dirty_bitmap()"]
    KVM_MMU_LOCK [label="KVM_MMU_LOCK()"]
    atomic_long_fetch_andnot [label="atomic_long_fetch_andnot()"]
    kvm_arch_mmu_enable_log_dirty_pt_masked [label="void kvm_arch_mmu_enable_log_dirty_pt_masked (struct kvm *kvm, struct kvm_memory_slot *slot, gfn_t gfn_offset, unsigned long mask)
arch/arm64/kvm/mmu.c:1183"]
    kvm_arch_mmu_enable_log_dirty_pt_masked -> lockdep_assert_held_write
    kvm_arch_mmu_enable_log_dirty_pt_masked -> stage2_wp_range
    kvm_arch_mmu_enable_log_dirty_pt_masked -> kvm_dirty_log_manual_protect_and_init_set
    kvm_arch_mmu_enable_log_dirty_pt_masked -> kvm_mmu_split_huge_pages
    lockdep_assert_held_write [label="lockdep_assert_held_write()"]
    stage2_wp_range [label="void stage2_wp_range (struct kvm_s2_mmu *mmu, phys_addr_t addr, phys_addr_t end)
arch/arm64/kvm/mmu.c:1108"]
    stage2_wp_range -> stage2_apply_range_resched
    kvm_dirty_log_manual_protect_and_init_set [label="kvm_dirty_log_manual_protect_and_init_set()"]
    kvm_mmu_split_huge_pages [label="int kvm_mmu_split_huge_pages (struct kvm *kvm, phys_addr_t addr, phys_addr_t end)
arch/arm64/kvm/mmu.c:114"]
    kvm_mmu_split_huge_pages -> lockdep_assert_held_write
    kvm_mmu_split_huge_pages -> kvm_mmu_split_nr_page_tables
    kvm_mmu_split_huge_pages -> need_split_memcache_topup_or_resched
    kvm_mmu_split_huge_pages -> write_unlock
    kvm_mmu_split_huge_pages -> cond_resched
    kvm_mmu_split_huge_pages -> write_lock
    kvm_mmu_split_huge_pages -> kvm_pgtable_stage2_split
    kvm_mmu_split_nr_page_tables [label="int kvm_mmu_split_nr_page_tables (u64 range)
arch/arm64/kvm/mmu.c:90"]
    kvm_mmu_split_nr_page_tables -> DIV_ROUND_UP
    need_split_memcache_topup_or_resched [label="bool need_split_memcache_topup_or_resched (struct kvm *kvm)
arch/arm64/kvm/mmu.c:100"]
    need_split_memcache_topup_or_resched -> min
    need_split_memcache_topup_or_resched -> need_resched
    need_split_memcache_topup_or_resched -> rwlock_needbreak
    need_split_memcache_topup_or_resched -> kvm_mmu_split_nr_page_tables
    need_split_memcache_topup_or_resched -> kvm_mmu_memory_cache_nr_free_objects
    need_resched [label="need_resched()"]
    rwlock_needbreak [label="rwlock_needbreak()"]
    kvm_mmu_memory_cache_nr_free_objects [label="int kvm_mmu_memory_cache_nr_free_objects (struct kvm_mmu_memory_cache *mc)
virt/kvm/kvm_main.c:449"]
    cond_resched [label="cond_resched()"]
    kvm_pgtable_stage2_split [label="kvm_pgtable_stage2_split()"]
    KVM_MMU_UNLOCK [label="KVM_MMU_UNLOCK()"]
    kvm_flush_remote_tlbs_memslot [label="void kvm_flush_remote_tlbs_memslot (struct kvm *kvm, const struct kvm_memory_slot *memslot)
virt/kvm/kvm_main.c:380"]
    kvm_flush_remote_tlbs_memslot -> lockdep_assert_held
    kvm_flush_remote_tlbs_memslot -> kvm_flush_remote_tlbs_range
    kvm_flush_remote_tlbs_range [label="void kvm_flush_remote_tlbs_range (struct kvm *kvm, gfn_t gfn, u64 nr_pages)
virt/kvm/kvm_main.c:367"]
    kvm_flush_remote_tlbs_range -> kvm_arch_flush_remote_tlbs_range
    kvm_flush_remote_tlbs_range -> kvm_flush_remote_tlbs
    kvm_arch_flush_remote_tlbs_range [label="int kvm_arch_flush_remote_tlbs_range (struct kvm *kvm, gfn_t gfn, u64 nr_pages)
arch/arm64/kvm/mmu.c:175"]
    kvm_arch_flush_remote_tlbs_range -> kvm_tlb_flush_vmid_range
    kvm_tlb_flush_vmid_range [label="kvm_tlb_flush_vmid_range()"]
    kvm_flush_remote_tlbs [label="void kvm_flush_remote_tlbs (struct kvm *kvm)
virt/kvm/kvm_main.c:346"]
    kvm_flush_remote_tlbs -> kvm_arch_flush_remote_tlbs
    kvm_flush_remote_tlbs -> kvm_make_all_cpus_request
    kvm_arch_flush_remote_tlbs [label="int kvm_arch_flush_remote_tlbs (struct kvm *kvm)
arch/arm64/kvm/mmu.c:169"]
    kvm_arch_flush_remote_tlbs -> kvm_call_hyp
    kvm_vm_ioctl_get_dirty_log [label="int kvm_vm_ioctl_get_dirty_log (struct kvm *kvm, struct kvm_dirty_log *log)
virt/kvm/kvm_main.c:2229"]
    kvm_vm_ioctl_get_dirty_log -> mutex_lock
    kvm_vm_ioctl_get_dirty_log -> kvm_get_dirty_log_protect
    kvm_vm_ioctl_get_dirty_log -> mutex_unlock
    kvm_get_dirty_log_protect [label="int kvm_get_dirty_log_protect (struct kvm *kvm, struct kvm_dirty_log *log)
virt/kvm/kvm_main.c:2138"]
    kvm_get_dirty_log_protect -> kvm_use_dirty_bitmap
    kvm_get_dirty_log_protect -> id_to_memslot
    kvm_get_dirty_log_protect -> kvm_arch_sync_dirty_log
    kvm_get_dirty_log_protect -> kvm_dirty_bitmap_bytes
    kvm_get_dirty_log_protect -> kvm_second_dirty_bitmap
    kvm_get_dirty_log_protect -> memset
    kvm_get_dirty_log_protect -> KVM_MMU_LOCK
    kvm_get_dirty_log_protect -> xchg
    kvm_get_dirty_log_protect -> kvm_arch_mmu_enable_log_dirty_pt_masked
    kvm_get_dirty_log_protect -> KVM_MMU_UNLOCK
    kvm_get_dirty_log_protect -> kvm_flush_remote_tlbs_memslot
    kvm_get_dirty_log_protect -> copy_to_user
    xchg [label="xchg()"]
    kvm_vm_ioctl [label="long kvm_vm_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
virt/kvm/kvm_main.c:4786"]
    kvm_vm_ioctl -> kvm_vm_ioctl_create_vcpu
    kvm_vm_ioctl -> copy_from_user
    kvm_vm_ioctl -> kvm_vm_ioctl_enable_cap_generic
    kvm_vm_ioctl -> kvm_vm_ioctl_set_memory_region
    kvm_vm_ioctl -> kvm_vm_ioctl_get_dirty_log
    kvm_vm_ioctl -> kvm_vm_ioctl_clear_dirty_log
    kvm_vm_ioctl -> kvm_vm_ioctl_register_coalesced_mmio
    kvm_vm_ioctl -> kvm_vm_ioctl_unregister_coalesced_mmio
    kvm_vm_ioctl -> kvm_irqfd
    kvm_vm_ioctl -> kvm_ioeventfd
    kvm_vm_ioctl -> kvm_send_userspace_msi
    kvm_vm_ioctl -> kvm_vm_ioctl_irq_line
    kvm_vm_ioctl -> copy_to_user
    kvm_vm_ioctl -> kvm_arch_can_set_irq_routing
    kvm_vm_ioctl -> vmemdup_user
    kvm_vm_ioctl -> array_size
    kvm_vm_ioctl -> IS_ERR
    kvm_vm_ioctl -> PTR_ERR
    kvm_vm_ioctl -> kvm_set_irq_routing
    kvm_vm_ioctl -> kvfree
    kvm_vm_ioctl -> kvm_ioctl_create_device
    kvm_vm_ioctl -> kvm_vm_ioctl_check_extension_generic
    kvm_vm_ioctl -> kvm_vm_ioctl_reset_dirty_pages
    kvm_vm_ioctl -> kvm_vm_ioctl_get_stats_fd
    kvm_vm_ioctl -> kvm_arch_vm_ioctl
    kvm_vm_ioctl_create_vcpu [label="int kvm_vm_ioctl_create_vcpu (struct kvm *kvm, u32 id)
virt/kvm/kvm_main.c:3936"]
    kvm_vm_ioctl_create_vcpu -> mutex_lock
    kvm_vm_ioctl_create_vcpu -> mutex_unlock
    kvm_vm_ioctl_create_vcpu -> kvm_arch_vcpu_precreate
    kvm_vm_ioctl_create_vcpu -> kmem_cache_zalloc
    kvm_vm_ioctl_create_vcpu -> BUILD_BUG_ON
    kvm_vm_ioctl_create_vcpu -> alloc_page
    kvm_vm_ioctl_create_vcpu -> page_address
    kvm_vm_ioctl_create_vcpu -> kvm_vcpu_init
    kvm_vm_ioctl_create_vcpu -> kvm_arch_vcpu_create
    kvm_vm_ioctl_create_vcpu -> kvm_dirty_ring_alloc
    kvm_vm_ioctl_create_vcpu -> kvm_get_vcpu_by_id
    kvm_vm_ioctl_create_vcpu -> atomic_read
    kvm_vm_ioctl_create_vcpu -> xa_reserve
    kvm_vm_ioctl_create_vcpu -> kvm_get_kvm
    kvm_vm_ioctl_create_vcpu -> create_vcpu_fd
    kvm_vm_ioctl_create_vcpu -> KVM_BUG_ON
    kvm_vm_ioctl_create_vcpu -> xa_store
    kvm_vm_ioctl_create_vcpu -> smp_wmb
    kvm_vm_ioctl_create_vcpu -> atomic_inc
    kvm_vm_ioctl_create_vcpu -> kvm_arch_vcpu_postcreate
    kvm_vm_ioctl_create_vcpu -> kvm_create_vcpu_debugfs
    kvm_vm_ioctl_create_vcpu -> kvm_put_kvm_no_destroy
    kvm_vm_ioctl_create_vcpu -> xa_release
    kvm_vm_ioctl_create_vcpu -> kvm_dirty_ring_free
    kvm_vm_ioctl_create_vcpu -> kvm_arch_vcpu_destroy
    kvm_vm_ioctl_create_vcpu -> free_page
    kvm_vm_ioctl_create_vcpu -> kmem_cache_free
    kvm_arch_vcpu_precreate [label="int kvm_arch_vcpu_precreate (struct kvm *kvm, unsigned int id)
arch/arm64/kvm/arm.c:347"]
    kvm_arch_vcpu_precreate -> irqchip_in_kernel
    kvm_arch_vcpu_precreate -> vgic_initialized
    kvm_vcpu_init [label="void kvm_vcpu_init (struct kvm_vcpu *vcpu, struct kvm *kvm, unsigned id)
virt/kvm/kvm_main.c:482"]
    kvm_vcpu_init -> mutex_init
    kvm_vcpu_init -> rcuwait_init
    kvm_vcpu_init -> kvm_async_pf_vcpu_init
    kvm_vcpu_init -> kvm_vcpu_set_in_spin_loop
    kvm_vcpu_init -> kvm_vcpu_set_dy_eligible
    kvm_vcpu_init -> preempt_notifier_init
    kvm_vcpu_init -> snprintf
    kvm_vcpu_init -> task_pid_nr
    kvm_async_pf_vcpu_init [label="void kvm_async_pf_vcpu_init (struct kvm_vcpu *vcpu)
virt/kvm/async_pf.c:38"]
    kvm_async_pf_vcpu_init -> INIT_LIST_HEAD
    kvm_async_pf_vcpu_init -> spin_lock_init
    preempt_notifier_init [label="preempt_notifier_init()"]
    kvm_arch_vcpu_create [label="int kvm_arch_vcpu_create (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:358"]
    kvm_arch_vcpu_create -> spin_lock_init
    kvm_arch_vcpu_create -> mutex_lock
    kvm_arch_vcpu_create -> mutex_unlock
    kvm_arch_vcpu_create -> vcpu_clear_flag
    kvm_arch_vcpu_create -> kvm_timer_vcpu_init
    kvm_arch_vcpu_create -> kvm_pmu_vcpu_init
    kvm_arch_vcpu_create -> kvm_arm_reset_debug_ptr
    kvm_arch_vcpu_create -> kvm_arm_pvtime_vcpu_init
    kvm_arch_vcpu_create -> kvm_vgic_vcpu_init
    kvm_arch_vcpu_create -> kvm_share_hyp
    kvm_timer_vcpu_init [label="void kvm_timer_vcpu_init (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arch_timer.c:1012"]
    kvm_timer_vcpu_init -> vcpu_timer
    kvm_timer_vcpu_init -> timer_context_init
    kvm_timer_vcpu_init -> test_bit
    kvm_timer_vcpu_init -> timer_set_offset
    kvm_timer_vcpu_init -> vcpu_vtimer
    kvm_timer_vcpu_init -> kvm_phys_timer_read
    kvm_timer_vcpu_init -> vcpu_ptimer
    kvm_timer_vcpu_init -> hrtimer_init
    kvm_timer_vcpu_init -> kvm_bg_timer_expire
    timer_context_init [label="void timer_context_init (struct kvm_vcpu *vcpu, int timerid)
arch/arm64/kvm/arch_timer.c:985"]
    timer_context_init -> vcpu_get_timer
    timer_context_init -> hrtimer_init
    timer_context_init -> kvm_hrtimer_expire
    hrtimer_init [label="hrtimer_init()"]
    kvm_hrtimer_expire [label="enum hrtimer_restart kvm_hrtimer_expire (struct hrtimer *hrt)
arch/arm64/kvm/arch_timer.c:355"]
    kvm_hrtimer_expire -> container_of
    kvm_hrtimer_expire -> trace_kvm_timer_hrtimer_expire
    kvm_hrtimer_expire -> kvm_timer_compute_delta
    kvm_hrtimer_expire -> unlikely
    kvm_hrtimer_expire -> hrtimer_forward_now
    kvm_hrtimer_expire -> ns_to_ktime
    kvm_hrtimer_expire -> kvm_timer_update_irq
    trace_kvm_timer_hrtimer_expire [label="trace_kvm_timer_hrtimer_expire()"]
    hrtimer_forward_now [label="hrtimer_forward_now()"]
    ns_to_ktime [label="ns_to_ktime()"]
    kvm_bg_timer_expire [label="enum hrtimer_restart kvm_bg_timer_expire (struct hrtimer *hrt)
arch/arm64/kvm/arch_timer.c:331"]
    kvm_bg_timer_expire -> container_of
    kvm_bg_timer_expire -> kvm_timer_earliest_exp
    kvm_bg_timer_expire -> unlikely
    kvm_bg_timer_expire -> hrtimer_forward_now
    kvm_bg_timer_expire -> ns_to_ktime
    kvm_bg_timer_expire -> kvm_vcpu_wake_up
    kvm_pmu_vcpu_init [label="void kvm_pmu_vcpu_init (struct kvm_vcpu *vcpu)
arch/arm64/kvm/pmu-emul.c:231"]
    kvm_arm_pvtime_vcpu_init [label="kvm_arm_pvtime_vcpu_init()"]
    kvm_vgic_vcpu_init [label="kvm_vgic_vcpu_init()"]
    kvm_dirty_ring_alloc [label="int kvm_dirty_ring_alloc (struct kvm_dirty_ring *ring, int index, u32 size)
virt/kvm/dirty_ring.c:74"]
    kvm_dirty_ring_alloc -> vzalloc
    kvm_dirty_ring_alloc -> kvm_dirty_ring_get_rsvd_entries
    vzalloc [label="vzalloc()"]
    kvm_dirty_ring_get_rsvd_entries [label="u32 kvm_dirty_ring_get_rsvd_entries (void)
virt/kvm/dirty_ring.c:19"]
    kvm_dirty_ring_get_rsvd_entries -> kvm_cpu_dirty_log_size
    kvm_cpu_dirty_log_size [label="int __weak kvm_cpu_dirty_log_size (void)
virt/kvm/dirty_ring.c:14"]
    kvm_get_vcpu_by_id [label="kvm_get_vcpu_by_id()"]
    xa_reserve [label="xa_reserve()"]
    create_vcpu_fd [label="int create_vcpu_fd (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3894"]
    create_vcpu_fd -> snprintf
    create_vcpu_fd -> anon_inode_getfd
    anon_inode_getfd [label="anon_inode_getfd()"]
    xa_store [label="xa_store()"]
    kvm_arch_vcpu_postcreate [label="void kvm_arch_vcpu_postcreate (struct kvm_vcpu *vcpu)
arch/arm64/kvm/arm.c:401"]
    kvm_create_vcpu_debugfs [label="void kvm_create_vcpu_debugfs (struct kvm_vcpu *vcpu)
virt/kvm/kvm_main.c:3915"]
    kvm_create_vcpu_debugfs -> debugfs_initialized
    kvm_create_vcpu_debugfs -> snprintf
    kvm_create_vcpu_debugfs -> debugfs_create_dir
    kvm_create_vcpu_debugfs -> debugfs_create_file
    kvm_create_vcpu_debugfs -> kvm_arch_create_vcpu_debugfs
    kvm_arch_create_vcpu_debugfs [label="kvm_arch_create_vcpu_debugfs()"]
    kvm_put_kvm_no_destroy [label="void kvm_put_kvm_no_destroy (struct kvm *kvm)
virt/kvm/kvm_main.c:1377"]
    kvm_put_kvm_no_destroy -> WARN_ON
    kvm_put_kvm_no_destroy -> refcount_dec_and_test
    xa_release [label="xa_release()"]
    kvm_vm_ioctl_enable_cap_generic [label="int kvm_vm_ioctl_enable_cap_generic (struct kvm *kvm, struct kvm_enable_cap *cap)
virt/kvm/kvm_main.c:4669"]
    kvm_vm_ioctl_enable_cap_generic -> smp_wmb
    kvm_vm_ioctl_enable_cap_generic -> kvm_vm_ioctl_check_extension_generic
    kvm_vm_ioctl_enable_cap_generic -> kvm_vm_ioctl_enable_dirty_log_ring
    kvm_vm_ioctl_enable_cap_generic -> IS_ENABLED
    kvm_vm_ioctl_enable_cap_generic -> mutex_lock
    kvm_vm_ioctl_enable_cap_generic -> kvm_are_all_memslots_empty
    kvm_vm_ioctl_enable_cap_generic -> mutex_unlock
    kvm_vm_ioctl_enable_cap_generic -> kvm_vm_ioctl_enable_cap
    kvm_vm_ioctl_enable_dirty_log_ring [label="int kvm_vm_ioctl_enable_dirty_log_ring (struct kvm *kvm, u32 size)
virt/kvm/kvm_main.c:4588"]
    kvm_vm_ioctl_enable_dirty_log_ring -> kvm_dirty_ring_get_rsvd_entries
    kvm_vm_ioctl_enable_dirty_log_ring -> mutex_lock
    kvm_vm_ioctl_enable_dirty_log_ring -> mutex_unlock
    kvm_are_all_memslots_empty [label="} bool kvm_are_all_memslots_empty (struct kvm *kvm)
virt/kvm/kvm_main.c:4654"]
    kvm_vm_ioctl_enable_cap [label="int kvm_vm_ioctl_enable_cap (struct kvm *kvm, struct kvm_enable_cap *cap)
arch/arm64/kvm/arm.c:72"]
    kvm_vm_ioctl_enable_cap -> set_bit
    kvm_vm_ioctl_enable_cap -> mutex_lock
    kvm_vm_ioctl_enable_cap -> system_supports_mte
    kvm_vm_ioctl_enable_cap -> mutex_unlock
    kvm_vm_ioctl_enable_cap -> kvm_are_all_memslots_empty
    kvm_vm_ioctl_enable_cap -> kvm_is_block_size_supported
    kvm_is_block_size_supported [label="kvm_is_block_size_supported()"]
    kvm_vm_ioctl_set_memory_region [label="int kvm_vm_ioctl_set_memory_region (struct kvm *kvm, struct kvm_userspace_memory_region *mem)
virt/kvm/kvm_main.c:2058"]
    kvm_vm_ioctl_set_memory_region -> kvm_set_memory_region
    kvm_set_memory_region [label="int kvm_set_memory_region (struct kvm *kvm, const struct kvm_userspace_memory_region *mem)
virt/kvm/kvm_main.c:2046"]
    kvm_set_memory_region -> mutex_lock
    kvm_set_memory_region -> mutex_unlock
    kvm_vm_ioctl_register_coalesced_mmio [label="int kvm_vm_ioctl_register_coalesced_mmio (struct kvm *kvm, struct kvm_coalesced_mmio_zone *zone)
virt/kvm/coalesced_mmio.c:137"]
    kvm_vm_ioctl_register_coalesced_mmio -> kzalloc
    kvm_vm_ioctl_register_coalesced_mmio -> kvm_iodevice_init
    kvm_vm_ioctl_register_coalesced_mmio -> mutex_lock
    kvm_vm_ioctl_register_coalesced_mmio -> kvm_io_bus_register_dev
    kvm_vm_ioctl_register_coalesced_mmio -> list_add_tail
    kvm_vm_ioctl_register_coalesced_mmio -> mutex_unlock
    kvm_vm_ioctl_register_coalesced_mmio -> kfree
    kvm_iodevice_init [label="kvm_iodevice_init()"]
    kvm_io_bus_register_dev [label="int kvm_io_bus_register_dev (struct kvm *kvm, enum kvm_bus bus_idx, gpa_t addr, int len, struct kvm_io_device *dev)
virt/kvm/kvm_main.c:5543"]
    kvm_io_bus_register_dev -> lockdep_assert_held
    kvm_io_bus_register_dev -> kvm_get_bus
    kvm_io_bus_register_dev -> kmalloc
    kvm_io_bus_register_dev -> struct_size
    kvm_io_bus_register_dev -> kvm_io_bus_cmp
    kvm_io_bus_register_dev -> memcpy
    kvm_io_bus_register_dev -> rcu_assign_pointer
    kvm_io_bus_register_dev -> synchronize_srcu_expedited
    kvm_io_bus_register_dev -> kfree
    synchronize_srcu_expedited [label="synchronize_srcu_expedited()"]
    kvm_vm_ioctl_unregister_coalesced_mmio [label="int kvm_vm_ioctl_unregister_coalesced_mmio (struct kvm *kvm, struct kvm_coalesced_mmio_zone *zone)
virt/kvm/coalesced_mmio.c:173"]
    kvm_vm_ioctl_unregister_coalesced_mmio -> mutex_lock
    kvm_vm_ioctl_unregister_coalesced_mmio -> list_for_each_entry_safe
    kvm_vm_ioctl_unregister_coalesced_mmio -> coalesced_mmio_in_range
    kvm_vm_ioctl_unregister_coalesced_mmio -> kvm_io_bus_unregister_dev
    kvm_vm_ioctl_unregister_coalesced_mmio -> mutex_unlock
    kvm_io_bus_unregister_dev [label="int kvm_io_bus_unregister_dev (struct kvm *kvm, enum kvm_bus bus_idx, struct kvm_io_device *dev)
virt/kvm/kvm_main.c:5587"]
    kvm_io_bus_unregister_dev -> lockdep_assert_held
    kvm_io_bus_unregister_dev -> kvm_get_bus
    kvm_io_bus_unregister_dev -> kmalloc
    kvm_io_bus_unregister_dev -> struct_size
    kvm_io_bus_unregister_dev -> memcpy
    kvm_io_bus_unregister_dev -> flex_array_size
    kvm_io_bus_unregister_dev -> rcu_assign_pointer
    kvm_io_bus_unregister_dev -> synchronize_srcu_expedited
    kvm_io_bus_unregister_dev -> pr_err
    kvm_io_bus_unregister_dev -> kvm_io_bus_destroy
    kvm_io_bus_unregister_dev -> kvm_iodevice_destructor
    kvm_io_bus_unregister_dev -> kfree
    flex_array_size [label="flex_array_size()"]
    kvm_irqfd [label="int kvm_irqfd (struct kvm *kvm, struct kvm_irqfd *args)
virt/kvm/eventfd.c:588"]
    kvm_irqfd -> kvm_irqfd_deassign
    kvm_irqfd -> kvm_irqfd_assign
    kvm_irqfd_deassign [label="int kvm_irqfd_deassign (struct kvm *kvm, struct kvm_irqfd *args)
virt/kvm/eventfd.c:548"]
    kvm_irqfd_deassign -> eventfd_ctx_fdget
    kvm_irqfd_deassign -> IS_ERR
    kvm_irqfd_deassign -> PTR_ERR
    kvm_irqfd_deassign -> spin_lock_irq
    kvm_irqfd_deassign -> list_for_each_entry_safe
    kvm_irqfd_deassign -> write_seqcount_begin
    kvm_irqfd_deassign -> write_seqcount_end
    kvm_irqfd_deassign -> irqfd_deactivate
    kvm_irqfd_deassign -> spin_unlock_irq
    kvm_irqfd_deassign -> eventfd_ctx_put
    kvm_irqfd_deassign -> flush_workqueue
    eventfd_ctx_fdget [label="eventfd_ctx_fdget()"]
    spin_lock_irq [label="spin_lock_irq()"]
    write_seqcount_begin [label="write_seqcount_begin()"]
    write_seqcount_end [label="write_seqcount_end()"]
    irqfd_deactivate [label="void irqfd_deactivate (struct kvm_kernel_irqfd *irqfd)
virt/kvm/eventfd.c:172"]
    irqfd_deactivate -> BUG_ON
    irqfd_deactivate -> irqfd_is_active
    irqfd_deactivate -> list_del_init
    irqfd_deactivate -> queue_work
    irqfd_is_active [label="bool irqfd_is_active (struct kvm_kernel_irqfd *irqfd)
virt/kvm/eventfd.c:161"]
    irqfd_is_active -> list_empty
    list_del_init [label="list_del_init()"]
    queue_work [label="queue_work()"]
    spin_unlock_irq [label="spin_unlock_irq()"]
    flush_workqueue [label="flush_workqueue()"]
    kvm_irqfd_assign [label="int kvm_irqfd_assign (struct kvm *kvm, struct kvm_irqfd *args)
virt/kvm/eventfd.c:303"]
    kvm_irqfd_assign -> kvm_arch_intc_initialized
    kvm_irqfd_assign -> kvm_arch_irqfd_allowed
    kvm_irqfd_assign -> kzalloc
    kvm_irqfd_assign -> INIT_LIST_HEAD
    kvm_irqfd_assign -> INIT_WORK
    kvm_irqfd_assign -> irqfd_inject
    kvm_irqfd_assign -> irqfd_shutdown
    kvm_irqfd_assign -> seqcount_spinlock_init
    kvm_irqfd_assign -> fdget
    kvm_irqfd_assign -> eventfd_ctx_fileget
    kvm_irqfd_assign -> IS_ERR
    kvm_irqfd_assign -> PTR_ERR
    kvm_irqfd_assign -> eventfd_ctx_fdget
    kvm_irqfd_assign -> mutex_lock
    kvm_irqfd_assign -> list_for_each_entry
    kvm_irqfd_assign -> mutex_unlock
    kvm_irqfd_assign -> irqfd_resampler_ack
    kvm_irqfd_assign -> list_add_rcu
    kvm_irqfd_assign -> kvm_register_irq_ack_notifier
    kvm_irqfd_assign -> synchronize_srcu
    kvm_irqfd_assign -> init_waitqueue_func_entry
    kvm_irqfd_assign -> irqfd_wakeup
    kvm_irqfd_assign -> init_poll_funcptr
    kvm_irqfd_assign -> irqfd_ptable_queue_proc
    kvm_irqfd_assign -> spin_lock_irq
    kvm_irqfd_assign -> spin_unlock_irq
    kvm_irqfd_assign -> srcu_read_lock
    kvm_irqfd_assign -> irqfd_update
    kvm_irqfd_assign -> list_add_tail
    kvm_irqfd_assign -> vfs_poll
    kvm_irqfd_assign -> schedule_work
    kvm_irqfd_assign -> kvm_arch_has_irq_bypass
    kvm_irqfd_assign -> kvm_arch_irq_bypass_add_producer
    kvm_irqfd_assign -> kvm_arch_irq_bypass_del_producer
    kvm_irqfd_assign -> kvm_arch_irq_bypass_stop
    kvm_irqfd_assign -> kvm_arch_irq_bypass_start
    kvm_irqfd_assign -> irq_bypass_register_consumer
    kvm_irqfd_assign -> pr_info
    kvm_irqfd_assign -> srcu_read_unlock
    kvm_irqfd_assign -> fdput
    kvm_irqfd_assign -> irqfd_resampler_shutdown
    kvm_irqfd_assign -> eventfd_ctx_put
    kvm_irqfd_assign -> kfree
    kvm_arch_intc_initialized [label="bool kvm_arch_intc_initialized (struct kvm *kvm)
arch/arm64/kvm/arm.c:709"]
    kvm_arch_intc_initialized -> vgic_initialized
    kvm_arch_irqfd_allowed [label="kvm_arch_irqfd_allowed()"]
    irqfd_inject [label="} void irqfd_inject (struct work_struct *work)
virt/kvm/eventfd.c:42"]
    irqfd_shutdown [label="void irqfd_shutdown (struct work_struct *work)
virt/kvm/eventfd.c:121"]
    irqfd_shutdown -> container_of
    irqfd_shutdown -> synchronize_srcu
    irqfd_shutdown -> eventfd_ctx_remove_wait_queue
    irqfd_shutdown -> flush_work
    irqfd_shutdown -> irqfd_resampler_shutdown
    irqfd_shutdown -> eventfd_ctx_put
    irqfd_shutdown -> irq_bypass_unregister_consumer
    irqfd_shutdown -> kfree
    synchronize_srcu [label="synchronize_srcu()"]
    eventfd_ctx_remove_wait_queue [label="eventfd_ctx_remove_wait_queue()"]
    irqfd_resampler_shutdown [label="void irqfd_resampler_shutdown (struct kvm_kernel_irqfd *irqfd)
virt/kvm/eventfd.c:92"]
    irqfd_resampler_shutdown -> mutex_lock
    irqfd_resampler_shutdown -> list_del_rcu
    irqfd_resampler_shutdown -> synchronize_srcu
    irqfd_resampler_shutdown -> list_empty
    irqfd_resampler_shutdown -> kvm_unregister_irq_ack_notifier
    irqfd_resampler_shutdown -> kvm_set_irq
    irqfd_resampler_shutdown -> kfree
    irqfd_resampler_shutdown -> mutex_unlock
    list_del_rcu [label="list_del_rcu()"]
    kvm_unregister_irq_ack_notifier [label="void kvm_unregister_irq_ack_notifier (struct kvm *kvm, struct kvm_irq_ack_notifier *kian)
virt/kvm/eventfd.c:520"]
    kvm_unregister_irq_ack_notifier -> mutex_lock
    kvm_unregister_irq_ack_notifier -> hlist_del_init_rcu
    kvm_unregister_irq_ack_notifier -> mutex_unlock
    kvm_unregister_irq_ack_notifier -> synchronize_srcu
    kvm_unregister_irq_ack_notifier -> kvm_arch_post_irq_ack_notifier_list_update
    hlist_del_init_rcu [label="hlist_del_init_rcu()"]
    kvm_arch_post_irq_ack_notifier_list_update [label="kvm_arch_post_irq_ack_notifier_list_update()"]
    kvm_set_irq [label="int kvm_set_irq (struct kvm *kvm, int irq_source_id, u32 irq, int level, bool line_status)
virt/kvm/irqchip.c:70"]
    kvm_set_irq -> trace_kvm_set_irq
    kvm_set_irq -> srcu_read_lock
    kvm_set_irq -> kvm_irq_map_gsi
    kvm_set_irq -> srcu_read_unlock
    trace_kvm_set_irq [label="trace_kvm_set_irq()"]
    kvm_irq_map_gsi [label="int kvm_irq_map_gsi (struct kvm *kvm, struct kvm_kernel_irq_routing_entry *entries, int gsi)
virt/kvm/irqchip.c:21"]
    kvm_irq_map_gsi -> srcu_dereference_check
    kvm_irq_map_gsi -> lockdep_is_held
    kvm_irq_map_gsi -> hlist_for_each_entry
    srcu_dereference_check [label="srcu_dereference_check()"]
    lockdep_is_held [label="lockdep_is_held()"]
    hlist_for_each_entry [label="hlist_for_each_entry()"]
    irq_bypass_unregister_consumer [label="irq_bypass_unregister_consumer()"]
    seqcount_spinlock_init [label="seqcount_spinlock_init()"]
    eventfd_ctx_fileget [label="eventfd_ctx_fileget()"]
    irqfd_resampler_ack [label="void irqfd_resampler_ack (struct kvm_irq_ack_notifier *kian)
virt/kvm/eventfd.c:73"]
    irqfd_resampler_ack -> container_of
    irqfd_resampler_ack -> kvm_set_irq
    irqfd_resampler_ack -> srcu_read_lock
    irqfd_resampler_ack -> irqfd_resampler_notify
    irqfd_resampler_ack -> srcu_read_unlock
    list_add_rcu [label="list_add_rcu()"]
    kvm_register_irq_ack_notifier [label="void kvm_register_irq_ack_notifier (struct kvm *kvm, struct kvm_irq_ack_notifier *kian)
virt/kvm/eventfd.c:511"]
    kvm_register_irq_ack_notifier -> mutex_lock
    kvm_register_irq_ack_notifier -> hlist_add_head_rcu
    kvm_register_irq_ack_notifier -> mutex_unlock
    kvm_register_irq_ack_notifier -> kvm_arch_post_irq_ack_notifier_list_update
    hlist_add_head_rcu [label="hlist_add_head_rcu()"]
    init_waitqueue_func_entry [label="init_waitqueue_func_entry()"]
    irqfd_wakeup [label="} int irqfd_wakeup (wait_queue_entry_t *wait, unsigned mode, int sync, void *key)
virt/kvm/eventfd.c:194"]
    init_poll_funcptr [label="init_poll_funcptr()"]
    irqfd_ptable_queue_proc [label="void irqfd_ptable_queue_proc (struct file *file, wait_queue_head_t *wqh, poll_table *pt)
virt/kvm/eventfd.c:248"]
    irqfd_ptable_queue_proc -> container_of
    irqfd_ptable_queue_proc -> add_wait_queue_priority
    add_wait_queue_priority [label="add_wait_queue_priority()"]
    irqfd_update [label="void irqfd_update (struct kvm *kvm, struct kvm_kernel_irqfd *irqfd)
virt/kvm/eventfd.c:257"]
    irqfd_update -> kvm_irq_map_gsi
    irqfd_update -> write_seqcount_begin
    irqfd_update -> write_seqcount_end
    vfs_poll [label="vfs_poll()"]
    kvm_arch_has_irq_bypass [label="bool kvm_arch_has_irq_bypass (void)
arch/arm64/kvm/arm.c:2480"]
    kvm_arch_irq_bypass_add_producer [label="int kvm_arch_irq_bypass_add_producer (struct irq_bypass_consumer *cons, struct irq_bypass_producer *prod)
arch/arm64/kvm/arm.c:2485"]
    kvm_arch_irq_bypass_add_producer -> container_of
    kvm_arch_irq_bypass_add_producer -> kvm_vgic_v4_set_forwarding
    kvm_vgic_v4_set_forwarding [label="kvm_vgic_v4_set_forwarding()"]
    kvm_arch_irq_bypass_del_producer [label="void kvm_arch_irq_bypass_del_producer (struct irq_bypass_consumer *cons, struct irq_bypass_producer *prod)
arch/arm64/kvm/arm.c:2494"]
    kvm_arch_irq_bypass_del_producer -> container_of
    kvm_arch_irq_bypass_del_producer -> kvm_vgic_v4_unset_forwarding
    kvm_vgic_v4_unset_forwarding [label="kvm_vgic_v4_unset_forwarding()"]
    kvm_arch_irq_bypass_stop [label="void kvm_arch_irq_bypass_stop (struct irq_bypass_consumer *cons)
arch/arm64/kvm/arm.c:2504"]
    kvm_arch_irq_bypass_stop -> container_of
    kvm_arch_irq_bypass_stop -> kvm_arm_halt_guest
    kvm_arm_halt_guest [label="void kvm_arm_halt_guest (struct kvm *kvm)
arch/arm64/kvm/arm.c:714"]
    kvm_arm_halt_guest -> kvm_for_each_vcpu
    kvm_arm_halt_guest -> kvm_make_all_cpus_request
    kvm_arch_irq_bypass_start [label="void kvm_arch_irq_bypass_start (struct irq_bypass_consumer *cons)
arch/arm64/kvm/arm.c:2512"]
    kvm_arch_irq_bypass_start -> container_of
    kvm_arch_irq_bypass_start -> kvm_arm_resume_guest
    kvm_arm_resume_guest [label="void kvm_arm_resume_guest (struct kvm *kvm)
arch/arm64/kvm/arm.c:724"]
    kvm_arm_resume_guest -> kvm_for_each_vcpu
    irq_bypass_register_consumer [label="irq_bypass_register_consumer()"]
    kvm_ioeventfd [label="int kvm_ioeventfd (struct kvm *kvm, struct kvm_ioeventfd *args)
virt/kvm/eventfd.c:1008"]
    kvm_ioeventfd -> kvm_deassign_ioeventfd
    kvm_ioeventfd -> kvm_assign_ioeventfd
    kvm_deassign_ioeventfd [label="int kvm_deassign_ioeventfd (struct kvm *kvm, struct kvm_ioeventfd *args)
virt/kvm/eventfd.c:944"]
    kvm_deassign_ioeventfd -> ioeventfd_bus_from_flags
    kvm_deassign_ioeventfd -> kvm_deassign_ioeventfd_idx
    ioeventfd_bus_from_flags [label="enum kvm_bus ioeventfd_bus_from_flags (__u32 flags)
virt/kvm/eventfd.c:828"]
    kvm_deassign_ioeventfd_idx [label="int kvm_deassign_ioeventfd_idx (struct kvm *kvm, enum kvm_bus bus_idx, struct kvm_ioeventfd *args)
virt/kvm/eventfd.c:901"]
    kvm_deassign_ioeventfd_idx -> bool
    kvm_deassign_ioeventfd_idx -> eventfd_ctx_fdget
    kvm_deassign_ioeventfd_idx -> IS_ERR
    kvm_deassign_ioeventfd_idx -> PTR_ERR
    kvm_deassign_ioeventfd_idx -> mutex_lock
    kvm_deassign_ioeventfd_idx -> list_for_each_entry
    kvm_deassign_ioeventfd_idx -> kvm_io_bus_unregister_dev
    kvm_deassign_ioeventfd_idx -> kvm_get_bus
    kvm_deassign_ioeventfd_idx -> mutex_unlock
    kvm_deassign_ioeventfd_idx -> eventfd_ctx_put
    kvm_assign_ioeventfd [label="int kvm_assign_ioeventfd (struct kvm *kvm, struct kvm_ioeventfd *args)
virt/kvm/eventfd.c:956"]
    kvm_assign_ioeventfd -> ioeventfd_bus_from_flags
    kvm_assign_ioeventfd -> kvm_assign_ioeventfd_idx
    kvm_assign_ioeventfd -> kvm_deassign_ioeventfd_idx
    kvm_assign_ioeventfd_idx [label="int kvm_assign_ioeventfd_idx (struct kvm *kvm, enum kvm_bus bus_idx, struct kvm_ioeventfd *args)
virt/kvm/eventfd.c:837"]
    kvm_assign_ioeventfd_idx -> eventfd_ctx_fdget
    kvm_assign_ioeventfd_idx -> IS_ERR
    kvm_assign_ioeventfd_idx -> PTR_ERR
    kvm_assign_ioeventfd_idx -> kzalloc
    kvm_assign_ioeventfd_idx -> INIT_LIST_HEAD
    kvm_assign_ioeventfd_idx -> mutex_lock
    kvm_assign_ioeventfd_idx -> ioeventfd_check_collision
    kvm_assign_ioeventfd_idx -> kvm_iodevice_init
    kvm_assign_ioeventfd_idx -> kvm_io_bus_register_dev
    kvm_assign_ioeventfd_idx -> kvm_get_bus
    kvm_assign_ioeventfd_idx -> list_add_tail
    kvm_assign_ioeventfd_idx -> mutex_unlock
    kvm_assign_ioeventfd_idx -> kfree
    kvm_assign_ioeventfd_idx -> eventfd_ctx_put
    ioeventfd_check_collision [label="bool ioeventfd_check_collision (struct kvm *kvm, struct _ioeventfd *p)
virt/kvm/eventfd.c:812"]
    ioeventfd_check_collision -> list_for_each_entry
    kvm_send_userspace_msi [label="int kvm_send_userspace_msi (struct kvm *kvm, struct kvm_msi *msi)
virt/kvm/irqchip.c:48"]
    kvm_send_userspace_msi -> kvm_arch_irqchip_in_kernel
    kvm_send_userspace_msi -> kvm_set_msi
    kvm_arch_irqchip_in_kernel [label="bool kvm_arch_irqchip_in_kernel (struct kvm *kvm)
arch/arm64/kvm/arm.c:2475"]
    kvm_arch_irqchip_in_kernel -> irqchip_in_kernel
    kvm_set_msi [label="kvm_set_msi()"]
    kvm_vm_ioctl_irq_line [label="int kvm_vm_ioctl_irq_line (struct kvm *kvm, struct kvm_irq_level *irq_level, bool line_status)
arch/arm64/kvm/arm.c:1191"]
    kvm_vm_ioctl_irq_line -> bool
    kvm_vm_ioctl_irq_line -> trace_kvm_irq_line
    kvm_vm_ioctl_irq_line -> irqchip_in_kernel
    kvm_vm_ioctl_irq_line -> kvm_get_vcpu_by_id
    kvm_vm_ioctl_irq_line -> vcpu_interrupt_line
    kvm_vm_ioctl_irq_line -> kvm_vgic_inject_irq
    trace_kvm_irq_line [label="trace_kvm_irq_line()"]
    vcpu_interrupt_line [label="int vcpu_interrupt_line (struct kvm_vcpu *vcpu, int number, bool level)
arch/arm64/kvm/arm.c:1157"]
    vcpu_interrupt_line -> bool
    vcpu_interrupt_line -> vcpu_hcr
    vcpu_interrupt_line -> test_and_set_bit
    vcpu_interrupt_line -> test_and_clear_bit
    vcpu_interrupt_line -> kvm_make_request
    vcpu_interrupt_line -> kvm_vcpu_kick
    test_and_set_bit [label="test_and_set_bit()"]
    test_and_clear_bit [label="test_and_clear_bit()"]
    kvm_arch_can_set_irq_routing [label="bool __weak kvm_arch_can_set_irq_routing (struct kvm *kvm)
virt/kvm/irqchip.c:163"]
    vmemdup_user [label="vmemdup_user()"]
    array_size [label="array_size()"]
    kvm_set_irq_routing [label="int kvm_set_irq_routing (struct kvm *kvm, const struct kvm_irq_routing_entry *ue, unsigned nr, unsigned flags)
virt/kvm/irqchip.c:168"]
    kvm_set_irq_routing -> max
    kvm_set_irq_routing -> kzalloc
    kvm_set_irq_routing -> struct_size
    kvm_set_irq_routing -> setup_routing_entry
    kvm_set_irq_routing -> mutex_lock
    kvm_set_irq_routing -> rcu_dereference_protected
    kvm_set_irq_routing -> rcu_assign_pointer
    kvm_set_irq_routing -> kvm_irq_routing_update
    kvm_set_irq_routing -> kvm_arch_irq_routing_update
    kvm_set_irq_routing -> mutex_unlock
    kvm_set_irq_routing -> kvm_arch_post_irq_routing_update
    kvm_set_irq_routing -> synchronize_srcu_expedited
    kvm_set_irq_routing -> kfree
    kvm_set_irq_routing -> free_irq_routing_table
    setup_routing_entry [label="int setup_routing_entry (struct kvm *kvm, struct kvm_irq_routing_table *rt, struct kvm_kernel_irq_routing_entry *e, const struct kvm_irq_routing_entry *ue)
virt/kvm/irqchip.c:127"]
    setup_routing_entry -> array_index_nospec
    setup_routing_entry -> hlist_for_each_entry
    setup_routing_entry -> kvm_set_routing_entry
    setup_routing_entry -> hlist_add_head
    kvm_set_routing_entry [label="kvm_set_routing_entry()"]
    hlist_add_head [label="hlist_add_head()"]
    kvm_irq_routing_update [label="void kvm_irq_routing_update (struct kvm *kvm)
virt/kvm/eventfd.c:627"]
    kvm_irq_routing_update -> spin_lock_irq
    kvm_irq_routing_update -> list_for_each_entry
    kvm_irq_routing_update -> irqfd_update
    kvm_irq_routing_update -> kvm_arch_irqfd_route_changed
    kvm_irq_routing_update -> kvm_arch_update_irqfd_routing
    kvm_irq_routing_update -> WARN_ON
    kvm_irq_routing_update -> spin_unlock_irq
    kvm_arch_irqfd_route_changed [label="kvm_arch_irqfd_route_changed()"]
    kvm_arch_update_irqfd_routing [label="kvm_arch_update_irqfd_routing()"]
    kvm_arch_irq_routing_update [label="kvm_arch_irq_routing_update()"]
    kvm_arch_post_irq_routing_update [label="kvm_arch_post_irq_routing_update()"]
    kvm_ioctl_create_device [label="int kvm_ioctl_create_device (struct kvm *kvm, struct kvm_create_device *cd)
virt/kvm/kvm_main.c:4468"]
    kvm_ioctl_create_device -> ARRAY_SIZE
    kvm_ioctl_create_device -> array_index_nospec
    kvm_ioctl_create_device -> kzalloc
    kvm_ioctl_create_device -> mutex_lock
    kvm_ioctl_create_device -> mutex_unlock
    kvm_ioctl_create_device -> kfree
    kvm_ioctl_create_device -> list_add
    kvm_ioctl_create_device -> kvm_get_kvm
    kvm_ioctl_create_device -> anon_inode_getfd
    kvm_ioctl_create_device -> kvm_put_kvm_no_destroy
    kvm_ioctl_create_device -> list_del
    kvm_vm_ioctl_reset_dirty_pages [label="int kvm_vm_ioctl_reset_dirty_pages (struct kvm *kvm)
virt/kvm/kvm_main.c:4626"]
    kvm_vm_ioctl_reset_dirty_pages -> mutex_lock
    kvm_vm_ioctl_reset_dirty_pages -> kvm_for_each_vcpu
    kvm_vm_ioctl_reset_dirty_pages -> kvm_dirty_ring_reset
    kvm_vm_ioctl_reset_dirty_pages -> mutex_unlock
    kvm_vm_ioctl_reset_dirty_pages -> kvm_flush_remote_tlbs
    kvm_dirty_ring_reset [label="int kvm_dirty_ring_reset (struct kvm *kvm, struct kvm_dirty_ring *ring)
virt/kvm/dirty_ring.c:104"]
    kvm_dirty_ring_reset -> bool
    kvm_dirty_ring_reset -> kvm_dirty_gfn_harvested
    kvm_dirty_ring_reset -> READ_ONCE
    kvm_dirty_ring_reset -> kvm_dirty_gfn_set_invalid
    kvm_dirty_ring_reset -> kvm_reset_dirty_gfn
    kvm_dirty_ring_reset -> trace_kvm_dirty_ring_reset
    kvm_dirty_gfn_harvested [label="inline bool kvm_dirty_gfn_harvested (struct kvm_dirty_gfn *gfn)
virt/kvm/dirty_ring.c:99"]
    kvm_dirty_gfn_harvested -> smp_load_acquire
    smp_load_acquire [label="smp_load_acquire()"]
    kvm_dirty_gfn_set_invalid [label="inline void kvm_dirty_gfn_set_invalid (struct kvm_dirty_gfn *gfn)
virt/kvm/dirty_ring.c:89"]
    kvm_dirty_gfn_set_invalid -> smp_store_release
    smp_store_release [label="smp_store_release()"]
    kvm_reset_dirty_gfn [label="void kvm_reset_dirty_gfn (struct kvm *kvm, u32 slot, u64 offset, u64 mask)
virt/kvm/dirty_ring.c:53"]
    kvm_reset_dirty_gfn -> id_to_memslot
    kvm_reset_dirty_gfn -> KVM_MMU_LOCK
    kvm_reset_dirty_gfn -> kvm_arch_mmu_enable_log_dirty_pt_masked
    kvm_reset_dirty_gfn -> KVM_MMU_UNLOCK
    trace_kvm_dirty_ring_reset [label="trace_kvm_dirty_ring_reset()"]
    kvm_vm_ioctl_get_stats_fd [label="int kvm_vm_ioctl_get_stats_fd (struct kvm *kvm)
virt/kvm/kvm_main.c:4762"]
    kvm_vm_ioctl_get_stats_fd -> get_unused_fd_flags
    kvm_vm_ioctl_get_stats_fd -> anon_inode_getfile
    kvm_vm_ioctl_get_stats_fd -> IS_ERR
    kvm_vm_ioctl_get_stats_fd -> put_unused_fd
    kvm_vm_ioctl_get_stats_fd -> PTR_ERR
    kvm_vm_ioctl_get_stats_fd -> kvm_get_kvm
    kvm_vm_ioctl_get_stats_fd -> fd_install
    kvm_arch_vm_ioctl [label="int kvm_arch_vm_ioctl (struct file *filp, unsigned int ioctl, unsigned long arg)
arch/arm64/kvm/arm.c:1678"]
    kvm_arch_vm_ioctl -> mutex_lock
    kvm_arch_vm_ioctl -> kvm_vgic_create
    kvm_arch_vm_ioctl -> mutex_unlock
    kvm_arch_vm_ioctl -> copy_from_user
    kvm_arch_vm_ioctl -> kvm_vm_ioctl_set_device_addr
    kvm_arch_vm_ioctl -> copy_to_user
    kvm_arch_vm_ioctl -> kvm_vm_ioctl_mte_copy_tags
    kvm_arch_vm_ioctl -> kvm_vm_ioctl_set_counter_offset
    kvm_arch_vm_ioctl -> kvm_vm_has_attr
    kvm_arch_vm_ioctl -> kvm_vm_set_attr
    kvm_arch_vm_ioctl -> kvm_vm_ioctl_get_reg_writable_masks
    kvm_vgic_create [label="kvm_vgic_create()"]
    kvm_vm_ioctl_set_device_addr [label="int kvm_vm_ioctl_set_device_addr (struct kvm *kvm, struct kvm_arm_device_addr *dev_addr)
arch/arm64/kvm/arm.c:1645"]
    kvm_vm_ioctl_set_device_addr -> FIELD_GET
    kvm_vm_ioctl_set_device_addr -> kvm_set_legacy_vgic_v2_addr
    kvm_set_legacy_vgic_v2_addr [label="kvm_set_legacy_vgic_v2_addr()"]
    kvm_vm_ioctl_mte_copy_tags [label="int kvm_vm_ioctl_mte_copy_tags (struct kvm *kvm, struct kvm_arm_copy_mte_tags *copy_tags)
arch/arm64/kvm/guest.c:1014"]
    kvm_vm_ioctl_mte_copy_tags -> bool
    kvm_vm_ioctl_mte_copy_tags -> kvm_has_mte
    kvm_vm_ioctl_mte_copy_tags -> gpa_to_gfn
    kvm_vm_ioctl_mte_copy_tags -> mutex_lock
    kvm_vm_ioctl_mte_copy_tags -> gfn_to_pfn_prot
    kvm_vm_ioctl_mte_copy_tags -> is_error_noslot_pfn
    kvm_vm_ioctl_mte_copy_tags -> pfn_to_online_page
    kvm_vm_ioctl_mte_copy_tags -> page_address
    kvm_vm_ioctl_mte_copy_tags -> page_mte_tagged
    kvm_vm_ioctl_mte_copy_tags -> mte_copy_tags_to_user
    kvm_vm_ioctl_mte_copy_tags -> clear_user
    kvm_vm_ioctl_mte_copy_tags -> kvm_release_pfn_clean
    kvm_vm_ioctl_mte_copy_tags -> try_page_mte_tagging
    kvm_vm_ioctl_mte_copy_tags -> mte_copy_tags_from_user
    kvm_vm_ioctl_mte_copy_tags -> mte_clear_page_tags
    kvm_vm_ioctl_mte_copy_tags -> set_page_mte_tagged
    kvm_vm_ioctl_mte_copy_tags -> kvm_release_pfn_dirty
    kvm_vm_ioctl_mte_copy_tags -> mutex_unlock
    gpa_to_gfn [label="gpa_to_gfn()"]
    gfn_to_pfn_prot [label="kvm_pfn_t gfn_to_pfn_prot (struct kvm *kvm, gfn_t gfn, bool write_fault, bool *writable)
virt/kvm/kvm_main.c:2771"]
    gfn_to_pfn_prot -> gfn_to_memslot
    pfn_to_online_page [label="pfn_to_online_page()"]
    mte_copy_tags_to_user [label="mte_copy_tags_to_user()"]
    mte_copy_tags_from_user [label="mte_copy_tags_from_user()"]
    kvm_vm_ioctl_set_counter_offset [label="int kvm_vm_ioctl_set_counter_offset (struct kvm *kvm, struct kvm_arm_counter_offset *offset)
arch/arm64/kvm/arch_timer.c:1652"]
    kvm_vm_ioctl_set_counter_offset -> mutex_lock
    kvm_vm_ioctl_set_counter_offset -> lock_all_vcpus
    kvm_vm_ioctl_set_counter_offset -> set_bit
    kvm_vm_ioctl_set_counter_offset -> unlock_all_vcpus
    kvm_vm_ioctl_set_counter_offset -> mutex_unlock
    lock_all_vcpus [label="bool lock_all_vcpus (struct kvm *kvm)
arch/arm64/kvm/arm.c:1768"]
    lock_all_vcpus -> lockdep_assert_held
    lock_all_vcpus -> kvm_for_each_vcpu
    lock_all_vcpus -> mutex_trylock
    lock_all_vcpus -> unlock_vcpus
    mutex_trylock [label="mutex_trylock()"]
    unlock_vcpus [label="void unlock_vcpus (struct kvm *kvm, int vcpu_lock_idx)
arch/arm64/kvm/arm.c:1750"]
    unlock_vcpus -> kvm_get_vcpu
    unlock_vcpus -> mutex_unlock
    unlock_all_vcpus [label="void unlock_all_vcpus (struct kvm *kvm)
arch/arm64/kvm/arm.c:1760"]
    unlock_all_vcpus -> lockdep_assert_held
    unlock_all_vcpus -> unlock_vcpus
    unlock_all_vcpus -> atomic_read
    kvm_vm_has_attr [label="int kvm_vm_has_attr (struct kvm *kvm, struct kvm_device_attr *attr)
arch/arm64/kvm/arm.c:1658"]
    kvm_vm_has_attr -> kvm_vm_smccc_has_attr
    kvm_vm_smccc_has_attr [label="int kvm_vm_smccc_has_attr (struct kvm *kvm, struct kvm_device_attr *attr)
arch/arm64/kvm/hypercalls.c:642"]
    kvm_vm_set_attr [label="int kvm_vm_set_attr (struct kvm *kvm, struct kvm_device_attr *attr)
arch/arm64/kvm/arm.c:1668"]
    kvm_vm_set_attr -> kvm_vm_smccc_set_attr
    kvm_vm_smccc_set_attr [label="int kvm_vm_smccc_set_attr (struct kvm *kvm, struct kvm_device_attr *attr)
arch/arm64/kvm/hypercalls.c:652"]
    kvm_vm_smccc_set_attr -> kvm_smccc_set_filter
    kvm_smccc_set_filter [label="int kvm_smccc_set_filter (struct kvm *kvm, struct kvm_smccc_filter __user *uaddr)
arch/arm64/kvm/hypercalls.c:170"]
    kvm_smccc_set_filter -> page_to_virt
    kvm_smccc_set_filter -> ZERO_PAGE
    kvm_smccc_set_filter -> copy_from_user
    kvm_smccc_set_filter -> memcmp
    kvm_smccc_set_filter -> mutex_lock
    kvm_smccc_set_filter -> kvm_vm_has_ran_once
    kvm_smccc_set_filter -> kvm_smccc_filter_configured
    kvm_smccc_set_filter -> kvm_smccc_filter_insert_reserved
    kvm_smccc_set_filter -> WARN_ON_ONCE
    kvm_smccc_set_filter -> mtree_insert_range
    kvm_smccc_set_filter -> xa_mk_value
    kvm_smccc_set_filter -> mutex_unlock
    page_to_virt [label="page_to_virt()"]
    memcmp [label="memcmp()"]
    kvm_smccc_filter_insert_reserved [label="int kvm_smccc_filter_insert_reserved (struct kvm *kvm)
arch/arm64/kvm/hypercalls.c:136"]
    kvm_smccc_filter_insert_reserved -> mtree_insert_range
    kvm_smccc_filter_insert_reserved -> xa_mk_value
    kvm_smccc_filter_insert_reserved -> mtree_destroy
    mtree_insert_range [label="mtree_insert_range()"]
    xa_mk_value [label="xa_mk_value()"]
    kvm_vm_ioctl_get_reg_writable_masks [label="int kvm_vm_ioctl_get_reg_writable_masks (struct kvm *kvm, struct reg_mask_range *range)
arch/arm64/kvm/sys_regs.c:3750"]
    kvm_vm_ioctl_get_reg_writable_masks -> page_to_virt
    kvm_vm_ioctl_get_reg_writable_masks -> ZERO_PAGE
    kvm_vm_ioctl_get_reg_writable_masks -> memcmp
    kvm_vm_ioctl_get_reg_writable_masks -> clear_user
    kvm_vm_create_worker_thread [label="int kvm_vm_create_worker_thread (struct kvm *kvm, kvm_vm_thread_fn_t thread_fn, uintptr_t data, const char *name, struct task_struct **thread_ptr)
virt/kvm/kvm_main.c:6237"]
    kvm_vm_create_worker_thread -> init_completion
    kvm_vm_create_worker_thread -> kthread_run
    kvm_vm_create_worker_thread -> kvm_vm_worker_thread
    kvm_vm_create_worker_thread -> task_pid_nr
    kvm_vm_create_worker_thread -> IS_ERR
    kvm_vm_create_worker_thread -> PTR_ERR
    kvm_vm_create_worker_thread -> WARN_ON
    kvm_vm_create_worker_thread -> wait_for_completion
    init_completion [label="init_completion()"]
    kthread_run [label="kthread_run()"]
    kvm_vm_worker_thread [label="int kvm_vm_worker_thread (void *context)
virt/kvm/kvm_main.c:6173"]
    kvm_vm_worker_thread -> thread_fn
    kvm_vm_worker_thread -> kthread_park
    kvm_vm_worker_thread -> WARN_ON
    kvm_vm_worker_thread -> cgroup_attach_task_all
    kvm_vm_worker_thread -> kvm_err
    kvm_vm_worker_thread -> set_user_nice
    kvm_vm_worker_thread -> task_nice
    kvm_vm_worker_thread -> complete
    kvm_vm_worker_thread -> kthread_parkme
    kvm_vm_worker_thread -> kthread_should_stop
    kvm_vm_worker_thread -> rcu_read_lock
    kvm_vm_worker_thread -> rcu_dereference
    kvm_vm_worker_thread -> get_task_struct
    kvm_vm_worker_thread -> rcu_read_unlock
    kvm_vm_worker_thread -> put_task_struct
    thread_fn [label="thread_fn()"]
    kthread_park [label="kthread_park()"]
    cgroup_attach_task_all [label="cgroup_attach_task_all()"]
    set_user_nice [label="set_user_nice()"]
    task_nice [label="task_nice()"]
    complete [label="complete()"]
    kthread_parkme [label="kthread_parkme()"]
    kthread_should_stop [label="kthread_should_stop()"]
    wait_for_completion [label="wait_for_completion()"]
    kvm_vm_release [label="int kvm_vm_release (struct inode *inode, struct file *filp)
virt/kvm/kvm_main.c:1383"]
    kvm_vm_release -> kvm_irqfd_release
    kvm_vm_release -> kvm_put_kvm
    kvm_irqfd_release [label="void kvm_irqfd_release (struct kvm *kvm)
virt/kvm/eventfd.c:604"]
    kvm_irqfd_release -> spin_lock_irq
    kvm_irqfd_release -> list_for_each_entry_safe
    kvm_irqfd_release -> irqfd_deactivate
    kvm_irqfd_release -> spin_unlock_irq
    kvm_irqfd_release -> flush_workqueue
    kvm_vm_stats_read [label="ssize_t kvm_vm_stats_read (struct file *file, char __user *user_buffer, size_t size, loff_t *offset)
virt/kvm/kvm_main.c:4737"]
    kvm_vm_stats_read -> kvm_stats_read
    kvm_vm_stats_release [label="int kvm_vm_stats_release (struct inode *inode, struct file *file)
virt/kvm/kvm_main.c:4747"]
    kvm_vm_stats_release -> kvm_put_kvm
    kvm_write_guest_cached [label="int kvm_write_guest_cached (struct kvm *kvm, struct gfn_to_hva_cache *ghc, void *data, unsigned long len)
virt/kvm/kvm_main.c:3279"]
    kvm_write_guest_cached -> kvm_write_guest_offset_cached
    kvm_write_guest_offset_cached [label="int kvm_write_guest_offset_cached (struct kvm *kvm, struct gfn_to_hva_cache *ghc, void *data, unsigned int offset, unsigned long len)
virt/kvm/kvm_main.c:3248"]
    kvm_write_guest_offset_cached -> kvm_memslots
    kvm_write_guest_offset_cached -> WARN_ON_ONCE
    kvm_write_guest_offset_cached -> kvm_is_error_hva
    kvm_write_guest_offset_cached -> unlikely
    kvm_write_guest_offset_cached -> kvm_write_guest
    kvm_write_guest_offset_cached -> mark_page_dirty_in_slot
    kvm_write_guest [label="int kvm_write_guest (struct kvm *kvm, gpa_t gpa, const void *data, unsigned long len)
virt/kvm/kvm_main.c:3157"]
    kvm_write_guest -> offset_in_page
    kvm_write_guest -> next_segment
    kvm_write_guest -> kvm_write_guest_page
    mark_page_dirty [label="void mark_page_dirty (struct kvm *kvm, gfn_t gfn)
virt/kvm/kvm_main.c:3368"]
    mark_page_dirty -> gfn_to_memslot
    mark_page_dirty -> mark_page_dirty_in_slot
    mte_visibility [label="unsigned int mte_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1862"]
    mte_visibility -> kvm_has_mte
    nvhe_hyp_panic_handler [label="void __noreturn __cold nvhe_hyp_panic_handler (u64 esr, u64 spsr, u64 elr_virt, u64 elr_phys, u64 par, uintptr_t vcpu, u64 far, u64 hpfar)
arch/arm64/kvm/handle_exit.c:386"]
    nvhe_hyp_panic_handler -> kaslr_offset
    nvhe_hyp_panic_handler -> kvm_err
    nvhe_hyp_panic_handler -> ESR_ELx_EC
    nvhe_hyp_panic_handler -> is_protected_kvm_enabled
    nvhe_hyp_panic_handler -> IS_ENABLED
    nvhe_hyp_panic_handler -> find_bug
    nvhe_hyp_panic_handler -> bug_get_file_line
    nvhe_hyp_panic_handler -> kvm_nvhe_dump_backtrace
    nvhe_hyp_panic_handler -> panic
    kaslr_offset [label="kaslr_offset()"]
    find_bug [label="find_bug()"]
    bug_get_file_line [label="bug_get_file_line()"]
    kvm_nvhe_dump_backtrace [label="void kvm_nvhe_dump_backtrace (unsigned long hyp_offset)
arch/arm64/kvm/stacktrace.c:239"]
    kvm_nvhe_dump_backtrace -> is_protected_kvm_enabled
    kvm_nvhe_dump_backtrace -> pkvm_dump_backtrace
    kvm_nvhe_dump_backtrace -> hyp_dump_backtrace
    pkvm_dump_backtrace [label="void pkvm_dump_backtrace (unsigned long hyp_offset)
arch/arm64/kvm/stacktrace.c:228"]
    pkvm_dump_backtrace -> this_cpu_ptr_nvhe_sym
    pkvm_dump_backtrace -> kvm_nvhe_dump_backtrace_start
    pkvm_dump_backtrace -> ARRAY_SIZE
    pkvm_dump_backtrace -> kvm_nvhe_sym
    pkvm_dump_backtrace -> kvm_nvhe_dump_backtrace_entry
    pkvm_dump_backtrace -> kvm_nvhe_dump_backtrace_end
    pkvm_dump_backtrace -> kvm_err
    kvm_nvhe_dump_backtrace_start [label="void kvm_nvhe_dump_backtrace_start (void)
arch/arm64/kvm/stacktrace.c:158"]
    kvm_nvhe_dump_backtrace_start -> kvm_err
    kvm_nvhe_dump_backtrace_entry [label="bool kvm_nvhe_dump_backtrace_entry (void *arg, unsigned long where)
arch/arm64/kvm/stacktrace.c:146"]
    kvm_nvhe_dump_backtrace_entry -> GENMASK_ULL
    kvm_nvhe_dump_backtrace_entry -> kvm_err
    kvm_nvhe_dump_backtrace_entry -> kaslr_offset
    kvm_nvhe_dump_backtrace_end [label="void kvm_nvhe_dump_backtrace_end (void)
arch/arm64/kvm/stacktrace.c:163"]
    kvm_nvhe_dump_backtrace_end -> kvm_err
    hyp_dump_backtrace [label="void hyp_dump_backtrace (unsigned long hyp_offset)
arch/arm64/kvm/stacktrace.c:178"]
    hyp_dump_backtrace -> stackinfo_get_overflow_kern_va
    hyp_dump_backtrace -> stackinfo_get_hyp_kern_va
    hyp_dump_backtrace -> ARRAY_SIZE
    hyp_dump_backtrace -> this_cpu_ptr_nvhe_sym
    hyp_dump_backtrace -> kvm_nvhe_unwind_init
    hyp_dump_backtrace -> kvm_nvhe_dump_backtrace_start
    hyp_dump_backtrace -> unwind
    hyp_dump_backtrace -> kvm_nvhe_dump_backtrace_entry
    hyp_dump_backtrace -> kvm_nvhe_dump_backtrace_end
    stackinfo_get_overflow_kern_va [label="struct stack_info stackinfo_get_overflow_kern_va (void)
arch/arm64/kvm/stacktrace.c:37"]
    stackinfo_get_overflow_kern_va -> this_cpu_ptr_nvhe_sym
    stackinfo_get_hyp_kern_va [label="struct stack_info stackinfo_get_hyp_kern_va (void)
arch/arm64/kvm/stacktrace.c:61"]
    stackinfo_get_hyp_kern_va -> this_cpu_ptr
    kvm_nvhe_unwind_init [label="kvm_nvhe_unwind_init()"]
    unwind [label="void unwind (struct unwind_state *state, stack_trace_consume_fn consume_entry, void *cookie)
arch/arm64/kvm/stacktrace.c:126"]
    unwind -> unwind_next
    unwind_next [label="int unwind_next (struct unwind_state *state)
arch/arm64/kvm/stacktrace.c:114"]
    unwind_next -> kvm_nvhe_stack_kern_record_va
    unwind_next -> unwind_next_frame_record
    kvm_nvhe_stack_kern_record_va [label="bool kvm_nvhe_stack_kern_record_va (unsigned long *addr)
arch/arm64/kvm/stacktrace.c:109"]
    kvm_nvhe_stack_kern_record_va -> kvm_nvhe_stack_kern_va
    kvm_nvhe_stack_kern_va [label="bool kvm_nvhe_stack_kern_va (unsigned long *addr, unsigned long size)
arch/arm64/kvm/stacktrace.c:85"]
    kvm_nvhe_stack_kern_va -> stackinfo_get_hyp
    kvm_nvhe_stack_kern_va -> stackinfo_get_hyp_kern_va
    kvm_nvhe_stack_kern_va -> stackinfo_on_stack
    kvm_nvhe_stack_kern_va -> stackinfo_get_overflow
    kvm_nvhe_stack_kern_va -> stackinfo_get_overflow_kern_va
    stackinfo_get_hyp [label="struct stack_info stackinfo_get_hyp (void)
arch/arm64/kvm/stacktrace.c:48"]
    stackinfo_get_hyp -> this_cpu_ptr_nvhe_sym
    stackinfo_on_stack [label="stackinfo_on_stack()"]
    stackinfo_get_overflow [label="struct stack_info stackinfo_get_overflow (void)
arch/arm64/kvm/stacktrace.c:24"]
    stackinfo_get_overflow -> this_cpu_ptr_nvhe_sym
    unwind_next_frame_record [label="unwind_next_frame_record()"]
    panic [label="panic()"]
    pmu_visibility [label="unsigned int pmu_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:711"]
    pmu_visibility -> kvm_vcpu_has_pmu
    print_nv_trap_error [label="__init void print_nv_trap_error (const struct encoding_to_trap_config *tc, const char *type, int err)
arch/arm64/kvm/emulate-nested.c:1686"]
    print_nv_trap_error -> kvm_err
    print_nv_trap_error -> sys_reg_Op0
    print_nv_trap_error -> sys_reg_Op1
    print_nv_trap_error -> sys_reg_CRn
    print_nv_trap_error -> sys_reg_CRm
    print_nv_trap_error -> sys_reg_Op2
    sys_reg_Op2 [label="sys_reg_Op2()"]
    ptrauth_visibility [label="unsigned int ptrauth_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1222"]
    ptrauth_visibility -> vcpu_has_ptrauth
    raz_visibility [label="unsigned int raz_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1492"]
    read_sanitised_id_aa64dfr0_el1 [label="u64 read_sanitised_id_aa64dfr0_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1568"]
    read_sanitised_id_aa64dfr0_el1 -> read_sanitised_ftr_reg
    read_sanitised_id_aa64dfr0_el1 -> ID_REG_LIMIT_FIELD_ENUM
    read_sanitised_id_aa64dfr0_el1 -> kvm_vcpu_has_pmu
    read_sanitised_id_aa64dfr0_el1 -> SYS_FIELD_PREP
    read_sanitised_id_aa64dfr0_el1 -> kvm_arm_pmu_get_pmuver_limit
    ID_REG_LIMIT_FIELD_ENUM [label="ID_REG_LIMIT_FIELD_ENUM()"]
    read_sanitised_id_aa64pfr0_el1 [label="u64 read_sanitised_id_aa64pfr0_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1524"]
    read_sanitised_id_aa64pfr0_el1 -> read_sanitised_ftr_reg
    read_sanitised_id_aa64pfr0_el1 -> vcpu_has_sve
    read_sanitised_id_aa64pfr0_el1 -> arm64_get_spectre_v2_state
    read_sanitised_id_aa64pfr0_el1 -> SYS_FIELD_PREP_ENUM
    read_sanitised_id_aa64pfr0_el1 -> arm64_get_meltdown_state
    SYS_FIELD_PREP_ENUM [label="SYS_FIELD_PREP_ENUM()"]
    read_sanitised_id_dfr0_el1 [label="u64 read_sanitised_id_dfr0_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1623"]
    read_sanitised_id_dfr0_el1 -> pmuver_to_perfmon
    read_sanitised_id_dfr0_el1 -> kvm_arm_pmu_get_pmuver_limit
    read_sanitised_id_dfr0_el1 -> read_sanitised_ftr_reg
    read_sanitised_id_dfr0_el1 -> kvm_vcpu_has_pmu
    read_sanitised_id_dfr0_el1 -> SYS_FIELD_PREP
    read_sanitised_id_dfr0_el1 -> ID_REG_LIMIT_FIELD_ENUM
    pmuver_to_perfmon [label="u8 pmuver_to_perfmon (u8 pmuver)
arch/arm64/kvm/sys_regs.c:1377"]
    reset_actlr [label="u64 reset_actlr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:684"]
    reset_actlr -> read_sysreg
    reset_actlr -> vcpu_write_sys_reg
    reset_amair_el1 [label="u64 reset_amair_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:677"]
    reset_amair_el1 -> read_sysreg
    reset_amair_el1 -> vcpu_write_sys_reg
    reset_bcr [label="u64 reset_bcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:595"]
    reset_bvr [label="u64 reset_bvr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:558"]
    reset_clidr [label="u64 reset_clidr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1768"]
    reset_clidr -> read_sanitised_ftr_reg
    reset_clidr -> CLIDR_CTYPE_SHIFT
    reset_clidr -> kvm_has_mte
    reset_clidr -> CLIDR_TTYPE_SHIFT
    CLIDR_CTYPE_SHIFT [label="CLIDR_CTYPE_SHIFT()"]
    CLIDR_TTYPE_SHIFT [label="CLIDR_TTYPE_SHIFT()"]
    reset_mpidr [label="u64 reset_mpidr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:691"]
    reset_mpidr -> MPIDR_LEVEL_SHIFT
    reset_mpidr -> vcpu_write_sys_reg
    MPIDR_LEVEL_SHIFT [label="MPIDR_LEVEL_SHIFT()"]
    reset_pmcr [label="u64 reset_pmcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:762"]
    reset_pmcr -> kvm_supports_32bit_el0
    reset_pmevcntr [label="u64 reset_pmevcntr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:734"]
    reset_pmevcntr -> reset_unknown
    reset_pmevcntr -> GENMASK
    reset_unknown [label="reset_unknown()"]
    reset_pmevtyper [label="u64 reset_pmevtyper (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:742"]
    reset_pmevtyper -> kvm_vcpu_has_pmu
    reset_pmevtyper -> reset_unknown
    reset_pmevtyper -> kvm_pmu_evtyper_mask
    reset_pmselr [label="u64 reset_pmselr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:754"]
    reset_pmselr -> reset_unknown
    reset_pmu_reg [label="u64 reset_pmu_reg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:720"]
    reset_pmu_reg -> BIT
    reset_pmu_reg -> GENMASK
    reset_pmu_reg -> reset_unknown
    reset_wcr [label="u64 reset_wcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:670"]
    reset_wvr [label="u64 reset_wvr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:633"]
    set_bcr [label="int set_bcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:581"]
    set_bvr [label="int set_bvr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:544"]
    set_clidr [label="int set_clidr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:1820"]
    set_clidr -> read_sanitised_ftr_reg
    set_clidr -> CLIDR_LOC
    set_clidr -> CLIDR_LOUIS
    set_clidr -> CLIDR_LOUU
    CLIDR_LOC [label="CLIDR_LOC()"]
    CLIDR_LOUIS [label="CLIDR_LOUIS()"]
    CLIDR_LOUU [label="CLIDR_LOUU()"]
    set_gic_ap0r [label="int set_gic_ap0r (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:228"]
    set_gic_ap0r -> vgic_v3_max_apr_idx
    set_gic_ap0r -> set_apr_reg
    set_apr_reg [label="void set_apr_reg (struct kvm_vcpu *vcpu, u64 val, u8 apr, u8 idx)
arch/arm64/kvm/vgic-sys-reg-v3.c:208"]
    set_gic_ap1r [label="int set_gic_ap1r (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:254"]
    set_gic_ap1r -> vgic_v3_max_apr_idx
    set_gic_ap1r -> set_apr_reg
    set_gic_bpr0 [label="int set_gic_bpr0 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:110"]
    set_gic_bpr0 -> vgic_get_vmcr
    set_gic_bpr0 -> FIELD_GET
    set_gic_bpr0 -> vgic_set_vmcr
    vgic_set_vmcr [label="vgic_set_vmcr()"]
    set_gic_bpr1 [label="int set_gic_bpr1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:133"]
    set_gic_bpr1 -> vgic_get_vmcr
    set_gic_bpr1 -> FIELD_GET
    set_gic_bpr1 -> vgic_set_vmcr
    set_gic_ctlr [label="int set_gic_ctlr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:13"]
    set_gic_ctlr -> vgic_get_vmcr
    set_gic_ctlr -> FIELD_GET
    set_gic_ctlr -> vgic_set_vmcr
    set_gic_grpen0 [label="int set_gic_grpen0 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:162"]
    set_gic_grpen0 -> vgic_get_vmcr
    set_gic_grpen0 -> FIELD_GET
    set_gic_grpen0 -> vgic_set_vmcr
    set_gic_grpen1 [label="int set_gic_grpen1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:185"]
    set_gic_grpen1 -> vgic_get_vmcr
    set_gic_grpen1 -> FIELD_GET
    set_gic_grpen1 -> vgic_set_vmcr
    set_gic_pmr [label="int set_gic_pmr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:87"]
    set_gic_pmr -> vgic_get_vmcr
    set_gic_pmr -> FIELD_GET
    set_gic_pmr -> vgic_set_vmcr
    set_gic_sre [label="int set_gic_sre (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/vgic-sys-reg-v3.c:280"]
    set_id_aa64dfr0_el1 [label="int set_id_aa64dfr0_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:1589"]
    set_id_aa64dfr0_el1 -> SYS_FIELD_GET
    set_id_aa64dfr0_el1 -> set_id_reg
    set_id_reg [label="int set_id_reg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:1691"]
    set_id_reg -> reg_to_encoding
    set_id_reg -> mutex_lock
    set_id_reg -> kvm_vm_has_ran_once
    set_id_reg -> read_id_reg
    set_id_reg -> mutex_unlock
    set_id_reg -> arm64_check_features
    set_id_reg -> IDREG
    arm64_check_features [label="int arm64_check_features (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:1324"]
    arm64_check_features -> reg_to_encoding
    arm64_check_features -> sysreg_visible_as_raz
    arm64_check_features -> get_arm64_ftr_reg
    arm64_check_features -> arm64_ftr_mask
    arm64_check_features -> arm64_ftr_value
    arm64_check_features -> kvm_arm64_ftr_safe_value
    sysreg_visible_as_raz [label="sysreg_visible_as_raz()"]
    get_arm64_ftr_reg [label="get_arm64_ftr_reg()"]
    arm64_ftr_mask [label="arm64_ftr_mask()"]
    arm64_ftr_value [label="arm64_ftr_value()"]
    kvm_arm64_ftr_safe_value [label="s64 kvm_arm64_ftr_safe_value (u32 id, const struct arm64_ftr_bits *ftrp, s64 new, s64 cur)
arch/arm64/kvm/sys_regs.c:1286"]
    kvm_arm64_ftr_safe_value -> arm64_ftr_safe_value
    arm64_ftr_safe_value [label="arm64_ftr_safe_value()"]
    set_id_dfr0_el1 [label="int set_id_dfr0_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:1638"]
    set_id_dfr0_el1 -> SYS_FIELD_GET
    set_id_dfr0_el1 -> set_id_reg
    set_oslsr_el1 [label="int set_oslsr_el1 (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:425"]
    set_pmcr [label="int set_pmcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/sys_regs.c:1143"]
    set_pmcr -> mutex_lock
    set_pmcr -> kvm_vm_has_ran_once
    set_pmcr -> kvm_arm_pmu_get_max_counters
    set_pmcr -> mutex_unlock
    set_pmcr -> kvm_supports_32bit_el0
    set_pmreg [label="int set_pmreg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *r, u64 val)
arch/arm64/kvm/sys_regs.c:994"]
    set_pmreg -> bool
    set_pmreg -> kvm_pmu_valid_counter_mask
    set_wcr [label="int set_wcr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:656"]
    set_wi_reg [label="int set_wi_reg (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:1738"]
    set_wvr [label="int set_wvr (struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd, u64 val)
arch/arm64/kvm/sys_regs.c:619"]
    stage2_free_unlinked_table [label="void stage2_free_unlinked_table (void *addr, u32 level)
arch/arm64/kvm/mmu.c:231"]
    stage2_free_unlinked_table -> virt_to_page
    stage2_free_unlinked_table -> set_page_private
    stage2_free_unlinked_table -> call_rcu
    stage2_free_unlinked_table -> stage2_free_unlinked_table_rcu_cb
    set_page_private [label="set_page_private()"]
    call_rcu [label="call_rcu()"]
    stage2_free_unlinked_table_rcu_cb [label="void stage2_free_unlinked_table_rcu_cb (struct rcu_head *head)
arch/arm64/kvm/mmu.c:222"]
    stage2_free_unlinked_table_rcu_cb -> container_of
    stage2_free_unlinked_table_rcu_cb -> page_to_virt
    stage2_free_unlinked_table_rcu_cb -> page_private
    stage2_free_unlinked_table_rcu_cb -> kvm_pgtable_stage2_free_unlinked
    page_private [label="page_private()"]
    kvm_pgtable_stage2_free_unlinked [label="kvm_pgtable_stage2_free_unlinked()"]
    stage2_memcache_zalloc_page [label="void *stage2_memcache_zalloc_page (void *arg)
arch/arm64/kvm/mmu.c:188"]
    stage2_memcache_zalloc_page -> kvm_mmu_memory_cache_alloc
    stage2_memcache_zalloc_page -> kvm_account_pgtable_pages
    kvm_mmu_memory_cache_alloc [label="void *kvm_mmu_memory_cache_alloc (struct kvm_mmu_memory_cache *mc)
virt/kvm/kvm_main.c:469"]
    kvm_mmu_memory_cache_alloc -> WARN_ON
    kvm_mmu_memory_cache_alloc -> mmu_memory_cache_alloc_obj
    kvm_mmu_memory_cache_alloc -> BUG_ON
    mmu_memory_cache_alloc_obj [label="inline void *mmu_memory_cache_alloc_obj (struct kvm_mmu_memory_cache *mc, gfp_t gfp_flags)
virt/kvm/kvm_main.c:401"]
    mmu_memory_cache_alloc_obj -> kmem_cache_alloc
    kmem_cache_alloc [label="kmem_cache_alloc()"]
    sve_visibility [label="unsigned int sve_visibility (const struct kvm_vcpu *vcpu, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:1515"]
    sve_visibility -> vcpu_has_sve
    timer_irq_ack [label="void timer_irq_ack (struct irq_data *d)
arch/arm64/kvm/arch_timer.c:1273"]
    timer_irq_domain_alloc [label="int timer_irq_domain_alloc (struct irq_domain *domain, unsigned int virq, unsigned int nr_irqs, void *arg)
arch/arm64/kvm/arch_timer.c:1291"]
    timer_irq_domain_alloc -> irq_domain_set_hwirq_and_chip
    irq_domain_set_hwirq_and_chip [label="irq_domain_set_hwirq_and_chip()"]
    timer_irq_domain_free [label="void timer_irq_domain_free (struct irq_domain *domain, unsigned int virq, unsigned int nr_irqs)
arch/arm64/kvm/arch_timer.c:1300"]
    timer_irq_eoi [label="void timer_irq_eoi (struct irq_data *d)
arch/arm64/kvm/arch_timer.c:1267"]
    timer_irq_eoi -> irqd_is_forwarded_to_vcpu
    timer_irq_eoi -> irq_chip_eoi_parent
    irqd_is_forwarded_to_vcpu [label="irqd_is_forwarded_to_vcpu()"]
    irq_chip_eoi_parent [label="irq_chip_eoi_parent()"]
    timer_irq_set_irqchip_state [label="int timer_irq_set_irqchip_state (struct irq_data *d, enum irqchip_irq_state which, bool val)
arch/arm64/kvm/arch_timer.c:1253"]
    timer_irq_set_irqchip_state -> irqd_is_forwarded_to_vcpu
    timer_irq_set_irqchip_state -> irq_chip_set_parent_state
    timer_irq_set_irqchip_state -> irq_chip_mask_parent
    timer_irq_set_irqchip_state -> irq_chip_unmask_parent
    irq_chip_set_parent_state [label="irq_chip_set_parent_state()"]
    irq_chip_mask_parent [label="irq_chip_mask_parent()"]
    irq_chip_unmask_parent [label="irq_chip_unmask_parent()"]
    timer_irq_set_vcpu_affinity [label="int timer_irq_set_vcpu_affinity (struct irq_data *d, void *vcpu)
arch/arm64/kvm/arch_timer.c:1243"]
    timer_irq_set_vcpu_affinity -> irqd_set_forwarded_to_vcpu
    timer_irq_set_vcpu_affinity -> irqd_clr_forwarded_to_vcpu
    irqd_set_forwarded_to_vcpu [label="irqd_set_forwarded_to_vcpu()"]
    irqd_clr_forwarded_to_vcpu [label="irqd_clr_forwarded_to_vcpu()"]
    topup_hyp_memcache [label="int topup_hyp_memcache (struct kvm_hyp_memcache *mc, unsigned long min_pages)
arch/arm64/kvm/mmu.c:1046"]
    topup_hyp_memcache -> is_protected_kvm_enabled
    topup_hyp_memcache -> hyp_mc_alloc_fn
    topup_hyp_memcache -> kvm_host_pa
    hyp_mc_alloc_fn [label="void *hyp_mc_alloc_fn (void *unused)
arch/arm64/kvm/mmu.c:1034"]
    kvm_host_pa [label="phys_addr_t kvm_host_pa (void *addr)
arch/arm64/kvm/mmu.c:263"]
    trap_bcr [label="bool trap_bcr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:565"]
    trap_bcr -> reg_to_dbg
    trap_bcr -> dbg_to_reg
    trap_bcr -> trace_trap_reg
    reg_to_dbg [label="void reg_to_dbg (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *rd, u64 *dbg_reg)
arch/arm64/kvm/sys_regs.c:500"]
    reg_to_dbg -> get_access_mask
    reg_to_dbg -> vcpu_set_flag
    dbg_to_reg [label="void dbg_to_reg (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *rd, u64 *dbg_reg)
arch/arm64/kvm/sys_regs.c:517"]
    dbg_to_reg -> get_access_mask
    trace_trap_reg [label="trace_trap_reg()"]
    trap_bvr [label="bool trap_bvr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:528"]
    trap_bvr -> reg_to_dbg
    trap_bvr -> dbg_to_reg
    trap_bvr -> trace_trap_reg
    trap_dbgauthstatus_el1 [label="bool trap_dbgauthstatus_el1 (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:439"]
    trap_dbgauthstatus_el1 -> ignore_write
    trap_dbgauthstatus_el1 -> read_sysreg
    trap_dbgdidr [label="bool trap_dbgdidr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:2593"]
    trap_dbgdidr -> ignore_write
    trap_dbgdidr -> IDREG
    trap_dbgdidr -> SYS_FIELD_GET
    trap_debug_regs [label="bool trap_debug_regs (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:478"]
    trap_debug_regs -> access_rw
    trap_debug_regs -> vcpu_set_flag
    trap_debug_regs -> trace_trap_reg
    access_rw [label="bool access_rw (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:181"]
    access_rw -> vcpu_write_sys_reg
    access_rw -> vcpu_read_sys_reg
    trap_loregion [label="bool trap_loregion (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:378"]
    trap_loregion -> IDREG
    trap_loregion -> reg_to_encoding
    trap_loregion -> kvm_inject_undefined
    trap_loregion -> write_to_read_only
    trap_loregion -> trap_raz_wi
    trap_raz_wi [label="bool trap_raz_wi (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:354"]
    trap_raz_wi -> ignore_write
    trap_raz_wi -> read_zero
    read_zero [label="read_zero()"]
    trap_oslar_el1 [label="bool trap_oslar_el1 (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:396"]
    trap_oslar_el1 -> read_from_write_only
    trap_oslsr_el1 [label="bool trap_oslsr_el1 (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:414"]
    trap_oslsr_el1 -> write_to_read_only
    trap_undef [label="bool trap_undef (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:364"]
    trap_undef -> kvm_inject_undefined
    trap_wcr [label="bool trap_wcr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:640"]
    trap_wcr -> reg_to_dbg
    trap_wcr -> dbg_to_reg
    trap_wcr -> trace_trap_reg
    trap_wvr [label="bool trap_wvr (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *rd)
arch/arm64/kvm/sys_regs.c:602"]
    trap_wvr -> reg_to_dbg
    trap_wvr -> dbg_to_reg
    trap_wvr -> trace_trap_reg
    undef_access [label="bool undef_access (struct kvm_vcpu *vcpu, struct sys_reg_params *p, const struct sys_reg_desc *r)
arch/arm64/kvm/sys_regs.c:1208"]
    undef_access -> kvm_inject_undefined
    vcpu_get_pid [label="int vcpu_get_pid (void *data, u64 *val)
virt/kvm/kvm_main.c:3903"]
    vcpu_get_pid -> rcu_read_lock
    vcpu_get_pid -> pid_nr
    vcpu_get_pid -> rcu_dereference
    vcpu_get_pid -> rcu_read_unlock
    pid_nr [label="pid_nr()"]
    vcpu_stat_clear [label="int vcpu_stat_clear (void *_offset, u64 val)
virt/kvm/kvm_main.c:5842"]
    vcpu_stat_clear -> mutex_lock
    vcpu_stat_clear -> list_for_each_entry
    vcpu_stat_clear -> kvm_clear_stat_per_vcpu
    vcpu_stat_clear -> mutex_unlock
    vcpu_stat_get [label="int vcpu_stat_get (void *_offset, u64 *val)
virt/kvm/kvm_main.c:5826"]
    vcpu_stat_get -> mutex_lock
    vcpu_stat_get -> list_for_each_entry
    vcpu_stat_get -> kvm_get_stat_per_vcpu
    vcpu_stat_get -> mutex_unlock
    vgic_v3_cpu_sysregs_uaccess [label="int vgic_v3_cpu_sysregs_uaccess (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr, bool is_write)
arch/arm64/kvm/vgic-sys-reg-v3.c:351"]
    vgic_v3_cpu_sysregs_uaccess -> attr_to_id
    vgic_v3_cpu_sysregs_uaccess -> kvm_sys_reg_set_user
    vgic_v3_cpu_sysregs_uaccess -> ARRAY_SIZE
    vgic_v3_cpu_sysregs_uaccess -> kvm_sys_reg_get_user
    attr_to_id [label="u64 attr_to_id (u64 attr)
arch/arm64/kvm/vgic-sys-reg-v3.c:333"]
    attr_to_id -> ARM64_SYS_REG
    attr_to_id -> FIELD_GET
    ARM64_SYS_REG [label="ARM64_SYS_REG()"]
    vgic_v3_has_cpu_sysregs_attr [label="int vgic_v3_has_cpu_sysregs_attr (struct kvm_vcpu *vcpu, struct kvm_device_attr *attr)
arch/arm64/kvm/vgic-sys-reg-v3.c:342"]
    vgic_v3_has_cpu_sysregs_attr -> get_reg_by_id
    vgic_v3_has_cpu_sysregs_attr -> attr_to_id
    vgic_v3_has_cpu_sysregs_attr -> ARRAY_SIZE
    vm_stat_clear [label="int vm_stat_clear (void *_offset, u64 val)
virt/kvm/kvm_main.c:5806"]
    vm_stat_clear -> mutex_lock
    vm_stat_clear -> list_for_each_entry
    vm_stat_clear -> kvm_clear_stat_per_vm
    vm_stat_clear -> mutex_unlock
    vm_stat_get [label="int vm_stat_get (void *_offset, u64 *val)
virt/kvm/kvm_main.c:5790"]
    vm_stat_get -> mutex_lock
    vm_stat_get -> list_for_each_entry
    vm_stat_get -> kvm_get_stat_per_vm
    vm_stat_get -> mutex_unlock
}
